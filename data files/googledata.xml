<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<AIMind>
  <Root id="0"/>
  <Features>
    <Feature data="Google" zh-data="Google" id="1" uri="http://dbpedia.org/resource/Google">
      <neighbors>
        <neighbor dest="2" relationship="founded by" weight="0"/>
        <neighbor dest="3" relationship="founded by" weight="0"/>
        <neighbor dest="4" relationship="industry" weight="0"/>
        <neighbor dest="5" relationship="location city" weight="0"/>
        <neighbor dest="6" relationship="location city" weight="0"/>
        <neighbor dest="7" relationship="traded as" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="9" relationship="industry" weight="0"/>
        <neighbor dest="10" relationship="foundation place" weight="0"/>
        <neighbor dest="11" relationship="product" weight="0"/>
        <neighbor dest="12" relationship="location city" weight="0"/>
        <neighbor dest="13" relationship="traded as" weight="0"/>
      </neighbors>
      <speak>Google Inc. is an American multinational corporation which provides Internet-related products and services, including Internet search, cloud computing, software and advertising technologies.</speak>
      <zh-speak>Google公司（英语：Google Inc.，NASDAQ：GOOGL、NASDAQ：GOOG、FWB：GGQ1，官方中文译名为谷歌、科高），是一家美国的跨国科技企业，业务范围涵盖互联网搜索、云计算、广告技术等领域，开发并提供大量基于互联网的产品与服务，其主要利润来自于AdWords等广告服务。 Google由当时在斯坦福大学攻读理工博士的拉里·佩奇和谢尔盖·布林共同创建，因此两人也被称为“Google Guys”。1998年9月4日，Google以私营公司的形式创立，设计并管理一个互联网搜索引擎“Google搜索”；Google网站则於1999年下半年启用。2004年8月19日，Google公司的股票在纳斯达克上市，后来被称为“三驾马车”的公司两位共同创始人与出任首席执行官的埃里克·施密特在当时承诺：共同在Google工作至少二十年，即至2024年止。创始之初，Google官方的公司使命为“整合全球范围的信息，使人人皆可访问并从中受益”（To organize the world's information and make it universally accessible and useful）；而非正式的口号则为“不作恶”（Don't be evil），由工程师阿米特·帕特尔（Amit Patel）所创，并得到了保罗·布赫海特的支持。 Google公司的总部称为“Googleplex”，位于美国加州圣克拉拉县的山景城。2011年4月，佩奇接替施密特擔任首席执行官。据估计，Google在全世界的数据中心内运营着超过百万台的服务器，每天处理数以亿计的搜索请求和约二十四PB用户生成的数据。 Google自创立起开始的快速成长同时也带动了一系列的产品研发、并购事项与合作关系，而不仅仅是公司核心的网络搜索业务。Google公司提供丰富的线上软件服务，如雲端硬碟、Gmail电子邮件，包括Orkut、Google Buzz以及Google+在内的社交网络服务。Google的产品同时也以应用软件的形式进入用户桌面，例如Google Chrome网页浏览器、Picasa图片整理与编辑软件、Google Talk即时通讯工具等。另外，Google还进行了移动设备的Android操作系统以及上网本的Google Chrome OS操作系统的开发。网站资讯分析网Alexa数据显示，Google的主域名google.com为全世界访问量最高的站点，除此之外，Google搜索在其他国家或地区域名下的多个站点（google.co.in、google.de、google.com.hk等等），及旗下的YouTube、Blogger、Orkut等的访问量都在前一百名之内。其中，社交网络服务Orkut已于2014年9月被关闭。</zh-speak>
    </Feature>
    <Feature data="Larry Page" zh-data="拉里·佩奇" id="2" uri="http://dbpedia.org/resource/Larry_Page">
      <neighbors>
        <neighbor dest="6" relationship="residence" weight="0"/>
        <neighbor dest="76" relationship="residence" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="78" relationship="birth place" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="80" relationship="religion" weight="0"/>
        <neighbor dest="81" relationship="occupation" weight="0"/>
        <neighbor dest="82" relationship="known for" weight="0"/>
        <neighbor dest="83" relationship="alma mater" weight="0"/>
        <neighbor dest="84" relationship="occupation" weight="0"/>
        <neighbor dest="85" relationship="known for" weight="0"/>
        <neighbor dest="86" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Lawrence "Larry" Page  and was elected to the National Academy of Engineering in 2004. Page received the Marconi Prize in 2004.</speak>
      <zh-speak>劳伦斯·爱德华·“拉里”·佩奇（Lawrence Edward "Larry" Page，1973年3月26日－），搜索引擎Google的创始人之一，现为Google公司的产品總監兼任CEO。2011年一月施密特卸任CEO，拉里·佩奇接替。截至2014年12月8月12日佩奇持有Google23,220,246股B類股票和23,220,246股C類股票，谷歌每股B類股票可以轉化成1股A類股票。</zh-speak>
    </Feature>
    <Feature data="Sergey Brin" zh-data="谢尔盖·布林" id="3" uri="http://dbpedia.org/resource/Sergey_Brin">
      <neighbors>
        <neighbor dest="1" relationship="known for" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="91" relationship="residence" weight="0"/>
        <neighbor dest="92" relationship="birth place" weight="0"/>
        <neighbor dest="93" relationship="birth place" weight="0"/>
        <neighbor dest="94" relationship="alma mater" weight="0"/>
        <neighbor dest="95" relationship="partner" weight="0"/>
      </neighbors>
      <speak>Sergey Mikhaylovich Brin  is an American computer scientist and internet entrepreneur who, together with Larry Page, co-founded Google, one of the most profitable Internet companies.</speak>
      <zh-speak>谢尔盖（或譯謝吉）·米哈伊洛维奇·布林 （英语：Sergey Mikhaylovich Brin，俄语：Сергей Михайлович Брин，1973年8月21日－）是一位苏联出生的美国籍犹太裔電腦工程師兼企业家，並与拉里·佩奇合作建立以搜索引擎和線上廣告技術聞名、世界最大的網路公司Google。布林出生在苏联，大約在6歲時與父母移居至美國，之後於馬里蘭大學學院市分校上學，並沿著其祖父與父親的腳步學習数学，同時雙修了计算机科学。畢業後，謝爾蓋進入史丹佛大學。不过，布林在史丹佛攻读博士期间选择了休学，與在史丹佛結識了拉里·佩奇。兩人開始使用宿舍裡廉價的主機，應用布林所設計的資料探勘系統為基礎，試圖編寫出一個卓越的搜尋引擎。隨著這項計劃越來越有成功的可能性，兩人遂先暫停其在史丹佛的大學學業，在从苏珊·沃西基（后成为Google高级副总裁）借來的車庫裡持續發展Google。</zh-speak>
    </Feature>
    <Feature data="Software" zh-data="软件" id="4" uri="http://dbpedia.org/resource/Software">
      <neighbors/>
      <speak>Computer software, or simply software is any set of machine-readable instructions that directs a computer's processor to perform specific operations.</speak>
      <zh-speak>軟體（英语：software）是一系列按照特定顺序组织的電腦数据和指令的集合，是電腦中的非有形部份。電腦中的有形部份稱為硬體，由電腦的外殼及各零件及電路所組成。電腦軟體需有硬體才能運作，反之亦然，軟體和硬體都無法在不互相配合的情形下進行實際的運作。一般来說，计算机软件被划分为程式語言、系统软件、应用软件和介于这两者之间的中介軟體。其中系统软件为计算机使用提供最基本的功能，但是并不针对某一特定应用领域。而应用软件则恰好相反，不同的应用软件根据用户和所服务的领域提供不同的功能。软件包括所有在電腦執行的程式，和其架構無關，例如執行檔、函式庫及腳本語言都屬於软件。軟體不分架構，有其共通的特性，在執行後可以讓硬體執行依設計時要求的機能。軟體儲存在記憶體中，軟體不是可以碰觸到的實體，可以碰觸到的都只是儲存軟體的零件（記憶體）或是媒介（光碟或磁片等）。软件并不一定只包括可以在计算机上运行的電腦程式，有些定義中，与電腦程式相关的文档，一般也被认为是软件的一部分。简单的说软件就是程式加文档的集合体。软件被应用于世界的各个领域，对人们的生活和工作都产生了深远的影响。</zh-speak>
    </Feature>
    <Feature data="Googleplex" zh-data="Googleplex" id="5" uri="http://dbpedia.org/resource/Googleplex">
      <neighbors/>
      <speak>The Googleplex is the corporate headquarters complex of Google, Inc., located at 1600 Amphitheatre Parkway in Mountain View, Santa Clara County, California, United States, near San Jose.The original complex with 2 million square feet of office space is the company's second largest square footage assemblage of Google buildings .</speak>
      <zh-speak>Googleplex，是Google公司总部的名字，位于美国加州圣克拉拉县的山景城，离旧金山很近。“Googleplex”来源于英文单词“googolplex”（古戈爾普勒克斯），而「Google」转变于单词“googol”（古戈爾）。古戈爾普勒克斯指的是1010100，即1後面有古戈爾个0的自然数。</zh-speak>
    </Feature>
    <Feature data="California" zh-data="加利福尼亚州" id="6" uri="http://dbpedia.org/resource/California">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="116" relationship="Flower" weight="0"/>
        <neighbor dest="117" relationship="LargestMetro" weight="0"/>
        <neighbor dest="118" relationship="Caption" weight="0"/>
        <neighbor dest="119" relationship="FolkDance" weight="0"/>
        <neighbor dest="120" relationship="Caption" weight="0"/>
        <neighbor dest="121" relationship="language" weight="0"/>
        <neighbor dest="122" relationship="Mineral" weight="0"/>
        <neighbor dest="123" relationship="language" weight="0"/>
        <neighbor dest="124" relationship="language" weight="0"/>
        <neighbor dest="125" relationship="Marine Mammal" weight="0"/>
        <neighbor dest="126" relationship="largest city" weight="0"/>
        <neighbor dest="127" relationship="capital" weight="0"/>
        <neighbor dest="128" relationship="language" weight="0"/>
        <neighbor dest="129" relationship="Gemstone" weight="0"/>
        <neighbor dest="130" relationship="Tartan" weight="0"/>
        <neighbor dest="131" relationship="Amphibian" weight="0"/>
        <neighbor dest="132" relationship="Reptile" weight="0"/>
        <neighbor dest="133" relationship="language" weight="0"/>
        <neighbor dest="134" relationship="Flaglink" weight="0"/>
        <neighbor dest="135" relationship="Marine Fish" weight="0"/>
        <neighbor dest="136" relationship="Fish" weight="0"/>
        <neighbor dest="137" relationship="Mammal" weight="0"/>
        <neighbor dest="138" relationship="StateAnthem" weight="0"/>
        <neighbor dest="139" relationship="title" weight="0"/>
        <neighbor dest="140" relationship="HighestPoint" weight="0"/>
        <neighbor dest="141" relationship="language" weight="0"/>
        <neighbor dest="142" relationship="Grass" weight="0"/>
        <neighbor dest="143" relationship="TZDesc" weight="0"/>
        <neighbor dest="144" relationship="Soil" weight="0"/>
        <neighbor dest="145" relationship="Rock" weight="0"/>
        <neighbor dest="146" relationship="Rock" weight="0"/>
        <neighbor dest="147" relationship="Fossil" weight="0"/>
        <neighbor dest="148" relationship="Insect" weight="0"/>
        <neighbor dest="149" relationship="Bird" weight="0"/>
        <neighbor dest="150" relationship="Motto" weight="0"/>
        <neighbor dest="151" relationship="Tree" weight="0"/>
        <neighbor dest="152" relationship="Senators" weight="0"/>
        <neighbor dest="153" relationship="Lowerhouse" weight="0"/>
        <neighbor dest="154" relationship="Legislature" weight="0"/>
        <neighbor dest="155" relationship="Upperhouse" weight="0"/>
        <neighbor dest="156" relationship="Senators" weight="0"/>
        <neighbor dest="157" relationship="Dance" weight="0"/>
      </neighbors>
      <speak>California . Earthquakes are a common occurrence because of the state's location along the Pacific Ring of Fire: about 37,000 are recorded annually, but most are too small to feel.At least half of the fruit produced in the United States is now cultivated in California, and the state also leads in the production of vegetables.</speak>
      <zh-speak>加利福尼亚州（英语：State of California，簡稱加州）是美国西部太平洋沿岸的一个州。面積位列美國第三；人口位列第一。在地理、地貌、物產、人口構成方面都具有多样化的特點。加州有一别名叫做“金州”（The Golden State），邮政缩写是CA，此外尚有英文昵称为Cali。</zh-speak>
    </Feature>
    <Feature data="NASDAQ-100" zh-data="納斯達克100指數" id="7" uri="http://dbpedia.org/resource/NASDAQ-100">
      <neighbors/>
      <speak>The NASDAQ-100 is a stock market index made up of 107 equity securities issued by 100 of the largest non-financial companies listed on the NASDAQ. It is a modified capitalization-weighted index.</speak>
      <zh-speak>納斯達克100指數（英语：NASDAQ 100 Index）是美國納斯達克100隻最大型本地及國際非金融類上市公司組成的股市指數，以市值作基礎，並以一些規則平衡較大市值股份造成的影響。與標準普爾500指數不同，在成份股中並沒有金融機構。</zh-speak>
    </Feature>
    <Feature data="Public company" zh-data="上市公司" id="8" uri="http://dbpedia.org/resource/Public_company">
      <neighbors/>
      <speak>A public, publicly traded, or publicly held company is a corporation whose ownership is dispersed among the general public in many shares of stock which are freely traded on a stock exchange or in over the counter markets.</speak>
      <zh-speak>上市公司（英语：listed company），也称公开公司、公眾公司（英语：public company），是有限公司的一種，是指可以在證券交易所公开交易其公司股票、證券等的股份有限公司。公司把其證券及股份於證券交易所上市後，公眾人士可根據各個交易所的規則下，自由買賣相關證券及股份，買入股份的公眾人士即成為該公司之股東，享有權益。</zh-speak>
    </Feature>
    <Feature data="Telecommunications equipment" zh-data="" id="9" uri="http://dbpedia.org/resource/Telecommunications_equipment">
      <neighbors/>
      <speak>Telecommunications equipment  is hardware used for the purposes of telecommunications.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Menlo Park, California" zh-data="门洛帕克 (加利福尼亚州)" id="10" uri="http://dbpedia.org/resource/Menlo_Park,_California">
      <neighbors>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="208" relationship="is part of" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
      </neighbors>
      <speak>Menlo Park is an affluent city at the eastern edge of San Mateo County, in the San Francisco Bay Area of California, in the United States.</speak>
      <zh-speak>门洛帕克（又譯门洛公园，英語：Menlo Park）是美国加利福尼亞州聖馬刁縣東南部的一座城市。根据美国人口调查局2000年的人口普查，該市共有30,787人。值得一提的是，「加利福尼亞州門洛帕克」的名稱早見於（約1850年） 湯瑪斯·愛迪生（約1876年）在新澤西州門洛帕克所創的發明品。</zh-speak>
    </Feature>
    <Feature data="List of Google products" zh-data="Google产品列表" id="11" uri="http://dbpedia.org/resource/List_of_Google_products">
      <neighbors/>
      <speak>The following is a list of products and services provided by Google.</speak>
      <zh-speak>这个Google产品列表列出了Google所有重要的自行开发或通过并购获得的桌面软件、手机、和互联网产品。这些产品或者是已经正式上线，或者在公测之中（Beta版），或者是Google实验室的试验产品。下面的列表还包括以前的已经被合并、放弃或更名的产品。产品的功能，比如网络搜索功能，则没有单独列出。</zh-speak>
    </Feature>
    <Feature data="Mountain View, California" zh-data="山景城 (加利福尼亚州)" id="12" uri="http://dbpedia.org/resource/Mountain_View,_California">
      <neighbors>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="247" relationship="is part of" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
      </neighbors>
      <speak>Mountain View is a city in Santa Clara County, in the San Francisco Bay Area of California.</speak>
      <zh-speak>山景城（英语：Mountain View），或音译為芒廷维尤，是美国加州聖塔克拉拉縣內的一座城市，也是硅谷的主要组成部分，位於舊金山灣區西南部。总部位于这里的全球财富1000强公司包括Google公司总部、赛门铁克、和Intuit公司。另外Mozilla基金会/Mozilla公司、微软的MSN、Hotmail、Xbox、MSNTV部门、SGI和美国国家航空航天局埃姆斯研究中心等许多著名机构都位于该市。山景城还是美国第一座完全覆盖免费无线网络的城市。根据2010年美国人口普查，该市有人口74,066人。</zh-speak>
    </Feature>
    <Feature data="S&amp;P 500" zh-data="标准普尔500指数" id="13" uri="http://dbpedia.org/resource/S&amp;P_500">
      <neighbors>
        <neighbor dest="281" relationship="cap level" weight="0"/>
        <neighbor dest="282" relationship="exchanges" weight="0"/>
        <neighbor dest="283" relationship="exchanges" weight="0"/>
        <neighbor dest="284" relationship="operator" weight="0"/>
        <neighbor dest="285" relationship="weighting" weight="0"/>
      </neighbors>
      <speak>The S&amp;P 500, or the Standard &amp; Poor's 500, is an American stock market index based on the market capitalizations of 500 large companies having common stock listed on the NYSE or NASDAQ. The S&amp;P 500 index components and their weightings are determined by S&amp;P Dow Jones Indices.</speak>
      <zh-speak>标准普尔500指数（英语：S&amp;P 500，Standard &amp; Poor's 500 index），又譯為史坦普500指數，是一個由1957年起記錄美國股市的平均记录，觀察範圍達美国的500家上市公司。标准普尔500指数裏的500家公司都是在美国股市的兩大股票交易市場，紐約證券交易所和美國全國證券業協會行情自動傳報系統（纳斯达克、NASDAQ）中有多個交易的公司。幾乎所有标准普尔中的公司都是全美最高金額買賣的500隻股票。这个股票指数由标准普尔公司创建并维护。跟隨道琼斯工業平均指数之後，标准普尔500指数便是全美第二大的指数。与道琼斯指数相比，S&amp;P 500指数包含的公司更多，因此风险更为分散，能够反映更广泛的市场变化。此外，相較於道瓊指數抓股價加權，標普500指數是採用市值加權，更能反映公司股票在股市上實際的重要性。</zh-speak>
    </Feature>
    <Feature data="Ann Mather" zh-data="" id="14" uri="http://dbpedia.org/resource/Ann_Mather">
      <neighbors>
        <neighbor dest="1" relationship="board" weight="0"/>
        <neighbor dest="289" relationship="known for" weight="0"/>
        <neighbor dest="290" relationship="citizenship" weight="0"/>
        <neighbor dest="291" relationship="board" weight="0"/>
        <neighbor dest="292" relationship="birth place" weight="0"/>
        <neighbor dest="293" relationship="alma mater" weight="0"/>
        <neighbor dest="294" relationship="education" weight="0"/>
        <neighbor dest="295" relationship="board" weight="0"/>
      </neighbors>
      <speak>Ann Mather  is an English business executive.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ram Shriram" zh-data="" id="15" uri="http://dbpedia.org/resource/Ram_Shriram">
      <neighbors>
        <neighbor dest="1" relationship="board" weight="0"/>
        <neighbor dest="10" relationship="residence" weight="0"/>
        <neighbor dest="79" relationship="citizenship" weight="0"/>
      </neighbors>
      <speak>Kavitark Ram Shriram is a board member of Google and one of the first investors in Google.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Paul Otellini" zh-data="保羅·歐德寧" id="16" uri="http://dbpedia.org/resource/Paul_Otellini">
      <neighbors>
        <neighbor dest="6" relationship="birth place" weight="0"/>
        <neighbor dest="1" relationship="board" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="383" relationship="birth place" weight="0"/>
        <neighbor dest="520" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Paul Stevens Otellini  is an American businessman and former president and CEO of Intel.</speak>
      <zh-speak>保罗·S·奥特利尼（英语：Paul S. Otellinii，1950年10月12日－），Intel公司第五任CEO，並擔任Google公司董事會的獨立董事。</zh-speak>
    </Feature>
    <Feature data="Vic Gundotra" zh-data="" id="17" uri="http://dbpedia.org/resource/Vic_Gundotra">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
      </neighbors>
      <speak>Vivek "Vic" Gundotra  is an India-born businessman, who served as the Senior Vice President, Social for Google until 24th April, 2014. Prior to joining Google, he was a general manager at Microsoft.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Moffett Federal Airfield" zh-data="" id="18" uri="http://dbpedia.org/resource/Moffett_Federal_Airfield">
      <neighbors>
        <neighbor dest="6" relationship="location" weight="0"/>
        <neighbor dest="1" relationship="operator" weight="0"/>
        <neighbor dest="12" relationship="location" weight="0"/>
        <neighbor dest="247" relationship="location" weight="0"/>
      </neighbors>
      <speak>Moffett Federal Airfield .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Bill Maris" zh-data="" id="19" uri="http://dbpedia.org/resource/Bill_Maris">
      <neighbors>
        <neighbor dest="1" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Bill Maris is a venture capitalist and the managing partner at Google Ventures, a venture capital firm established by Maris and funded through Google Inc.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Steven Woods" zh-data="" id="20" uri="http://dbpedia.org/resource/Steven_Woods">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
        <neighbor dest="334" relationship="occupation" weight="0"/>
      </neighbors>
      <speak>Steven Gregory Woods  is a Canadian entrepreneur.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="In the Plex" zh-data="" id="21" uri="http://dbpedia.org/resource/In_the_Plex">
      <neighbors>
        <neighbor dest="1" relationship="non-fiction subject" weight="0"/>
      </neighbors>
      <speak>In The Plex: How Google Thinks, Works, and Shapes Our Lives is a 2011 book by American technology reporter Steven Levy.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="I'm Feeling Lucky (book)" zh-data="" id="22" uri="http://dbpedia.org/resource/I'm_Feeling_Lucky_(book)">
      <neighbors>
        <neighbor dest="1" relationship="non-fiction subject" weight="0"/>
      </neighbors>
      <speak>I'm Feeling Lucky: The Confessions of Google Employee Number 59 is a 2011 book by Douglas Edwards who was Google's first director of marketing and brand management.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Salar Kamangar" zh-data="" id="23" uri="http://dbpedia.org/resource/Salar_Kamangar">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Salar Kamangar  is a senior executive at Google and former CEO of Google's YouTube brand.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Vikas Gupta" zh-data="" id="24" uri="http://dbpedia.org/resource/Vikas_Gupta">
      <neighbors>
        <neighbor dest="1" relationship="known for" weight="0"/>
        <neighbor dest="76" relationship="residence" weight="0"/>
        <neighbor dest="482" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Vikas Gupta is an Indian American internet entrepreneur.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Maha Abouelenein" zh-data="" id="25" uri="http://dbpedia.org/resource/Maha_Abouelenein">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
      </neighbors>
      <speak>Maha Gaber Abouelenein is an Egyptian American communications consultant specializing in strategic communications, public diplomacy and campaign management.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Andy Bechtolsheim" zh-data="安迪·貝托爾斯海姆" id="26" uri="http://dbpedia.org/resource/Andy_Bechtolsheim">
      <neighbors>
        <neighbor dest="1" relationship="known for" weight="0"/>
        <neighbor dest="713" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Andreas "Andy" von Bechtolsheim  is an electrical engineer who co-founded Sun Microsystems in 1982 and was its chief hardware designer.</speak>
      <zh-speak>安德烈亞斯·馮·貝托爾斯海姆（德语：Andreas von Bechtolsheim，1955年9月30日－），小名安迪·貝托爾斯海姆（Andy Bechtolsheim），生於德國巴伐利亞，電機工程師，為昇陽電腦共同創辦人與首席硬體工程師。</zh-speak>
    </Feature>
    <Feature data="Diane Greene" zh-data="" id="27" uri="http://dbpedia.org/resource/Diane_Greene">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
        <neighbor dest="438" relationship="education" weight="0"/>
        <neighbor dest="520" relationship="education" weight="0"/>
      </neighbors>
      <speak>Diane Greene is an investor and a Google board of directors member, and was a founder and the CEO of VMware from 1998 until 2008.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Joshua Bloch" zh-data="約書亞·布洛克" id="28" uri="http://dbpedia.org/resource/Joshua_Bloch">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Joshua J. Bloch  blocks.</speak>
      <zh-speak>約書亞·布洛克（英语：Joshua J. Bloch，1961年8月28日－），美國著名程式設計師。他為JAVA平台設計並實作了許多的功能，曾擔任google的首席JAVA架構師（Chief Java Architect）。</zh-speak>
    </Feature>
    <Feature data="The Google Story" zh-data="" id="29" uri="http://dbpedia.org/resource/The_Google_Story">
      <neighbors>
        <neighbor dest="1" relationship="non-fiction subject" weight="0"/>
      </neighbors>
      <speak>The Google Story is a book by David A. Vise and Mark Malseed about the Internet success of Google.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Omid Kordestani" zh-data="" id="30" uri="http://dbpedia.org/resource/Omid_Kordestani">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
        <neighbor dest="480" relationship="nationality" weight="0"/>
      </neighbors>
      <speak>Omid R. Kordestani  is an Iranian-American businessman who works as Chief Business Officer at Google.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Paul Buchheit" zh-data="保罗·布赫海特" id="31" uri="http://dbpedia.org/resource/Paul_Buchheit">
      <neighbors>
        <neighbor dest="1" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Paul T. Buchheit is an American computer programmer and entrepreneur.</speak>
      <zh-speak>保罗·T·布赫海特（英语：Paul Buchheit）是美国计算机程序人员和企业家，Gmail创建者和首席开发人员，他发展了Google AdSense的原型作为Gmail他工作的一部分。他於2000年在会议上提出了现時Google著名的座右铭“不作恶”。</zh-speak>
    </Feature>
    <Feature data="John Farrell (businessman)" zh-data="" id="32" uri="http://dbpedia.org/resource/John_Farrell_(businessman)">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
      </neighbors>
      <speak>John Farrell is the General Director of  Google Mexico,</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Chris Messina (open source advocate)" zh-data="" id="33" uri="http://dbpedia.org/resource/Chris_Messina_(open_source_advocate)">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
      </neighbors>
      <speak>Chris Messina , aka FactoryJoe, is an open source and open standards advocate currently residing in San Francisco.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Krishna Bharat" zh-data="" id="34" uri="http://dbpedia.org/resource/Krishna_Bharat">
      <neighbors>
        <neighbor dest="1" relationship="occupation" weight="0"/>
        <neighbor dest="482" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Krishna Bharat  is an Indian research scientist at Google Inc, and leads a team developing Google's news product.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Googled: The End of the World as We Know It" zh-data="" id="35" uri="http://dbpedia.org/resource/Googled:_The_End_of_the_World_as_We_Know_It">
      <neighbors>
        <neighbor dest="1" relationship="non-fiction subject" weight="0"/>
      </neighbors>
      <speak>Googled: The End of the World as We Know It is a book published in 2009 by American writer, journalist and media critic Ken Auletta.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Invite Media" zh-data="" id="36" uri="http://dbpedia.org/resource/Invite_Media">
      <neighbors>
        <neighbor dest="1" relationship="type" weight="0"/>
        <neighbor dest="79" relationship="państwo" weight="0"/>
      </neighbors>
      <speak>Invite Media is a display advertising and exchange bidding company that was acquired by DoubleClick, a subsidiary of Google Inc. on June 3, 2010.  for $81 million.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="SodaHead.com" zh-data="" id="37" uri="http://dbpedia.org/resource/SodaHead.com">
      <neighbors>
        <neighbor dest="6" relationship="location city" weight="0"/>
        <neighbor dest="1" relationship="advertising" weight="0"/>
        <neighbor dest="85" relationship="key person" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>SodaHead Inc., is a provider of polling technology for media companies.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Chromebook Pixel" zh-data="" id="38" uri="http://dbpedia.org/resource/Chromebook_Pixel">
      <neighbors>
        <neighbor dest="1" relationship="manufacturer" weight="0"/>
        <neighbor dest="61" relationship="type" weight="0"/>
      </neighbors>
      <speak>The Chromebook Pixel is a laptop at the high end of Google's Chromebook family of machines, which all come preinstalled with Chrome OS operating system.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Open Automotive Alliance" zh-data="开放汽车联盟" id="39" uri="http://dbpedia.org/resource/Open_Automotive_Alliance">
      <neighbors>
        <neighbor dest="6" relationship="headquarter" weight="0"/>
        <neighbor dest="1" relationship="parent organisation" weight="0"/>
      </neighbors>
      <speak>The Open Automotive Alliance  is an alliance of automotive manufacturers and technology companies aimed at using Android in automobiles.</speak>
      <zh-speak>开放汽车联盟（英语：Open Automotive Alliance，简称OAA）是数家汽车制造商与科技公司组成的联盟，于2014年1月6日在拉斯维加斯国际消费电子展上宣告成立，旨在令汽车使用Android操作系统。</zh-speak>
    </Feature>
    <Feature data="Music Mogul" zh-data="" id="40" uri="http://dbpedia.org/resource/Music_Mogul">
      <neighbors>
        <neighbor dest="1" relationship="advertising" weight="0"/>
        <neighbor dest="79" relationship="location country" weight="0"/>
      </neighbors>
      <speak>MusicMogul.com was an online music world targeting aspiring musicians.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Google Lunar X Prize" zh-data="Google月球X大奖" id="41" uri="http://dbpedia.org/resource/Google_Lunar_X_Prize">
      <neighbors>
        <neighbor dest="1" relationship="presenter" weight="0"/>
      </neighbors>
      <speak>The Google Lunar XPRIZE  sometimes referred to as Moon 2.0, is an inducement prize space competition organized by the X Prize Foundation, and sponsored by Google.</speak>
      <zh-speak>Google月球X大奖（Google Lunar X PRIZE）有时指的是月球2.0是一个空间竞赛，由X奖基金会组织，Google赞助。于2007年9月13日在Wired Nextfeston宣布。</zh-speak>
    </Feature>
    <Feature data="Argleton" zh-data="艾格爾頓" id="42" uri="http://dbpedia.org/resource/Argleton">
      <neighbors>
        <neighbor dest="1" relationship="creator" weight="0"/>
      </neighbors>
      <speak>Argleton was a phantom settlement that appeared on Google Maps and Google Earth but does not actually exist.</speak>
      <zh-speak>艾格爾頓（英语：Argleton）是一個於Google地圖和Google地球上出現、但真實世界並不存在的英國鬼魅城鎮，其標記處位在英格蘭西北部西蘭開夏郡奧姆斯柯克南方的A59公路附近，但實際上該地點其實是隸屬奧頓民政教區的寬廣空地。儘管如此許多網際網路訊息服務公司仍直接採用了Google所提供的資料內容，這包括有艾格爾頓為實際存在城鎮並且被劃入L39郵區之中等訊息。在這般情況下，許多網站紛紛提供了關於艾格爾頓的房地產資訊、就業服務以及當地天氣等公開內容。但雖然其所提供的相關人士、公司以及服務皆為實際存在的事物，然而資料來源則是源自於其他郵區編號相同的人口密集地區而非「艾格爾頓」本身。到了2010年1月30日時，Google地圖上已經撤除了關於艾格爾頓的標記。</zh-speak>
    </Feature>
    <Feature data="Jeff Dean (computer scientist)" zh-data="" id="43" uri="http://dbpedia.org/resource/Jeff_Dean_(computer_scientist)">
      <neighbors>
        <neighbor dest="1" relationship="work institution" weight="0"/>
        <neighbor dest="79" relationship="residence" weight="0"/>
      </neighbors>
      <speak>Jeffrey Adgate "Jeff" Dean  is an American computer scientist and software engineer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ken Thompson" zh-data="肯·汤普逊" id="44" uri="http://dbpedia.org/resource/Ken_Thompson">
      <neighbors>
        <neighbor dest="1" relationship="work institution" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="472" relationship="work institution" weight="0"/>
        <neighbor dest="520" relationship="alma mater" weight="0"/>
        <neighbor dest="596" relationship="award" weight="0"/>
        <neighbor dest="731" relationship="award" weight="0"/>
        <neighbor dest="792" relationship="known for" weight="0"/>
        <neighbor dest="867" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Kenneth "Ken" Thompson , commonly referred to as ken in hacker circles, is an American pioneer of computer science.</speak>
      <zh-speak>肯尼斯·藍·汤普逊（英语：Kenneth Lane Thompson，1943年2月4日－），小名為肯·汤普逊（英语：Ken Thompson），生于美国新奥尔良，計算機科學學者與軟體工程師。他與丹尼斯·里奇設計了B语言、C語言，创建了Unix和Plan 9操作系统，他也是程式語言Go的共同作者。與丹尼斯·里奇同為1983年圖靈獎得主。肯·湯普遜的貢獻還包括了發展正規表示法，寫作了早期的電腦文字編輯器QED與ed，定義UTF-8編碼，以及發展電腦象棋。</zh-speak>
    </Feature>
    <Feature data="Peter Norvig" zh-data="彼德·諾米格" id="45" uri="http://dbpedia.org/resource/Peter_Norvig">
      <neighbors>
        <neighbor dest="1" relationship="work institution" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="268" relationship="work institution" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="520" relationship="alma mater" weight="0"/>
        <neighbor dest="529" relationship="work institution" weight="0"/>
      </neighbors>
      <speak>Peter Norvig  at Google Inc.</speak>
      <zh-speak>REDIRECT T:BLP_unsourced彼德·諾米格（英语：Peter Norvig，1956年12月4日－），生於美國，計算機科學家，專長為人工智慧，為JScheme的共同作者之一。現為Google公司研究總監（Director of Search Quality）。</zh-speak>
    </Feature>
    <Feature data="Robert Kyncl" zh-data="" id="46" uri="http://dbpedia.org/resource/Robert_Kyncl">
      <neighbors>
        <neighbor dest="1" relationship="work institutions" weight="0"/>
        <neighbor dest="64" relationship="work institutions" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
      </neighbors>
      <speak>Robert Kyncl is Google's Vice President and Global Head of Business at YouTube where he oversees all business functions such as content, sales, marketing and operations.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="LinkedIn" zh-data="領英" id="47" uri="http://dbpedia.org/resource/LinkedIn">
      <neighbors>
        <neighbor dest="1" relationship="advertising" weight="0"/>
        <neighbor dest="141" relationship="language" weight="0"/>
        <neighbor dest="787" relationship="programming language" weight="0"/>
      </neighbors>
      <speak>LinkedIn /ˌlɪŋkt.ˈɪn/ is a business-oriented social networking service.</speak>
      <zh-speak>LinkedIn，（IPA: /ˈlɪŋktˈɪn/，NYSE：LNKD），中文名為领英，是一家商業客户導向的社交網路服務网站。由前PayPal 执行副总裁與Intuit 軟體公司高級管理職的Reid Hoffman所創建，並為LinkedIn的CEO。並在eBay公司售出它之後，與一些大學同學創辦了LinkedIn。</zh-speak>
    </Feature>
    <Feature data="Google Developers Live" zh-data="Google开发者实时录像" id="48" uri="http://dbpedia.org/resource/Google_Developers_Live">
      <neighbors>
        <neighbor dest="1" relationship="organized" weight="0"/>
      </neighbors>
      <speak>Google Developers Live is the live, streaming content for the developers and Google developers on many of Google's platforms.</speak>
      <zh-speak>Google开发者实时录像 （英语： Google Developers Live ） 是由Google全年在全球针对网络开发者分享其实时录像资料等。 通过实时录像和Google+视频实录，以及Youtube上传的视频资料等， 它们是全球性的并由谷歌组织。它们重点讨论网络的架构，移动产品，基于谷歌应用软件的研发公司和开放式网络技术，例如Android、HTML5、Chrome、Google App Engine、Google Web Toolkit和给予每个参与者一次绝佳机会来学习谷歌开发者研发的产品，也同时与参与项目的工程师互动分享。</zh-speak>
    </Feature>
    <Feature data="Keyhole, Inc" zh-data="" id="49" uri="http://dbpedia.org/resource/Keyhole,_Inc">
      <neighbors>
        <neighbor dest="1" relationship="successor" weight="0"/>
        <neighbor dest="12" relationship="location city" weight="0"/>
        <neighbor dest="79" relationship="location country" weight="0"/>
        <neighbor dest="85" relationship="key people" weight="0"/>
      </neighbors>
      <speak>Keyhole, Inc., founded in 2001, was a pioneering software development company specializing in geospatial data visualization applications and was acquired by Google in 2004.  Initially launched as a spin-off of Intrinsic Graphics, first round funding came from a Sony venture capital fund and others, additional capital came from an NVIDIA bundling deal, from the CIA's venture capital arm In-Q-Tel, with the majority of In-Q-Tel' funds coming from the National Geospatial-Intelligence Agency, and from angel investor Brian McClendon .  Keyhole's marquee application suite, Earth Viewer, emerged as the highly successful Google Earth application in 2005; other aspects of core technology survive in Google Maps, Google Mobile and the Keyhole Markup Language.The name "Keyhole" is also a homage to the KH reconnaissance satellites, the original eye-in-the-sky military reconnaissance system now some 50 years old.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Schema.org" zh-data="" id="50" uri="http://dbpedia.org/resource/Schema.org">
      <neighbors>
        <neighbor dest="1" relationship="organization" weight="0"/>
        <neighbor dest="513" relationship="related standards" weight="0"/>
        <neighbor dest="562" relationship="domain" weight="0"/>
        <neighbor dest="564" relationship="related standards" weight="0"/>
        <neighbor dest="567" relationship="base standards" weight="0"/>
      </neighbors>
      <speak>Schema.org is an initiative launched on 2 June 2011 by Bing, Google and Yahoo!  is available.To test the validity of the data marked up with the schemas and Microdata, such validators as the Google Structured Data Testing Tool, Yandex Microformat validator and Bing Markup Validator can be used.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Google I/O" zh-data="Google I/O" id="51" uri="http://dbpedia.org/resource/Google_I/O">
      <neighbors>
        <neighbor dest="1" relationship="organized" weight="0"/>
      </neighbors>
      <speak>Google I/O is an annual software developer-focused conference held by Google in San Francisco, California.</speak>
      <zh-speak>Google I/O是由Google举行的网络开发者年会，讨论的焦点是用Google和开放网络技术开发网络应用。年會自2008年開始舉辦，到目前为止已举办过7届。大会在加州旧金山Moscone中心举行。这会议的形式类似于Google開發者日。Google I/O大会同以前的Google开发者会议十分相似，比如2006年5月的Geo开发者日和2007年5月的Google开发者日。在Google I/O有超过100+的技术研讨会。乐队Flight of the Conchords在2008年5月28日晚的I/O大会的开幕上进行了演出。Google I/O 寓为“开放中创新”（Innovation in the Open）。输入/输出Input/Output，I和O形似二进制码中的1和0也被理解为Google I/O的另一层意思，但这不是官方解释，也不是大会的关注点。</zh-speak>
    </Feature>
    <Feature data="DLT Solutions" zh-data="" id="52" uri="http://dbpedia.org/resource/DLT_Solutions">
      <neighbors>
        <neighbor dest="1" relationship="software" weight="0"/>
      </neighbors>
      <speak>DLT Solutions, founded in 1991, is a value-added reseller of technology products and services.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Nexus One" zh-data="Nexus One" id="53" uri="http://dbpedia.org/resource/Nexus_One">
      <neighbors>
        <neighbor dest="1" relationship="brand" weight="0"/>
        <neighbor dest="54" relationship="related" weight="0"/>
        <neighbor dest="946" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>The Nexus One  for sale in Canada for use with most Canadian carriers.</speak>
      <zh-speak>Nexus One是Google推出的运行Android手机操作系统的智慧型手机。这也是Google自行推出的第一款手机。该手机由HTC公司生产，于2010年1月5日发布。手机的功能包括语音文字识别，内置的Gmail程序，以及驾驶中的语音导航等等。该手机目前在美国捆绑T-Mobile移动电话网络发行。Verizon（美国）和Vodafone（欧洲）网络的版本原计划在2010年第二季度上市，但后因市场反应不佳而取消。Google曾同时出售不绑定网络的解锁版，可以在全世界任何GSM网络上使用，但3G功能只在一些网络上可用，后者也已停止销售。</zh-speak>
    </Feature>
    <Feature data="Nexus S" zh-data="Nexus S" id="54" uri="http://dbpedia.org/resource/Nexus_S">
      <neighbors>
        <neighbor dest="1" relationship="brand" weight="0"/>
        <neighbor dest="53" relationship="predecessor" weight="0"/>
        <neighbor dest="203" relationship="manufacturer" weight="0"/>
        <neighbor dest="946" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>The Nexus S is a smartphone co-developed by Google and Samsung and manufactured by Samsung Electronics for release in 2010. It was the first smartphone to use the Android 2.3 "Gingerbread" operating system, and the first Android device to support Near Field Communication  in both hardware and software.This was the fourth time that Google worked with a manufacturer to produce a phone, the first, second and third being the Google G1, myTouch and the Nexus One, all three by HTC. Following the Nexus S, the next Android Developer phone was the Galaxy Nexus, released the following year.</speak>
      <zh-speak>Nexus S是一款由Google设计，三星电子生产的Android系统智能手机。2010年11月15日由Google CEO埃里克·施密特于Web 2.0峰会宣布，搭载Android 2.3操作系统。它是第一个软件和硬件均支持近場通信（NFC）的Android设备。2010年12月7日，Google在其官方网站正式发布Nexus S。这是Google在与HTC合作推出Nexus One之后第二款Nexus系列的产品，手机在美国将于2010年12月16日发售，在英国12月20日发售。</zh-speak>
    </Feature>
    <Feature data="Calico (company)" zh-data="Calico" id="55" uri="http://dbpedia.org/resource/Calico_(company)">
      <neighbors>
        <neighbor dest="6" relationship="location city" weight="0"/>
        <neighbor dest="1" relationship="Founders" weight="0"/>
        <neighbor dest="79" relationship="location country" weight="0"/>
      </neighbors>
      <speak>Calico is an independent R&amp;D biotech company established in 2013 by Google Inc. and Arthur D. Levinson with the goal of combating aging and associated diseases.The name Calico is shorthand for California Life Company.In Google's 2013 Founders' Letter, Larry Page described Calico as a company focused on "health, wellbeing and longevity."</speak>
      <zh-speak>Calico是GOOGLE於2013年9月新成立的一間生物科技公司，主力研究對抗癌症及延長壽命的科技。Calico的首任行政總裁是身兼蘋果公司及基因泰克董事長的阿瑟·萊文森。Calico是 California Life Company的縮寫。</zh-speak>
    </Feature>
    <Feature data="Open Handset Alliance" zh-data="開放手機聯盟" id="56" uri="http://dbpedia.org/resource/Open_Handset_Alliance">
      <neighbors>
        <neighbor dest="6" relationship="headquarter" weight="0"/>
        <neighbor dest="1" relationship="parent organisation" weight="0"/>
      </neighbors>
      <speak>The Open Handset Alliance , and BlackBerry.As part of its efforts to promote a unified Android platform, OHA members are contractually forbidden from producing devices that are based on incompatible forks of Android.</speak>
      <zh-speak>開放手機聯盟（英语：Open Handset Alliance，簡稱OHA）是一個由手機製造商、軟件開發商、半导体製造商、電信運營商等企業組成的商業聯盟，以為行動裝置開發自由標準。</zh-speak>
    </Feature>
    <Feature data="Noto fonts" zh-data="Noto" id="57" uri="http://dbpedia.org/resource/Noto_fonts">
      <neighbors>
        <neighbor dest="1" relationship="commissioned by" weight="0"/>
      </neighbors>
      <speak>Noto is a font family designed to cover all the scripts encoded in the Unicode standard.</speak>
      <zh-speak>Noto是Google所開發的開源字型家族，以Apache许可证授權，屬於無襯線黑體。涵蓋漢字、日語、諺文的版本稱為Noto Sans CJK。Noto是「No Tofu」的簡稱。在Windows等系統中，無法顯示的字元變成方塊「□」，日本慣稱為「tofu」，即「豆腐」之意。因此Noto的開發宗旨即為消除所有無法顯示的字元，實現「No Tofu」的目標。2014年7月16日公開了與Adobe等公司共同開發的涵蓋漢字版本：「Noto Sans CJK」，漢字皆依各國國家標準寫法製作。字重有7種（Thin 100、Light 300、DemiLight 350、Regular 400、Medium 500、Bold 700、Black 900）。而Adobe基於漢字部分發行了另一版本：Source Han Sans，其英數字採自Source Sans Pro字型。Noto和Roboto都是在Android新介面Material design的設計指南中所提及的建議字型。</zh-speak>
    </Feature>
    <Feature data="Binoculars Building" zh-data="" id="58" uri="http://dbpedia.org/resource/Binoculars_Building">
      <neighbors>
        <neighbor dest="1" relationship="current tenants" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>The Binoculars Building, originally the Chiat/Day Building, is a commercial office building located in the Venice neighborhood of Los Angeles, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Wepolls.com" zh-data="" id="59" uri="http://dbpedia.org/resource/Wepolls.com">
      <neighbors>
        <neighbor dest="1" relationship="advertising" weight="0"/>
        <neighbor dest="85" relationship="key person" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>Wepolls Is a social polling network launched on 1 May, 2011 with $10,000 in angel investments.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Rebound Rumble" zh-data="" id="60" uri="http://dbpedia.org/resource/Rebound_Rumble">
      <neighbors>
        <neighbor dest="1" relationship="founders winner" weight="0"/>
      </neighbors>
      <speak>Rebound Rumble is the 2012 FIRST Robotics Competition game.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Chromebook" zh-data="Chromebook" id="61" uri="http://dbpedia.org/resource/Chromebook">
      <neighbors>
        <neighbor dest="1" relationship="currentowner" weight="0"/>
      </neighbors>
      <speak>A Chromebook is a laptop running Chrome OS as its operating system.</speak>
      <zh-speak>Chromebook是搭載Google Chrome OS系統的個人電腦，有單機筆記型電腦的特徵也有雲端運算的概念，最初在2011年上市由三星（Samsung）和宏碁（Acer）生產。</zh-speak>
    </Feature>
    <Feature data="Ingress (game)" zh-data="Ingress" id="62" uri="http://dbpedia.org/resource/Ingress_(game)">
      <neighbors>
        <neighbor dest="1" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>Ingress is an augmented reality massively multiplayer online role playing GPS-dependent game created by Niantic Labs, a startup within Google, originally for Android devices, and since July 14, 2014 for Apple's iOS. The game has a complex science fiction back story with a continuous open narrative.The gameplay consists of establishing "portals" at places of public art, landmarks, monuments, etc., and linking them to create virtual triangular fields over geographic areas.</speak>
      <zh-speak>Ingress是一款侵入式虚拟现实游戏（Alternate Reality Game）。大型多人电子游戏，由 Google的Niantic Labs开发，於2012年11月16日開始進行測試。已於2013年12月15日正式發布。</zh-speak>
    </Feature>
    <Feature data="Roboto" zh-data="Roboto" id="63" uri="http://dbpedia.org/resource/Roboto">
      <neighbors>
        <neighbor dest="1" relationship="commissioned by" weight="0"/>
      </neighbors>
      <speak>Roboto is a neo-grotesque sans-serif typeface family developed by Google as the system font for its Android operating system.Google describes the font as "modern, yet approachable" and "emotional". The font is licensed under the Apache license.</speak>
      <zh-speak>Roboto是为Android操作系统设计的一个无衬线字体家族。Google描述该字型为“现代的丶但平易近人”和“情绪化”的。该字型在Apache许可证下授权使用。整个字型家族在2012年1月12日在新推出的Android设计网站Android Design上正式提出以供免费下载，这个字型家族包含 Regular 和 Thin丶Light丶Regular丶Medium丶Bold丶Black与Condensed版的斜体。</zh-speak>
    </Feature>
    <Feature data="YouTube" zh-data="YouTube" id="64" uri="http://dbpedia.org/resource/YouTube">
      <neighbors>
        <neighbor dest="1" relationship="type" weight="0"/>
      </neighbors>
      <speak>YouTube is a video-sharing website headquartered in San Bruno, California.</speak>
      <zh-speak>YouTube是设立在美国的一個影片分享網站，讓使用者上載、觀看及分享影片或短片。公司於2005年2月15日註冊，由華裔美國人陳士駿等人創立，網站的口號為「Broadcast Yourself」（表現你自己），網站的標誌意念來自早期電視顯示器（阴极射线管）。 至今YouTube已經成為同類型網站的翹楚，並造就許多網上名人且激發網上創作。YouTube總公司位在加利福尼亞州聖布里諾，網站藉由Flash Video或HTML5影片來播放各式各樣由上傳者製成的影片內容，包括電影剪輯、電視短片、音樂錄影帶等，以及其他上傳者自製的業餘影片，如VLOG、原創的影片等。大部分YouTube的上傳者僅是個人自行上傳，但也有一些媒體公司如哥倫比亞廣播公司、英國廣播公司、VEVO以及其他團體與YouTube有合作夥伴計劃，上傳自家公司所錄製的影片。无Google账号的用户仍可以直接觀看Youtube中的视频，但无法上传视频。註冊用戶則可以無限數量上傳影片。当影片多次被举报，经过审查，核实后，可能将具有暴力，情爱的内容定为“18岁以上注册用户可以观看”，而色情内容以及侵犯版权的内容（比如仍在上映或发行影碟的电影，电视剧或动画片）將會被刪除。2006年11月，Google公司以16.5億美元收購了YouTube，並把其當做一間子公司來經營。Google公司最初对于如何通过YouTube盈利，一直保持非常谨慎的态度。被收購後的YouTube依然風靡全球網民，花旗銀行分析師認爲，以2012年整年計算，Google可能从YouTube获得24亿美元的净收入。雅科夫·拉皮茨基作为网站创始人，亦是YouTube最早片「我在動物園」（Me at the zoo）的拍攝者。</zh-speak>
    </Feature>
    <Feature data="Experience Project" zh-data="" id="65" uri="http://dbpedia.org/resource/Experience_Project">
      <neighbors>
        <neighbor dest="1" relationship="advertising" weight="0"/>
        <neighbor dest="383" relationship="location city" weight="0"/>
        <neighbor dest="384" relationship="company type" weight="0"/>
      </neighbors>
      <speak>Experience Project is a free social networking website consisting of various online communities.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="PostRank" zh-data="" id="66" uri="http://dbpedia.org/resource/PostRank">
      <neighbors>
        <neighbor dest="1" relationship="successor" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>PostRank was a social media analytics service that used a proprietary ranking algorithm to measure "social engagement" with published content based on blog comments and links, Internet bookmarks, clicks, page views, and activities from social network services such as Twitter, Digg, Facebook and Myspace.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Reunion (advertisement)" zh-data="" id="67" uri="http://dbpedia.org/resource/Reunion_(advertisement)">
      <neighbors>
        <neighbor dest="1" relationship="client" weight="0"/>
      </neighbors>
      <speak>Reunion is a 2013 Google India advertisement for Google Search.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Source Han Sans" zh-data="思源黑體" id="68" uri="http://dbpedia.org/resource/Source_Han_Sans">
      <neighbors>
        <neighbor dest="1" relationship="commissioned by" weight="0"/>
      </neighbors>
      <speak>Source Han Sans is a sans-serif gothic typeface created by Adobe and Google.</speak>
      <zh-speak>思源黑體（英语：Source Han Sans）是Adobe與Google所領導開發的開源字型家族，以Apache 2.0许可证授權，屬於無襯線黑體。思源黑體於2014年7月16日首次發布，支援繁體中文、簡體中文、日文及韓文，並且各有7種字體粗細。公開之時為當時涵蓋字元數量最多的字型，44,666个字元分屬於65,535個字形中，此為OpenType字型技術的極限。思源黑體的開發以Adobe的西塚涼子為中心，西文及數字採自Source Sans Pro字型，漢字部分則分別以各語種為基礎，由不同設計公司製作——日文為Iwata、中文為常州华文、韓文為Sandoll等，其字形皆依循各國國家標準。共包含7種字重（ExtraLight 100、Light 200、Normal 300、Regular 400、Medium 500、Bold 700、Heavy 900）。字型的名称，除了英文名Source Han Sans，日文名是「源ノ角ゴシック」、简体中文为「思源黑体」、繁体中文为「思源黑體」、韩文为「본고딕」。字型文档的格式上，Adobe发布了三种版本供下载：多语言OTF版、各个地区子集版、多语言OTC版。而Adobe的TypeKit服务也可以使用此字型，但出于同步功能，TypeKit版不能和下载版共存。 Google公司将此字型另起名为Noto Sans CJK发布，但字形本身（包括西文、數字）和Adobe的版本完全一样，仅是字重的称呼不一样而已。</zh-speak>
    </Feature>
    <Feature data="Peiter Zatko" zh-data="" id="69" uri="http://dbpedia.org/resource/Peiter_Zatko">
      <neighbors>
        <neighbor dest="1" relationship="work institutions" weight="0"/>
        <neighbor dest="12" relationship="residence" weight="0"/>
        <neighbor dest="79" relationship="citizenship" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
      </neighbors>
      <speak>Peiter C. Zatko, better known as Mudge, was the most prominent member of the high profile hacker think tank the L0pht as well as the long-lived computer and culture hacking cooperative the Cult of the Dead Cow.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Fergus Henderson (computer scientist)" zh-data="" id="70" uri="http://dbpedia.org/resource/Fergus_Henderson_(computer_scientist)">
      <neighbors>
        <neighbor dest="1" relationship="work institution" weight="0"/>
        <neighbor dest="79" relationship="residence" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
      </neighbors>
      <speak>Fergus Henderson  is a computer scientist who was one of the original developers of the Mercury programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Google barges" zh-data="" id="71" uri="http://dbpedia.org/resource/Google_barges">
      <neighbors>
        <neighbor dest="1" relationship="Operators" weight="0"/>
      </neighbors>
      <speak>The Google barges are a group of four floating barges built between 2010 and 2012, commissioned by Google to serve as "an interactive space where people can learn about new technology", possibly as luxury showrooms for Google Glass and other products, on an invitation-only basis.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Central Saint Giles" zh-data="" id="72" uri="http://dbpedia.org/resource/Central_Saint_Giles">
      <neighbors>
        <neighbor dest="1" relationship="current tenants" weight="0"/>
      </neighbors>
      <speak>Central Saint Giles is a mixed-use development in central London.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Preston McAfee" zh-data="" id="73" uri="http://dbpedia.org/resource/Preston_McAfee">
      <neighbors>
        <neighbor dest="1" relationship="work institutions" weight="0"/>
        <neighbor dest="440" relationship="alma mater" weight="0"/>
        <neighbor dest="446" relationship="work institutions" weight="0"/>
      </neighbors>
      <speak>Preston McAfee  currently works as chief economist at Microsoft.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Jens Eilstrup Rasmussen" zh-data="" id="74" uri="http://dbpedia.org/resource/Jens_Eilstrup_Rasmussen">
      <neighbors>
        <neighbor dest="1" relationship="institutions" weight="0"/>
        <neighbor dest="383" relationship="residence" weight="0"/>
        <neighbor dest="702" relationship="field" weight="0"/>
      </neighbors>
      <speak>Jens Eilstrup Rasmussen is a Danish inventor, designer and software developer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ed Chi" zh-data="" id="75" uri="http://dbpedia.org/resource/Ed_Chi">
      <neighbors>
        <neighbor dest="6" relationship="residence" weight="0"/>
        <neighbor dest="1" relationship="work institutions" weight="0"/>
        <neighbor dest="76" relationship="residence" weight="0"/>
        <neighbor dest="79" relationship="residence" weight="0"/>
      </neighbors>
      <speak>Ed Chi  and is currently a research scientist at Google.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Palo Alto, California" zh-data="帕羅奧圖 (加利福尼亞州)" id="76" uri="http://dbpedia.org/resource/Palo_Alto,_California">
      <neighbors>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="247" relationship="is part of" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
      </neighbors>
      <speak>Palo Alto , VMware, Tesla Motors, PARC, Ning, IDEO, Skype, and Palantir Technologies.</speak>
      <zh-speak>帕羅奧圖（英文：Palo Alto）是美国加利福尼亚州聖塔克拉拉郡內的一座城市，位于旧金山湾区西南部，在山景城和門洛公園市中間，西方毗鄰著名的史丹佛大學。帕羅奧圖这个名字是来自于两个西班牙语的词，“Palo”，意为树，与“Alto”，意为高。所说的“高树”现在还存在，称为“El Palo Alto”位于帕羅奧圖树公园（El Palo Alto Park）。专家估计该树的年龄已经超过一千岁了。根据美国人口调查局2000年统计，帕羅奧圖共有人口58,598人，其中白人占75.76%、亚裔美国人占17.22%、拉丁美裔人占4.65%、非裔美国人占2.02%、美国原住民占0.21%、太平洋岛国人占0.14%、其他民族占1.41%、混血儿占3.24%。</zh-speak>
    </Feature>
    <Feature data="Stanford University" zh-data="史丹佛大學" id="77" uri="http://dbpedia.org/resource/Stanford_University">
      <neighbors>
        <neighbor dest="6" relationship="State" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
        <neighbor dest="601" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Leland Stanford Junior University, or more commonly Stanford University, is a private research university in Stanford, California, and one of the world's most prestigious institutions, with the highest undergraduate selectivity and the top position in numerous surveys and measures in the United States.Stanford was founded in 1885 by Leland Stanford, former governor of and U.S. senator from California and leading railroad tycoon, and his wife, Jane Lathrop Stanford, in memory of their only child, Leland Stanford, Jr., who had died of typhoid fever at age 15 the previous year.</speak>
      <zh-speak>小利蘭·史丹福大學，常直接稱為史丹福大學（英文：Leland Stanford Junior University；俗稱：Stanford University），為一所坐落於美國加利福尼亞州史丹福市的私立研究型大學。大學於1891年由時任加州參議員及州長的鐵路大亨利蘭·史丹福和他的妻子簡·萊思羅普·史丹福創辦。這是為了紀念他們因傷寒而於16歲生日前夕去世的兒子（小利蘭·史丹福）。其為男女及宗教自由的學校，在1930年代前所有學費全免。可是，1893年利蘭·史丹福的逝世及1906年對校園造成重大損毀的三藩市大地震，曾為該校帶來嚴重的財政困難。二次世界大戰後，時任學校教務長的弗雷德里克·特曼全力支持校友與教職員的企業精神，希望能建立一個自給自足的本地工業，這也是現今矽谷的源流。自上世紀七十年代，史丹福成為了美國SLAC國家加速器實驗室的所在地，及其中一個高等研究計劃署網路（互聯網雛形）的起源地。學校的校園位於矽谷的西北方，鄰近帕羅奧圖。 校方的各個學術部門被歸入七所學術學院內，而包括生物保育區及加速實驗室在內的其他資產則設於主校區之外。 此校同時為最富有的教育機構之一，並為第一所在一年內獲得超過十億美元捐款升幅的大學。史丹福為一所擁有高住宿率及高選擇性的大學，當中的研究生課程較本科的多元化。該校也是馬丁路德金手寫原稿的保存地。 其因學術聲譽而獲評為世上其中一所最著名的高等學府。 史丹福學生透過36支代表隊參與不同的體育競賽，其為兩所太平洋十二校聯盟的私立大學之一。有關校隊曾奪得過104次大學體育協會賽事的冠軍，成績於眾多大學中位列第二。自1994-95年起，其亦一直為全國大學體育競技董事杯的年度得主。史丹福培養了不少著名人士。其校友涵蓋30名富豪企業家及17名太空員，亦為培養最多美國國會成員的院校之一。史丹福校友創辦了眾多著名的公司機構，如：谷歌、雅虎、惠普、耐克、昇陽電腦等，這些企業的資金合計相等於全球第十大經濟體系。 共58名諾貝爾獎得主現或曾於該校學習或工作。</zh-speak>
    </Feature>
    <Feature data="Michigan" zh-data="密歇根州" id="78" uri="http://dbpedia.org/resource/Michigan">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="123" relationship="language" weight="0"/>
        <neighbor dest="139" relationship="title" weight="0"/>
        <neighbor dest="724" relationship="East" weight="0"/>
      </neighbors>
      <speak>Michigan /ˈmɪʃɨɡən/ is a state in the Great Lakes region of the Midwestern United States.</speak>
      <zh-speak>密西根州（英语：Michigan），又译作密西根州、密执安州、密芝根州、密执安州。是美国的一个州，位於五大湖地區。其邮政缩写是MI。这个州作为汽车工业的诞生地而闻名。但其实密西根州也有庞大的旅游业。旅游胜地例如特拉佛斯城（Traverse City）、麦基诺岛（Mackinac Island）以及整个吸引着来自全美和加拿大运动员和自然爱好者的上半島（Upper Peninsula）。密西根州拥有仅次于阿拉斯加州的全美第二长的水岸线，以及全美最多的休闲船只。</zh-speak>
    </Feature>
    <Feature data="United States" zh-data="美国" id="79" uri="http://dbpedia.org/resource/United_States">
      <neighbors>
        <neighbor dest="139" relationship="established event" weight="0"/>
        <neighbor dest="248" relationship="calling code" weight="0"/>
      </neighbors>
      <speak>The United States of America  and with around 318 million people, the United States is the world's fourth-largest country by total area and third-largest by population.</speak>
      <zh-speak>美利堅合眾國（英语：The United States of America，簡稱：The United States、America，縮寫：USA、The US），簡稱美國，是由50個州和華盛頓哥倫比亞特區組成的聯邦共和立憲制國家。美國本土位於北美洲中部，東臨大西洋，西臨太平洋，北面是加拿大，南部和墨西哥及墨西哥灣接壤。除阿拉斯加州和夏威夷州之外，48個州都位於美國本土。阿拉斯加州位於北美大陸西北方，東部為加拿大，西面和俄羅斯隔著白令海峽。夏威夷州則是太平洋中部的群島。美國在加勒比海和太平洋還擁有多處境外領土和島嶼地區。此外，美國在全球140多個國家和地區擁有374個海外軍事基地。美國目前有50個州、一個聯邦直轄特區及若干境外領土，面積約962.9萬平方公里（其中陸地面積915.8960萬平方公里，内陸水域面積約20萬平方公里，五大湖中美國主權部分約17萬平方公里，河口、港灣、内海等沿海水域面積約10萬平方公里），位居世界第二或第三名（依水域面積定義而有差異）。美國人口約為3.15億人，其數量為世界第三。是個多元文化和多元民族的國家，以白人為主，但有大量來自世界各地的移民。在13個殖民地的公民自1776年脫離大不列顛王國管辖，建立國家，殖民地代表一同發表《美國獨立宣言》。在經歷美國獨立戰爭後，於1783年與大不列顛王國簽訂《巴黎條約》，從此受到世界各國承認。美國憲法於1787年通過。1791年，美國權利法案獲得批准之後，又經內戰、第二次世界大戰和民權人士努力引發檢討和改正，而後逐步擴展到美國白人以外全體美國人。美國曾經歷過1812年戰爭、南北戰争 (1861年－1865年）和經濟大蕭條（1930年代）。在第一次世界大戰和第二次世界大戰中，美國和其他盟國共同擊敗納粹德國和大日本帝國而獲得勝利，經歷數十年冷戰，在蘇聯解體後，成為目前唯一的超級強國，在經濟、工業、軍事及科研等領域都處於全世界領先地位。</zh-speak>
    </Feature>
    <Feature data="Atheism" zh-data="" id="80" uri="http://dbpedia.org/resource/Atheism">
      <neighbors/>
      <speak>Atheism is, in a broad sense, the rejection of belief in the existence of deities.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Computer scientist" zh-data="電腦科學家" id="81" uri="http://dbpedia.org/resource/Computer_scientist">
      <neighbors/>
      <speak>A computer scientist is a scientist who has acquired knowledge of computer science, the study of the theoretical foundations of information and computation and their application.Computer scientists typically work on the theoretical side of computer systems, as opposed to the hardware side that computer engineers mainly focus on .</speak>
      <zh-speak>電腦科學家是指一類具有資深電腦科學知識，並從事相關研究的人物。電腦科學家通常從事計算與資訊理論方面的研究，有時也關注這些理論在電腦系統中的應用。與電腦工程師相對，電腦科學家通常對電腦系統的理論，而非實作，更加感興趣，盡管有時電腦科學家的工作也涉及到硬體系統。電腦科學家通常會對電腦科學的某一分支進行深入研究，但是這些分支都建立在對計算系統的理論研究上。</zh-speak>
    </Feature>
    <Feature data="Entrepreneurship" zh-data="企业家精神" id="82" uri="http://dbpedia.org/resource/Entrepreneurship">
      <neighbors/>
      <speak>Entrepreneurship is the process of starting a business or other organization.</speak>
      <zh-speak>企业家精神（英语：Entrepreneurship）是成为一名企业家所具备的行为或者精神风范或者一个勇于创新或者开创新事业，金融和商业创新，想在经济利益上面转型创造最大财富。近几年最常见形式是开创新商业（俗称创业公司）。尽管如此，这术语已被扩展到在社会和政治上的企业家活动。当企业家精神用来描述在公司或大型公司组织内部的活动，它被称新創事業（英语：Intrapreneurship）。根据全球企业家监测的企业家学者和创建者Paul Reynolds所述：“到目前，在美国所有工作的人在他们退休时，其中半数人可能有过一到多年自我雇佣的时段；四分之一人很可能从事于自我雇佣超过六年之久。在美国工人的职业规划中，开创一份新事业是很司空见惯的。”</zh-speak>
    </Feature>
    <Feature data="University of Michigan" zh-data="密歇根大学" id="83" uri="http://dbpedia.org/resource/University_of_Michigan">
      <neighbors>
        <neighbor dest="78" relationship="state" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>The University of Michigan  comprises more than 500,000. Besides academic life, Michigan's athletic teams compete in Division I of the NCAA and are collectively known as the Wolverines.</speak>
      <zh-speak>密歇根大学（University of Michigan，简称UM、UMich或Michigan）是美国密歇根州的一所著名公立大学。它有三个校区，分别是安娜堡（主校区，又译安阿伯）、迪尔伯恩（Dearborn）和弗林特（Flint）。密歇根大学于1817年建校，是美国历史最悠久的大学之一，在世界范围内享有盛誉。密大建校以来，在各学科领域中成就卓著并拥有巨大影响，多項调查显示该大学超过70％的专业排在全美前10名，被誉为“公立常春藤”，与加州大学伯克利分校以及威斯康辛大学素有“公立大学典范”之称。密大同时也是美国重要的学术联盟美国大学联合会（AAU）的14个发起者之一。因为高质量的教育，该校的学术水平和校友质量都很高。其校友中包括1位美国总统、22位诺贝尔奖得主、8位NASA宇航员、18位普利策奖得主、25名罗兹学术奖得主、7名NASA宇航员、三十多位各个大学的校长、上百位文艺娱乐界明星、上千位著名运动员、以及不可计数的各行业的精英。</zh-speak>
    </Feature>
    <Feature data="List of Internet entrepreneurs" zh-data="" id="84" uri="http://dbpedia.org/resource/List_of_Internet_entrepreneurs">
      <neighbors/>
      <speak>An Internet entrepreneur is an entrepreneur, an owner, founder or manager of an Internet based business enterprise who makes money through risk and/or initiative.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Chief executive officer" zh-data="首席执行官" id="85" uri="http://dbpedia.org/resource/Chief_executive_officer">
      <neighbors/>
      <speak>A chief executive officer .</speak>
      <zh-speak>行政长官（英文：Chief Executive Officer，縮寫：CEO），香港称行政总裁；台湾称执行长；中國大陸稱首席執行官，是在一个企業集團、財閥或行政單位中的最高行政负责人。</zh-speak>
    </Feature>
    <Feature data="East Lansing, Michigan" zh-data="东兰辛" id="86" uri="http://dbpedia.org/resource/East_Lansing,_Michigan">
      <neighbors>
        <neighbor dest="78" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
      </neighbors>
      <speak>East Lansing is a city in the U.S. state of Michigan directly east of Lansing, the state capital.</speak>
      <zh-speak>东兰辛（East Lansing）是美国密歇根州英厄姆县和克林顿县的一座城市，位于州首府兰辛以东，面积29.2平方公里。根据美国人口调查局2000年统计，共有人口46,525人，其中白人占80.91%、亚裔美国人占8.21%、非裔美国人占7.4%。密歇根州立大学位于东兰辛市内。</zh-speak>
    </Feature>
    <Feature data="Terry Winograd" zh-data="" id="87" uri="http://dbpedia.org/resource/Terry_Winograd">
      <neighbors>
        <neighbor dest="2" relationship="notable student" weight="0"/>
        <neighbor dest="3" relationship="notable student" weight="0"/>
        <neighbor dest="77" relationship="workplaces" weight="0"/>
        <neighbor dest="1" relationship="workplaces" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Terry Allen Winograd  is an American professor of computer science at Stanford University, and co-director of the Stanford Human-Computer Interaction Group.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Planetary Resources" zh-data="行星資源公司" id="88" uri="http://dbpedia.org/resource/Planetary_Resources">
      <neighbors>
        <neighbor dest="2" relationship="key person" weight="0"/>
        <neighbor dest="15" relationship="key person" weight="0"/>
      </neighbors>
      <speak>Planetary Resources, Inc., formerly known as Arkyd Astronautics, is an American company that was formed in November 2010, and reorganized and renamed in 2012. Their stated goal is to "expand Earth's natural resource base" by developing and deploying the technologies for asteroid mining.</speak>
      <zh-speak>行星資源公司（Planetary Resources, Inc.），舊稱 Arkyd Astronautics，是一家成立於2010年11月的公司，2012年改組並更名。行星資源公司的目的是要藉著開發與實踐小行星採礦的技術以「擴大地球的天然資源基礎」。部分消息指出行星資源公司是由 Arkyd Astronautics 改名而來，但其中一位聯席主席埃里克·安德森（原太空探險公司創辦人）則表示 Arkyd Astronautics 將會成為行星資源公司的全資子公司。雖然行星資源公司的長遠目標是在小行星上採礦，該公司為了開拓市場的最初計畫是製造小型（30到50公斤）的太空望遠鏡做為地球和天文觀測。這些太空探測器將利用陸基雷射光學系統進行通訊，可以比使用傳統 RF 天線的衛星大幅減少酬載體積和重量。這類光學望遠鏡的發展是未來小行星採礦技術發展的第一步。同樣的望遠鏡衛星也可售予客戶調查和深入研究近地小行星。</zh-speak>
    </Feature>
    <Feature data="Google Custom Search" zh-data="" id="89" uri="http://dbpedia.org/resource/Google_Custom_Search">
      <neighbors>
        <neighbor dest="2" relationship="author" weight="0"/>
        <neighbor dest="3" relationship="author" weight="0"/>
        <neighbor dest="1" relationship="owner" weight="0"/>
        <neighbor dest="782" relationship="programming language" weight="0"/>
      </neighbors>
      <speak>Google Custom Search  is a platform provided by Google that allows web developers to feature specialized information in web searches, refine and categorize queries and create customized search engines, based on Google Search.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="DeepMind Technologies" zh-data="" id="90" uri="http://dbpedia.org/resource/DeepMind_Technologies">
      <neighbors>
        <neighbor dest="2" relationship="ceo" weight="0"/>
        <neighbor dest="5" relationship="location" weight="0"/>
        <neighbor dest="1" relationship="owner" weight="0"/>
        <neighbor dest="12" relationship="location" weight="0"/>
        <neighbor dest="297" relationship="industry" weight="0"/>
        <neighbor dest="298" relationship="location" weight="0"/>
        <neighbor dest="299" relationship="founder" weight="0"/>
        <neighbor dest="300" relationship="founder" weight="0"/>
      </neighbors>
      <speak>DeepMind Technologies is a British artificial intelligence company.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Los Altos, California" zh-data="洛思阿圖斯 (加利福尼亞州)" id="91" uri="http://dbpedia.org/resource/Los_Altos,_California">
      <neighbors>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="247" relationship="is part of" weight="0"/>
      </neighbors>
      <speak>Los Altos /lɔːs ˈæltoʊs/ is a city at the southern end of the San Francisco Peninsula, in the San Francisco Bay Area.</speak>
      <zh-speak>洛思阿图斯（英文：Los Altos），是美国加利福尼亚州圣克拉拉县下属的一座城市，于1952年12月1日建市。城市面积约为16.8平方公里，根据2010年美国人口普查，该市有人口28,976人。作为硅谷的一部分，该市在1950年至1980年迅速发展，由一个农业小镇脱变为以高生活水平与房价昂贵著称的城镇。其所在的邮政编码（94022和94024）被福布斯评为是全美最昂贵的邮政编码第24位。其房价中位超过每套250萬美元。</zh-speak>
    </Feature>
    <Feature data="Soviet Union" zh-data="苏联" id="92" uri="http://dbpedia.org/resource/Soviet_Union">
      <neighbors/>
      <speak>The Union of Soviet Socialist Republics  assumed the Soviet Union's rights and obligations and is recognised as its continued legal personality.</speak>
      <zh-speak>苏维埃社会主义共和国联盟（俄语：Союз Советских Социалистических Республик，简写：СССР ，简称苏联），是一個存在於1922年至1991年的聯邦制國家，也是當時世界上土地面積最大的國家，佔有東歐的大部分，以及幾乎整個中亞和北亞；陸地與挪威、芬蘭、波蘭、捷克斯洛伐克、匈牙利、羅馬尼亞、土耳其、伊朗、阿富汗、中國、蒙古及朝鮮接壤；而與瑞典、日本、美國及加拿大隔海相望。蘇聯起源自1917年的俄國革命，俄羅斯帝國的沙皇政府被推翻後，臨時政府成立，但僅執政了不到八個月，布爾什維克便很快從臨時政府手中奪取政權並於選舉後武力解散俄國立憲會議，史稱十月革命及一月劇變；之後俄國發生內戰，由布爾什維克所領導的紅軍擊敗了白軍以及協約國的武裝干涉後，蘇聯於1922年12月以俄羅斯、白俄羅斯、烏克蘭和外高加索等蘇維埃社會主義共和國合併，成立了蘇聯。在第一任蘇聯領導人弗拉基米尔·列宁於1924年去世後，約瑟夫·史達林勝出一連串的權力鬥爭，取得了領導權。史達林以計劃經濟作保障，推行大規模的重工業化。第二次世界大戰中，蘇聯先是与纳粹德国结盟，於1939年和德國共同瓜分了波蘭、侵略波罗的海国家、割占罗马尼亚领土，将流亡苏联的德国政治难民交还纳粹。1941年，苏联遭到德國等軸心盟國入侵，歷經了4年激烈的戰事後取得了勝利，與美國一同成為當時世界上最強大的兩個國家，被稱為「超級大國」，同時佔領東歐大部分國家，扶持了衛星國。儘管其宪法規範苏联是一個联邦制国家，由15个平等权利的苏维埃社会主义共和国（加盟共和国）按照自愿联合的原则组成，但其政府權力高度集中，並奉行世界上第一個完全的社會主義制度及計劃經濟政策，由蘇聯共產黨一黨執政。蘇聯而後與衛星國組成華沙公約組織，與以美國為首的北大西洋公約組織對峙，這兩大軍事集團在冷戰時期於全世界展開意識形態的對立和政治鬥爭，在80年代初期，苏联的国力已经落后于美国，经济增长速度变慢。在80年代末，蘇聯領導人米哈伊爾·戈爾巴喬夫試圖進行改革政策，將國家自由化和民主化，却导致蘇聯在1991年解體，在政治斗争中获胜的葉利欽所領導的俄羅斯聯邦繼承了蘇聯主要的軍事、經濟和國際地位。</zh-speak>
    </Feature>
    <Feature data="Russian Soviet Federative Socialist Republic" zh-data="俄罗斯苏维埃联邦社会主义共和国" id="93" uri="http://dbpedia.org/resource/Russian_Soviet_Federative_Socialist_Republic">
      <neighbors/>
      <speak>The Russian Soviet Federative Socialist Republic . After dissolution of the USSR, Russia declared that it assumed the rights and obligations of the dissolved central Soviet government, including UN membership.The new Russian constitution, adopted on December 12, 1993 after a constitutional crisis, abolished the Soviet system of government in its entirety.</speak>
      <zh-speak>俄罗斯苏维埃联邦社会主义共和国（俄语：Российская Советская Федеративная Социалистическая Республика，英语：Russian SFSR），舊譯為全俄社会主义劳农委员会联邦共和国，苏联的第一個加盟共和国，以下简称“俄罗斯联邦”（勿与今天的俄罗斯混淆）。俄罗斯联邦是蘇聯面積最大的一級行政區，面积占苏联總面積的76%，人口约是苏联的三分之二；作为蘇聯的加盟共和國，其首府莫斯科也是苏联的首都。</zh-speak>
    </Feature>
    <Feature data="University of Maryland, College Park" zh-data="馬里蘭大學學院市分校" id="94" uri="http://dbpedia.org/resource/University_of_Maryland,_College_Park">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>The University of Maryland, College Park , the National Institute of Standards and Technology, and the Department of Homeland Security.The operating budget of the University of Maryland in fiscal year 2009 was projected to be approximately US$1.531 billion.</speak>
      <zh-speak>马里兰大学（英语：University of Maryland, College Park，英文简称UM、UMD、UMCP或Maryland）中文簡稱馬大，是一所在美国排名前列，并在全世界范围内拥有很高知名度的公立研究性大学。大学创建于1856年，位于美国东北部马里兰州大学公园市，共有超过36000名学生就读，是马里兰大学系統的首要成員，同时也是馬里蘭州以及华盛顿都會区最大的大學，也被認為是公立常春藤院校之一。马大首位华裔校长陆道逵（Wallace D. Loh）于2010年11月1日正式上任。</zh-speak>
    </Feature>
    <Feature data="Amanda Rosenberg" zh-data="" id="95" uri="http://dbpedia.org/resource/Amanda_Rosenberg">
      <neighbors/>
      <speak>Amanda Rosenberg is a Google employee credited with coining the hotword, "Ok, Glass" as well as causing the breakup of Google founder Sergey Brin's marriage to Anne Wojcicki.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Anne Wojcicki" zh-data="安妮·沃西基" id="96" uri="http://dbpedia.org/resource/Anne_Wojcicki">
      <neighbors>
        <neighbor dest="3" relationship="spouse" weight="0"/>
        <neighbor dest="79" relationship="citizenship" weight="0"/>
        <neighbor dest="208" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Anne E. Wojcicki  is an American biologist and the co-founder and chief executive officer of the personal genomics company 23andMe.</speak>
      <zh-speak>安妮·沃西基（英语：Anne Wojcicki，1973年7月28日－），美国生物学家、企业家，基因技术公司23andMe的联合创始人。沃西基是斯坦福大学物理学家斯坦利·沃西基（Stanley Wojcicki）与创作共用副主席埃丝特·沃西基（Esther Wojcicki）之女。她于1996年毕业于耶鲁大学生物学系。2006年，她和琳达·埃维（Linda Avey）一同创办了基因技术公司23andMe。2007年，她与Google创始人谢尔盖·布林成婚。她们育有一子一女。</zh-speak>
    </Feature>
    <Feature data="SolveIT Software" zh-data="" id="97" uri="http://dbpedia.org/resource/SolveIT_Software">
      <neighbors>
        <neighbor dest="4" relationship="division" weight="0"/>
      </neighbors>
      <speak>SolveIT Software Pty Ltd is a provider of advanced planning and scheduling enterprise software for supply and demand optimisation and predictive modelling.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ashraf Habibullah" zh-data="" id="98" uri="http://dbpedia.org/resource/Ashraf_Habibullah">
      <neighbors>
        <neighbor dest="4" relationship="discipline" weight="0"/>
        <neighbor dest="383" relationship="award" weight="0"/>
        <neighbor dest="520" relationship="education" weight="0"/>
      </neighbors>
      <speak>Ashraf Habibullah is a structural engineer  and software developer best known as the founder, President, and CEO of Computers and Structures, Inc., a structural and earthquake engineering software company based in Berkeley, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Rod Johnson (programmer)" zh-data="" id="99" uri="http://dbpedia.org/resource/Rod_Johnson_(programmer)">
      <neighbors>
        <neighbor dest="4" relationship="field" weight="0"/>
      </neighbors>
      <speak>Rod B. Johnson is an Australian computer specialist who created the Spring Framework and co-founded SpringSource, where he served as CEO until its 2009 acquisition by VMware.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Marc Stiegler" zh-data="" id="100" uri="http://dbpedia.org/resource/Marc_Stiegler">
      <neighbors>
        <neighbor dest="4" relationship="occupation" weight="0"/>
        <neighbor dest="706" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Marc Stiegler  which won the Software Publishing Association's CODIE Award for Best New Business Software.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Object-Oriented Software Construction" zh-data="" id="101" uri="http://dbpedia.org/resource/Object-Oriented_Software_Construction">
      <neighbors>
        <neighbor dest="4" relationship="non-fiction subject" weight="0"/>
        <neighbor dest="806" relationship="subject" weight="0"/>
      </neighbors>
      <speak>Object-Oriented Software Construction is a book by Bertrand Meyer, widely considered a foundational text of object-oriented programming.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Gunasekaran Sundarraj" zh-data="" id="102" uri="http://dbpedia.org/resource/Gunasekaran_Sundarraj">
      <neighbors>
        <neighbor dest="4" relationship="occupation" weight="0"/>
      </neighbors>
      <speak>Shri Gunasekaran Sundarraj is an Indian Miniature artist known for his talent in painting and sculpting on grains and articles like grains of rice, mustard, sago, poppy seeds, pencil tips and anything that catches his attention.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="M. Jaffar-ur-Rehman" zh-data="" id="103" uri="http://dbpedia.org/resource/M._Jaffar-ur-Rehman">
      <neighbors>
        <neighbor dest="4" relationship="known for" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
      </neighbors>
      <speak>M. Jaffar-ur-Rehman  was a Pakistani computer scientist.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Virgil Griffith" zh-data="" id="104" uri="http://dbpedia.org/resource/Virgil_Griffith">
      <neighbors>
        <neighbor dest="4" relationship="occupation" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="446" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Virgil Griffith, also known as Romanpoet , is an American software application writer, known for his creation of WikiScanner and the lawsuits filed against him by Blackboard Inc. in 2003. He has published papers on artificial life and integrated information theory  In developing WikiScanner Griffith described his mission as "to create minor public-relations disasters for companies and organizations I dislike."</speak>
      <zh-speak/>
    </Feature>
    <Feature data="CityMax" zh-data="" id="105" uri="http://dbpedia.org/resource/CityMax">
      <neighbors>
        <neighbor dest="4" relationship="key person" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>CityMax.com is an online website builder that includes an ecommerce shopping cart.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Visibility (corporation)" zh-data="" id="106" uri="http://dbpedia.org/resource/Visibility_(corporation)">
      <neighbors>
        <neighbor dest="4" relationship="key person" weight="0"/>
        <neighbor dest="85" relationship="key person" weight="0"/>
      </neighbors>
      <speak>Visibility develops Enterprise Resource Planning , Mixed-Mode and Project-Oriented Manufacturing companies.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="The Mythical Man-Month" zh-data="人月神话" id="107" uri="http://dbpedia.org/resource/The_Mythical_Man-Month">
      <neighbors>
        <neighbor dest="4" relationship="non-fiction subject" weight="0"/>
      </neighbors>
      <speak>The Mythical Man-Month: Essays on Software Engineering is a book on software engineering and project management by Fred Brooks, whose central theme is that "adding manpower to a late software project makes it later". This idea is known as Brooks' law, and is presented along with the second-system effect and advocacy of prototyping.Brooks' observations are based on his experiences at IBM while managing the development of OS/360. He had added more programmers to a project falling behind schedule, a decision that he would later conclude had, counter-intuitively, delayed the project even further.</speak>
      <zh-speak>《人月神话：软件项目管理之道》（英语：The Mythical Man-Month: Essays on Software Engineering）是由IBM System/360系統之父佛瑞德·布魯克斯所著经典文集，全書講解軟體工程、项目管理相关课题，被譽為軟體領域的聖經，內容源於作者布魯克斯在IBM公司System/360家族和OS/360中的專案管理經驗。該书于1975年首次发行（ISBN 0-201-00650-2），並於1995年重新发行纪念版（ISBN 0-201-83595-9），其中新增了对〈没有银弹〉一文的评论和回应，與4個額外的新章節。</zh-speak>
    </Feature>
    <Feature data="Lori L. Pollock" zh-data="" id="108" uri="http://dbpedia.org/resource/Lori_L._Pollock">
      <neighbors>
        <neighbor dest="4" relationship="known for" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="447" relationship="workplaces" weight="0"/>
        <neighbor dest="746" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Lori L. Pollock is an American Computer Scientist noted for her research on software analysis and testing, green software engineering and compiler optimization.She is also noted for her leadership in broadening participation in computing.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="AssureSign" zh-data="" id="109" uri="http://dbpedia.org/resource/AssureSign">
      <neighbors>
        <neighbor dest="4" relationship="data" weight="0"/>
      </neighbors>
      <speak>AssureSign is an electronic signature software solution  that can be deployed as a  Software-as-a-Service   AssureSign LLC was formed as a separate company in 2008 by David Brinkman and Dale Combs.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Fisdap" zh-data="" id="110" uri="http://dbpedia.org/resource/Fisdap">
      <neighbors>
        <neighbor dest="4" relationship="data" weight="0"/>
      </neighbors>
      <speak>Fisdap is an American software company that builds educational software for Emergency Medical Services.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Talentica Software" zh-data="" id="111" uri="http://dbpedia.org/resource/Talentica_Software">
      <neighbors>
        <neighbor dest="4" relationship="data" weight="0"/>
        <neighbor dest="384" relationship="data" weight="0"/>
      </neighbors>
      <speak>Talentica Software  is an offshore product development company headquartered in Pune, India with a sales presence in San Jose, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Yseop" zh-data="" id="112" uri="http://dbpedia.org/resource/Yseop">
      <neighbors>
        <neighbor dest="4" relationship="data" weight="0"/>
        <neighbor dest="297" relationship="data" weight="0"/>
        <neighbor dest="384" relationship="data" weight="0"/>
      </neighbors>
      <speak>Yseop  is a privately held multinational computer software company with offices in Dallas, New York, London, Lyon and Paris that analyzes structured data and transforms it into written language in English, Spanish, French, Portuguese and German.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Guruji.com" zh-data="" id="113" uri="http://dbpedia.org/resource/Guruji.com">
      <neighbors>
        <neighbor dest="4" relationship="&lt;br />
 industry" weight="0"/>
      </neighbors>
      <speak>Guruji.com is an abandoned Indian Internet search engine that was focused on providing better search results to Indian consumers, by leveraging proprietary algorithms and data in the Indian context.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Aria Networks" zh-data="" id="114" uri="http://dbpedia.org/resource/Aria_Networks">
      <neighbors>
        <neighbor dest="4" relationship="Mark Boggett, Stephen Newton, David Rice-Jones
  industry" weight="0"/>
        <neighbor dest="290" relationship="location" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>Aria Networks is a business that makes network planning and design software for the telecommunications industry.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Felix Perez Camacho" zh-data="" id="115" uri="http://dbpedia.org/resource/Felix_Perez_Camacho">
      <neighbors>
        <neighbor dest="4" relationship="profession" weight="0"/>
      </neighbors>
      <speak>Felix James Perez Camacho  is a former Governor of Guam from January 6, 2003 to January 3, 2011. He is a member of the United States Republican Party.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Eschscholzia californica" zh-data="花菱草" id="116" uri="http://dbpedia.org/resource/Eschscholzia_californica">
      <neighbors/>
      <speak>Eschscholzia californica  is a species of flowering plant in the family Papaveraceae, native to the United States and Mexico, and the official state flower of California.</speak>
      <zh-speak>花菱草（学名：Eschscholzia californica），又名加州罌粟、金英花，是罌粟科花菱草屬的一種草本植物。原產於美國西部及墨西哥，分佈在美國的加州，向外延伸至俄勒岡州、華盛頓州南部、內華達州、亞利桑那州及新墨西哥州等地，在墨西哥則分佈在索諾拉州及下加利福尼亞州西北部。生長在海拔零至二千公尺的草地及開闊地區。花菱草是美國加州的州花，加州指定每年的四月六日為花菱草日。在加州的州界牌上有花菱草的圖像。</zh-speak>
    </Feature>
    <Feature data="Greater Los Angeles Area" zh-data="大洛杉矶地区" id="117" uri="http://dbpedia.org/resource/Greater_Los_Angeles_Area">
      <neighbors>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="126" relationship="is part of" weight="0"/>
        <neighbor dest="143" relationship="TimeZone" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
      </neighbors>
      <speak>The Greater Los Angeles Area, or the Southland, is a term used for both the urbanized region and Combined Statistical Area in the United States, sprawling over five counties in the southern part of California, namely Los Angeles, Orange, San Bernardino, Riverside, and Ventura counties.Throughout the 20th century, it was one of the fastest-growing regions in the United States, although growth has slowed since 2000. As of the 2010 U.S. Census, the Los Angeles Metropolitan Statistical Area had a population of nearly 13 million residents.</speak>
      <zh-speak>大洛杉矶地区（Greater Los Angeles Area）又称南部地区（Southland），指的是美國加利福尼亚州南部的一个横跨5个县的大型联合统计区（一组联系较为紧密的大都市地区）。这5个县分别是洛杉矶县、橙县、圣贝纳迪诺县、里弗赛德县和文图拉县。大洛杉矶是整个20世纪美国人口增长最快的地区之一，虽然进入21世纪后其人口增长速度有所放缓，但是根据2010年美国人口普查，洛杉矶都会区约有1280万居民，而整个大洛杉矶地区则拥有超过1780万居民，并且2011年统计的人口数已经达到1810万，无论是按哪一个统计数字，洛杉矶都会区都是仅次于纽约都会区的全美第二大都会区，也是世界上最大的大都会区之一。大洛杉矶地区从地理上主要是以洛杉矶市及其周边城市为核心的一系列城市群，美国人口调查局对大洛杉矶地区的定义为包括洛杉矶都会区、文图拉县、橙县以及整个内陆帝国（包括圣贝纳迪诺县和里弗赛德县的大片未经开发人口稀少的地区）组成的“洛杉矶-长滩-里弗赛德”联合统计区。“大洛杉矶地区”并不包括圣迭戈县和因皮里尔县，从地区上这两个县也没有与洛杉矶及其周边城市地区相连接。根据美国人口调查局的统计，洛杉矶都会圈的总面积为4,850平方英里（12,561.442平方公里），而大洛杉矶地区总面积则达33,954平方英里（87,940.456平方公里），是美国面积最大的都市圈，不过，这个区域有超过一半位于人烟稀少的圣贝纳迪诺县和里弗赛德县东部地区。大洛杉矶地区不但是世界上最大的娱乐产业中心，也是一个全球性的商业、国际贸易、教育、媒体、时尚、旅游、科学技术、体育和运输中心。经济上，大洛杉矶地区是美国第二，世界第三大城市经济体，仅次于东京都会区和纽约都会区，是一个国际性的金融、娱乐、媒体、文化、教育、科学、旅游中心，年经济总量超过7700亿美元。</zh-speak>
    </Feature>
    <Feature data="Mount Shasta" zh-data="沙斯塔山" id="118" uri="http://dbpedia.org/resource/Mount_Shasta">
      <neighbors>
        <neighbor dest="6" relationship="located in area" weight="0"/>
        <neighbor dest="79" relationship="located in area" weight="0"/>
      </neighbors>
      <speak>Mount Shasta  which makes it the most voluminous stratovolcano in the Cascade Volcanic Arc.The mountain and its surrounding area are managed by the U.S. Forest Service, Shasta-Trinity National Forest.</speak>
      <zh-speak>沙斯塔山，又稱白山。是位於美國加利福尼亞州的一座的死火山，由安山岩組成的圓錐形火山。沙斯塔山位於喀斯喀特山脈南部，為喀斯喀特山脈中的第二高峰（僅次於雷尼爾山），加利福尼亞州的第五高峰。在當地原住民的信仰中，沙斯塔山擁有崇高的地位。在過去的10000年中，沙斯塔山平均每800年就會噴發一次；最近的4500年中，則平均每600年就噴發一次，最近的一次噴發是在1786年。</zh-speak>
    </Feature>
    <Feature data="Square dance" zh-data="方塊舞" id="119" uri="http://dbpedia.org/resource/Square_dance">
      <neighbors/>
      <speak>A square dance is a dance for four couples  of music.</speak>
      <zh-speak>方塊舞（Square dance），為美國鄉村西部舞、民族舞蹈的一種，在美國中西部是很普遍團體社交舞。由四對舞伴排成正方形而舞，主要由英國舞蹈、卡德利爾舞（French quadrille）衍化而來。</zh-speak>
    </Feature>
    <Feature data="Yosemite National Park" zh-data="優勝美地國家公園" id="120" uri="http://dbpedia.org/resource/Yosemite_National_Park">
      <neighbors>
        <neighbor dest="6" relationship="location" weight="0"/>
      </neighbors>
      <speak>Yosemite National Park  during the early glacial episode.</speak>
      <zh-speak>優勝美地國家公園（英语：Yosemite National Park，當地部份華文傳媒譯作優山美地國家公園）是一座美國的國家公園，範圍橫跨加州中西部图奥勒米县、马里波萨县和馬德拉縣。公園面積為761,268英畝（3,080.74平方公里），公園範圍包括內華達山脈西側山坡。每年有超過三百七十萬名遊客造訪優勝美地國家公園，大多數是為了優勝美地山谷而來。在1984年被指定為世界遺產，優勝美地國家公園以其壯觀的花崗岩懸崖、瀑布、清澈的溪流、巨杉和豐富的生物多樣性聞名於世。公園內超過95%的土地被指定為原生地域（wilderness）。優勝美地是內華達山脈中範圍最大、最完整的生物棲地，境內有著多樣的植物和動物。公園區內的海拔範圍從2,127至13,114英呎（648至3,997公尺），包含五種生態高度分區：分別是灌木/櫟森林、低山地、高山地、亞高山帶針葉林、高地等。在加州的7000種植物裡，其中50%分布在內華達山脈，而當中的20%生長在優勝美地。當白人抵達此地時，誤認「優勝美地（Yosemite）」是從前住在這裡的一個印地安部落的名字，故以其命名。實際上，當地原住民自稱「阿瓦尼奇（Ahwahneechee）」，稱優勝美地谷地為「阿瓦尼（Ahwahnee）」，而「優勝美地」則為該族語言中「殺手」之意。優勝美地山谷在上一次冰河時期被冰川覆蓋，山谷呈Ｕ字型，兩旁峭壁上到處可見由冰川切削過的痕跡，最有名的莫過於半圓丘（Half Dome）了。山谷到處掛滿了瀑布，最有名的是優勝美地瀑布。冰川退去後，優勝美地山谷曾經歷多次氾濫，谷底形成一片氾濫平原，優美的美熹德河（Merced River）從中流過。2014年被用來命名Apple電腦作業系統OS X Yosemite。</zh-speak>
    </Feature>
    <Feature data="Chinese language" zh-data="汉语" id="121" uri="http://dbpedia.org/resource/Chinese_language">
      <neighbors>
        <neighbor dest="79" relationship="spoken in" weight="0"/>
        <neighbor dest="334" relationship="spoken in" weight="0"/>
      </neighbors>
      <speak>Unless otherwise specified, Chinese texts in this article are written in . There are also sizeable Hakka and Shanghainese diasporas, for example in Taiwan, where most Hakka communities are also conversant in Taiwanese and Standard Chinese.</speak>
      <zh-speak>漢語，又称华语（东南亚）、中國語（日本、韩国等），其他名稱有汉文（通常指文言文）、中文、华文、唐文、唐話、中國話等，是属汉藏语系的分析语，具有声调。汉语的文字系统——汉字是一种意音语言，表意的同時也具一定的表音功能。漢語包含書面語以及口語兩部分，古代書面汉语称为文言文，现代书面汉语一般指使用現代標準漢語語法，詞彙的中文通行文体。目前全球有六分之一人口使用漢語作為母語。漢語口語有官話、粵語、吳語、湘語、贛語、客家語、閩語等七種主要漢語言。但也有人认为晋语和（或）徽語和（或）平話（廣西平話）也应为独立漢語言，也有其他人認為閩語其實是一個語族，下轄閩南語、閩東語、閩中語、閩北語以及莆仙語，國際標準化組織即持此觀點，部分資料將其中的一至六種也算成單獨的漢語言，這就是八至十三種漢語言的由來。</zh-speak>
    </Feature>
    <Feature data="Gold" zh-data="金" id="122" uri="http://dbpedia.org/resource/Gold">
      <neighbors/>
      <speak>Gold is a chemical element with symbol Au . Gold is also used in infrared shielding, colored-glass production, and gold leafing.</speak>
      <zh-speak>金是一種化学元素，化学符号是Au，原子序数是79。金是一種廣受歡迎的貴金屬，多個世纪以來一直被用作貨幣、保值物及珠寶。在自然界中，金出现在岩石中的金塊或金粒、地下礦脈及沖積層中。金亦是貨幣金屬之一。金在室溫下為固體、密度高、柔軟、光亮、抗腐蚀，其延展性及延性均是已知金屬中最高。純金的亮黃色在傳統上被認為具有吸引力。在布雷頓森林協定结束前，金是金本位货币制度的基石。金條的ISO貨幣代碼是XAU。金在現代工業應用層面有牙醫學与電子學。傳統上，金對氧化侵蝕的高抵抗性是人们使用它的原因之一。化學上，金是一種過渡金屬，在溶解後可以形成三價及單價正離子。金與大部分化學物都不會发生化学反應，但可以被氯、氟、王水及氰化物侵蝕。金能夠被水銀溶解，形成汞齊（但这并非化学反應）；能夠溶解銀及卑金屬的硝酸不能溶解金。以上两个性質成為黃金精煉技術基础，分别稱為“加銀分金法”及“金銀分離法”。此外，硝酸可用来鉴别物品裡是否含有金元素，这一古老方法亦是英語諺語「acid test」的語源，意指用「測試黃金的標準」来測試目標物是否名副其實。</zh-speak>
    </Feature>
    <Feature data="Spanish language" zh-data="西班牙语" id="123" uri="http://dbpedia.org/resource/Spanish_language">
      <neighbors/>
      <speak>Spanish /ˈspænɪʃ/ , is a Romance language that originated in the Castile region of Spain.</speak>
      <zh-speak>西班牙语（Español）也称卡斯蒂利亚语（Castellano），简称西语，是起源於西班牙卡斯蒂利亚的一種罗曼语系語言。除了發源地西班牙之外，使用者主要集中在拉丁美洲国家，约有4亿人使用。按照第一语言使用者数量排名，西班牙语为世界第二大语言，仅次于漢語。语言总使用人数之排名为世界第三，次于英语和漢語。全世界有超過五億人的母語或第二語言是西班牙語，另外有二千萬的學生將西班牙語當作外語學習。</zh-speak>
    </Feature>
    <Feature data="Vietnamese language" zh-data="越南语" id="124" uri="http://dbpedia.org/resource/Vietnamese_language">
      <neighbors/>
      <speak>Vietnamese /ˌviɛtnəˈmiːz/  in use today is a Latin alphabet with additional diacritics for tones, and certain letters.</speak>
      <zh-speak>越南語（Tiếng Việt／㗂越&lt;/span&gt;）又稱越語（Việt Ngữ／越語&lt;/span&gt;）、京語（Tiếng Kinh／㗂京&lt;/span&gt;）及國語（Quốc Ngữ／國語&lt;/span&gt;），除此之外，還有一個現代少用的前法國殖民地名稱安南語（Tiếng An Nam／㗂安南&lt;/span&gt;）。越南語是越南的國家語言，有85至90%的越南人將之作為母語，另外居住在海外的3百萬越僑、住在中國廣西的京族亦使用越南語。歷史上，越南語曾經使用漢字與喃字表記（即漢喃文），現代則使用以拉丁字母為基礎，添加若干個新字母及聲調符號的國語字（Chữ Quốc Ngữ／𡨸國語&lt;/span&gt;）書寫。</zh-speak>
    </Feature>
    <Feature data="Gray whale" zh-data="灰鯨" id="125" uri="http://dbpedia.org/resource/Gray_whale">
      <neighbors/>
      <speak>The gray whale  on the European coast before 500 AD and on the American coast around the late 17th to early 18th centuries.</speak>
      <zh-speak>灰鯨（Eschrichtius robustus），現又稱東太平洋灰鯨，其他称呼有加州灰鲸、魔鬼鱼、掘贝者和弱鲸，是一種每年來往攝食區和繁殖區的鯨。为灰鲸科灰鲸属的动物。在中国大陆，分布于黄海、东海等海域，多栖息于热带及暖温带海域。该物种的模式产地在瑞典。牠們約有16 米長，36公頓重，一般可活到50–60歲。灰鯨曾一度被稱為「魔鬼魚」，因為當牠們被追獵時會奮力搏鬥。灰鯨是灰鲸屬中唯一的物種，亦是灰鯨科中唯一的物種。這種動物是最古老的物種之一，在地球上已有約3000萬年的歷史。在很久之前牠們一度是巨牙鯊的捕食對象（巨牙鯊現已滅絕）。</zh-speak>
    </Feature>
    <Feature data="Los Angeles" zh-data="洛杉矶" id="126" uri="http://dbpedia.org/resource/Los_Angeles">
      <neighbors>
        <neighbor dest="117" relationship="is part of" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
      </neighbors>
      <speak>Los Angeles , making it the third-largest in the world, after the Greater Tokyo and New York metropolitan areas.</speak>
      <zh-speak>洛杉磯（英语：City of Los Angeles，缩写为L.A.，簡稱洛城）是一座位於美國西岸加州南部的城市，按照人口排名，洛杉矶是加州的第一大城（拥有超过400万人口），也是美國的第二大城，僅次於紐約市。它的面积为469.1平方英里（1214.9平方公里）。洛杉矶-长滩-圣安娜都会区拥有1300万人口。 大洛杉矶地区所涵盖的范围更大，包括5个县，大约1800万人口。洛杉矶在1781年由西班牙总督菲利普·德·内维所创建。它曾是西班牙領土的一部分，自1821年墨西哥从西班牙赢得独立后属于墨西哥，在1848年，墨西哥在美墨战争中失败，将加利福尼亚割让给美国。1850年4月4日，洛杉矶正式建市（5个月之后，加利福尼亚成为美国的一个州）。洛杉矶市也是洛杉矶县的县治所在。洛杉矶是全世界的文化、科学、技术、国际贸易和高等教育中心之一，还拥有世界知名的各种专业与文化领域的机构。该市及紧邻的区域，在大众娱乐—诸如电影、电视、音乐方面构成了洛杉矶的国际声誉和全球地位的基础。</zh-speak>
    </Feature>
    <Feature data="Sacramento, California" zh-data="沙加緬度" id="127" uri="http://dbpedia.org/resource/Sacramento,_California">
      <neighbors>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
      </neighbors>
      <speak>Sacramento  west of the capital.</speak>
      <zh-speak>萨克拉门托（英语：Sacramento，又譯為沙加缅度），是一個位於美國加利福尼亞州中部、沙加緬度河流域上的城市，加州州政府和沙加緬度郡郡政府皆位於此。最初於1849年12月由John Sutter建立，今天也是加州在人口上的第五大城。沙加緬度最初是由Fort Sutter成長而來，而Fort Sutter也是由John Sutter於1839年所建立的。在19世紀中的掏金潮時，沙加緬度是一個重要的人口集散地，也是一個商業和農業中心、和運貨馬車隊、驛站馬車、河輪、電報、驛馬快遞、和第一橫貫大陸鐵路的末端站。Sacramento是來自西班牙語「聖事」之意，是西班牙人最初抵達此區時給加州中央山谷和沙加緬度河起的名字，後來Fort Sutter發展成市鎮後也成為了市名。中文譯名“沙加缅度”源自19世紀粵籍華僑對「Sacramento」的音譯，至今仍是當地華人及華語媒體唯一使用、以及臺灣採用的中文名稱，但現時中國大陸和香港譯作“萨克拉门托”。老一輩華僑也通常稱沙加緬度為「二埠」，相對於「大埠」指舊金山、和「三埠」為斯托克顿，但近年新移民已較少用這名稱。</zh-speak>
    </Feature>
    <Feature data="Tagalog language" zh-data="他加祿語" id="128" uri="http://dbpedia.org/resource/Tagalog_language">
      <neighbors/>
      <speak>Tagalog /təˈɡɑːlɒɡ/ , of Bulacan and of Metro Manila.</speak>
      <zh-speak>他加祿語（Wikang Tagalog），又稱為他加洛語、塔加洛语和塔加路语，在語言分類上屬於南島語系的馬來-玻里尼西亞語族，主要於菲律賓使用。菲律賓的國語菲律賓語，正是以他加祿語為主體發展而來的。根據菲律賓政府2000年所進行的人口普查，在76,332,470菲律賓人中，有21,485,927人以他加祿語為母語。此外，還有將近5,000萬其他菲律賓人則以他加祿語為第二語言。在菲律賓將近170種的本土語言中，只有他加祿語具有官方語言地位。</zh-speak>
    </Feature>
    <Feature data="Benitoite" zh-data="" id="129" uri="http://dbpedia.org/resource/Benitoite">
      <neighbors/>
      <speak>Benitoite  is a rare blue barium titanium silicate mineral, found in hydrothermally altered serpentinite.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="California State Tartan" zh-data="" id="130" uri="http://dbpedia.org/resource/California_State_Tartan">
      <neighbors/>
      <speak>The California State Tartan is the official tartan of the State of California, created July 23, 2001 and defined under law in California state government code 424.3, The official State Tartan is generally described as a pattern or sett consisting of alternate squares of meadow-green and Pacific blue that are separated and surrounded by narrow charcoal bands.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="California red-legged frog" zh-data="" id="131" uri="http://dbpedia.org/resource/California_red-legged_frog">
      <neighbors/>
      <speak>The California red-legged frog . The frog is an IUCN vulnerable species, and a federally listed threatened species of the United States, and is protected by law.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Desert tortoise" zh-data="" id="132" uri="http://dbpedia.org/resource/Desert_tortoise">
      <neighbors/>
      <speak>The desert tortoises . Gopherus morafkai occurs east of the Colorado River in Arizona as well as in the states of Sonora, Sinaloa, Mexico.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="English American" zh-data="" id="133" uri="http://dbpedia.org/resource/English_American">
      <neighbors>
        <neighbor dest="6" relationship="population place" weight="0"/>
        <neighbor dest="78" relationship="population place" weight="0"/>
        <neighbor dest="382" relationship="population place" weight="0"/>
        <neighbor dest="490" relationship="population place" weight="0"/>
      </neighbors>
      <speak>English Americans, also referred to as Anglo-Americans, are Americans whose ancestry originates wholly or partly in England.According to the American Community Survey in 2010 data, Americans reporting English ancestry made up an estimated 9.0% of the total U.S. population, and form the third largest European ancestry group after German Americans and Irish Americans.However, demographers regard this as a serious undercount, as the index of inconsistency is high, and many, if not most, people from English stock have a tendency  settlers who colonized Ireland during the Plantation of Ulster in the 17th century.In 1982, an opinion poll showed respondents a card listing a number of ethnic groups and asked, "Thinking both of what they have contributed to this country and have gotten from this country, for each one tell me whether you think, on balance, they've been a good or a bad thing for this country." The English were the top ethnic group with 66% saying they were a good thing for the United States, followed by the Irish at 62%.The overwhelming majority of the Founding Fathers of the United States of America were of English extraction, including Benjamin Franklin, George Washington, John Adams, James Madison and Thomas Jefferson.English immigrants in the 19th century, as with other groups, sought economic prosperity.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Flag of California" zh-data="加利福尼亞州州旗" id="134" uri="http://dbpedia.org/resource/Flag_of_California">
      <neighbors/>
      <speak>The Bear Flag is the official flag of the state of California.</speak>
      <zh-speak>熊旗是加利福尼亚州的正式州旗。它的前身首先在1846年的熊旗革命中使用，1911年正式被加州法律定为州旗。熊旗的长是高的1.5倍，下1/6为红色条，上5/6为白色底，在白底的左上角有一颗红星，白底的下部写有「加利福尼亚共和国」字样，白底的中央是一头在草地上的加利福尼亚灰熊，它朝左边走去，为暗棕色，长度为旗长的1/3。</zh-speak>
    </Feature>
    <Feature data="Giuseppe Garibaldi" zh-data="朱塞佩·加里波底" id="135" uri="http://dbpedia.org/resource/Giuseppe_Garibaldi">
      <neighbors/>
      <speak>Giuseppe Garibaldi  was an Italian general and politician who played a large role in the history of Italy.</speak>
      <zh-speak>朱塞佩·加里波第（意大利语：Giuseppe Garibaldi，義大利語發音：[dʒuˈzɛppe ɡariˈbaldi]),又译加里波底，音译则为加里巴尔迪；1807年7月4日-1882年6月2日）是一位意大利将领、爱国者与政治家。他献身于意大利统一运动，亲自领导了许多军事战役，被称为意大利统一的宝剑。他与加富尔、朱塞佩·马志尼一起被梁启超称为意大利建国三杰。此外，他与维托里奥·埃马努埃莱二世、加富尔、马志尼被共同视为意大利的国父。加里波第在意大利复兴运动中是一位中心人物，因为他亲自指挥与参与了许多场战役，而这些战役最终导致了统一的意大利的形成。他通常是某一合法势力的代表。例如：他在1848年被米兰临时政府指派为将军，在1849年被罗马共和国战争部长指派为将军，以及在维托里奥·埃马努埃莱二世的赞同下，代表他领导了千人远征。因此在代表这些势力时，他并不确切地算是一位革命者。加里波第也被称为“两个世界的英雄”，这是因为他在南美洲和欧洲都有军事活动。在当时的国际性传媒报道的推波助澜下，这些活动令他在意大利及海外赢得了重要的名声。在他那个时代，许多最伟大的知识分子，比如维克多·雨果、大仲马、乔治·桑，都对他刮目相看。英国与美国对他帮助巨大，在他困难时，这两个国家都为他提供过财政与军事上的支持。</zh-speak>
    </Feature>
    <Feature data="Golden trout" zh-data="阿瓜大麻哈魚" id="136" uri="http://dbpedia.org/resource/Golden_trout">
      <neighbors/>
      <speak>The California golden trout, or simply the golden trout  , found in the Kern River system.</speak>
      <zh-speak>阿瓜大麻哈鱼，為輻鰭魚綱鮭形目鮭科的其中一種。</zh-speak>
    </Feature>
    <Feature data="Grizzly bear" zh-data="灰熊" id="137" uri="http://dbpedia.org/resource/Grizzly_bear">
      <neighbors/>
      <speak>The grizzly bear . A sow is protective of her offspring and will attack if she thinks she or her cubs are threatened.</speak>
      <zh-speak>灰熊（学名：Ursus arctos horribilis）为棕熊亚种，分布于北美洲西部，是北美最常见的棕熊。灰熊的祖先被认为是10万年前从西伯利亚跨过白令海峡来到阿拉斯加的乌苏里棕熊。灰熊通常独居生活，但是在沿海地区，灰熊在鲑鱼产卵的季节会聚集在溪流、河流、湖泊和池塘周围。雌性灰熊每隔一年生产1至4头幼崽，通常为2头，每头幼崽重量仅为500克。母熊严密保护其幼崽，在认为自己或幼崽受到威胁时，便会进攻。</zh-speak>
    </Feature>
    <Feature data="I Love You, California" zh-data="" id="138" uri="http://dbpedia.org/resource/I_Love_You,_California">
      <neighbors/>
      <speak>"I Love You, California" , then conductor of the Orpheum Theatre Orchestra.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="List of U.S. states by date of admission to the Union" zh-data="美國州份依加入聯邦順序排列列表" id="139" uri="http://dbpedia.org/resource/List_of_U.S._states_by_date_of_admission_to_the_Union">
      <neighbors/>
      <speak>This is a list of U.S. states by date of admission to the Union.</speak>
      <zh-speak>這是美國州份依加入聯邦順序排列列表（英语：list of U.S. states by date of statehood），即依照各個美國州份加入聯邦的日期排序。雖說前13州，被認為從獨立宣言（1776年7月4日）或批准邦聯條例的該日起，便是美國的一份子，在此以批准美國憲法的日期代表它們被「准許加入」的日期，這與其他大多數這樣的列表，包括美國50州25美分紀念幣的做法相同。後來的州份的加入日期，則由各自的批准法案或根據該法案頒布的決議案的日期決定，除了俄亥俄州，它的加入日期是由國會於1953年的法案決定在1803年3月1日，其議會第一次的與會日期，這是因為筆誤而遺漏——原始的法案忘記制定一個生效的日期。本列表並不將美國內戰期間，11個州的脫離以建立美利堅邦聯，以及隨後在1866到1870年之間，這些州在國會恢復代表權（有時被稱作「重新接納」），或是這些州份結束重建的這些事件考慮進去，因為既然其分裂已經被最高法院在德克薩斯州訴懷特案宣布為非法，故它們從未「合法地」離開這個聯邦。本列表也不考慮在其它兩州組成的分裂政府，因為其聯邦政府皆普遍保有控制權。</zh-speak>
    </Feature>
    <Feature data="Mount Whitney" zh-data="惠特尼峰" id="140" uri="http://dbpedia.org/resource/Mount_Whitney">
      <neighbors>
        <neighbor dest="6" relationship="located in area" weight="0"/>
        <neighbor dest="79" relationship="located in area" weight="0"/>
      </neighbors>
      <speak>Mount Whitney is the highest summit in the contiguous United States and the Sierra Nevada, with an elevation of 14,505 feet  from Happy Isles in Yosemite Valley.</speak>
      <zh-speak>惠特尼峰（Mount Whitney）是位於美國加利福尼亞州內華達山脈中的一座山峰。惠特尼峰海拔高度為4,418m，是美國本土最高的山峰。惠特尼峰位於紅杉國家公園內。名稱來自於當時在加利福尼亞州進行考查的哈佛大學地理教授惠特尼。</zh-speak>
    </Feature>
    <Feature data="Multilingualism" zh-data="多语制" id="141" uri="http://dbpedia.org/resource/Multilingualism">
      <neighbors/>
      <speak>Multilingualism is the use of two or more languages, either by an individual speaker or by a community of speakers.</speak>
      <zh-speak>多語制（Multilingualism），指社群或個人，使用兩種（亦稱雙語）或兩種以上語言的現象。世界90%以上的人民處於雙語或多語社會中。</zh-speak>
    </Feature>
    <Feature data="Nassella pulchra" zh-data="" id="142" uri="http://dbpedia.org/resource/Nassella_pulchra">
      <neighbors/>
      <speak>Nassella pulchra, basionym Stipa pulchra, is a species of grass known by the common names purple needlegrass and purple tussockgrass.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Pacific Time Zone" zh-data="太平洋时区" id="143" uri="http://dbpedia.org/resource/Pacific_Time_Zone">
      <neighbors/>
      <speak>The Pacific Time Zone observes standard time by subtracting eight hours from Coordinated Universal Time .  Most of Canada uses daylight saving time.</speak>
      <zh-speak>太平洋时区（英语：Pacific Time Zone）使用在美国、加拿大及墨西哥西海岸靠近太平洋的地区。太平洋时区也被称为太平洋时间（英文：Pacific Time，縮寫：PT）。而其标准时间則为太平洋标准时间（英文：Pacific Standard Time，縮寫：PST），UTC-8；夏令时间为太平洋夏令时間（英文：Pacific Daylight Time，縮寫：PDT），UTC-7。於美國和加拿大，太平洋时区通常被称为太平洋时间。明确地說，太平洋时区於标准时间（冬季）期間稱為太平洋标准时间，而於夏令时间（夏季）期間則稱為 太平洋夏令时間。大部份加拿大地區都使用夏令时間。而於墨西哥，UTC−8時區一帶被稱為西北区，其時間是與美國的太平洋夏令时间同步。位於太平洋时区中最大的城市為加州洛杉矶，而最大的地區則為洛杉磯都會區。太平洋时区比阿拉斯加標準時間快一小時、比夏威夷快2小時、比山区时区慢一小時、比东部时区慢三小時及比香港時間慢16小時。</zh-speak>
    </Feature>
    <Feature data="San Joaquin (soil)" zh-data="" id="144" uri="http://dbpedia.org/resource/San_Joaquin_(soil)">
      <neighbors/>
      <speak>San Joaquin is an officially designated state insignia, the state soil of the U.S. state of California.The California Central Valley has more than 500,000 acres  of San Joaquin soils, named for the south end of that valley.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Serpentine group" zh-data="蛇紋石" id="145" uri="http://dbpedia.org/resource/Serpentine_group">
      <neighbors/>
      <speak>The serpentine group are greenish, brownish, or spotted minerals commonly found in serpentinite rocks.</speak>
      <zh-speak>蛇紋石（拉丁语：Serpentine），是一種矽酸鹽礦物的群組名稱，其化學式為(Mg,Fe)3Si2O5(OH)4。蛇紋石是由橄欖石變質產生出來的綠色礦物，也是構成蛇紋岩的主要礦物。</zh-speak>
    </Feature>
    <Feature data="Serpentinite" zh-data="蛇紋岩" id="146" uri="http://dbpedia.org/resource/Serpentinite">
      <neighbors/>
      <speak>Serpentinite is a rock composed of one or more serpentine group minerals.</speak>
      <zh-speak>蛇纹岩是一种由于区域变质作用或热液交代作用，将超基性岩石中的橄榄石和辉石发生蛇纹石化，从而形成的一种变质岩石。蛇纹岩质软，具有滑感，主要由蛇纹石组成，颜色一般为灰绿色、黑绿色或黄绿色，色泽不均匀，颜色鲜艳半透明的蛇纹岩可以作为工艺品原料或建筑装饰材料，蛇纹岩石棉可以作为耐火材料，可以作为提炼镁或钙磷镁肥的原料，伴生的矿物有磁铁矿、钛铁矿、铬铁矿、菱镁矿、滑石、石棉、镍、钴、铂等。中国蛇纹岩主要分布在内蒙、甘肃、云南、四川、西藏等地。</zh-speak>
    </Feature>
    <Feature data="Smilodon" zh-data="斯劍虎" id="147" uri="http://dbpedia.org/resource/Smilodon">
      <neighbors/>
      <speak>Smilodon /ˈsmaɪlədɒn/ is an extinct genus of machairodont felid.</speak>
      <zh-speak>刃齒虎（Smilodon），又名美洲劍齒虎或斯劍虎，其學名在希臘文的意思有「刀一般的牙齒」的意思，大約生存在距今3百萬至1萬年前的北美洲和南美洲。</zh-speak>
    </Feature>
    <Feature data="Zerene eurydice" zh-data="" id="148" uri="http://dbpedia.org/resource/Zerene_eurydice">
      <neighbors/>
      <speak>Zerene eurydice, the California dogface butterfly, is sometimes placed in the related genus as Colias eurydice.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="California quail" zh-data="" id="149" uri="http://dbpedia.org/resource/California_quail">
      <neighbors/>
      <speak>The California quail , a brighter head and a scalier appearance.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Eureka (word)" zh-data="尤里卡 (词语)" id="150" uri="http://dbpedia.org/resource/Eureka_(word)">
      <neighbors/>
      <speak>"Eureka"  is an interjection used to celebrate a discovery or invention.</speak>
      <zh-speak>尤里卡（希腊语：εὕρηκα；拉丁化：Eureka；词义：“我发现了”）是一个源自希腊用以表达发现某件事物、真相时的感叹词。这个词语之所以那么出名完全可以归功于古希腊学者阿基米德，有一天，他在洗澡的時候发现，当他坐进浴盆里时有许多水溢出來，这使得他想到：溢出來的水的体积正好应该等於他身体的体积，这意味着，不规则物体的体积可以精确的被计算，这为他解决了一个棘手的问题。阿基米德想到这里，不禁高兴的從浴盆跳了出來，光著身体在城里边跑边喊叫着“尤里卡！尤里卡！”，试图与城里的民众分享他的喜悦。后来，阿基米德将他的这个发现总结出浮力理论记载在《浮体论》中，同时它也为流体静力学建立了基础的原理。其他出名的例子有数学家卡尔·弗里德里希·高斯，他在1796年7月10日在日记中写道：“EYPHKA! num = Δ + Δ + Δ”，指的是他发现的任何正整数可表示的总和，是最多三个三角形数。</zh-speak>
    </Feature>
    <Feature data="Sequoia sempervirens" zh-data="加州紅木" id="151" uri="http://dbpedia.org/resource/Sequoia_sempervirens">
      <neighbors/>
      <speak>Sequoia sempervirens /sɨˈkɔɪ.ə sɛmpərˈvaɪərənz/ is the sole living species of the genus Sequoia in the cypress family Cupressaceae . On its own, the term redwood usually refers to the coast redwood, which is covered in this article, and not to the other two species.</speak>
      <zh-speak>加州紅木（学名：Sequoia sempervirens），又稱海岸紅杉、紅杉、北美紅杉，是世界上長的最高的植物之一，能長到115公尺高，主要分佈於美國加利福尼亞州。目前已知最老的紅木約有2,200歲。加州紅木（Sequoia）據信為紀念切羅基文字發明者塞闊雅（Seguoyah）而命名。紅杉（紅木）這個名詞廣義上也被用作為紅杉亞科（Sequoioideae）的通稱。該亞科包括了生長在加州海岸山脈地區的紅杉屬（Sequoia）、加州內華達山脈西側的巨杉屬(Sequoiadendron)與中國地區的水杉屬(Metasequoia)三種近親物種。</zh-speak>
    </Feature>
    <Feature data="Barbara Boxer" zh-data="芭芭拉·柏克瑟" id="152" uri="http://dbpedia.org/resource/Barbara_Boxer">
      <neighbors>
        <neighbor dest="6" relationship="region" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="156" relationship="associate" weight="0"/>
        <neighbor dest="382" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Barbara Levy Boxer .Born in Brooklyn, New York, Boxer graduated from Brooklyn College.</speak>
      <zh-speak>芭芭拉·李維·柏克瑟（Barbara Levy Boxer，1940年11月11日－）是美國的政治人物、也是來自加利福尼亚的現任參議員。身為民主黨籍，鮑克瑟在1992年被選為參議員。在從政生涯中，鮑克瑟一直大力支持環保議題、婦女權利、槍械管制、以及政府資助的醫學研究。她被認為是民主黨內更為左派和進步派的人物，這使她經常與黨內其他較保守的成員產生衝突。鮑克瑟在卡利佛尼亞選區的選票基礎也隨著連任資歷增加而逐漸穩固。在110屆國會裡鮑克瑟是參議院裡環境及公共工程委員會的主席，她是第一個擔任此職位的女性參議員。鮑克瑟曾經擔任屬少數派的民主黨黨鞭職務，從2007年1月4日開始則成為多數派的黨鞭了。</zh-speak>
    </Feature>
    <Feature data="California State Assembly" zh-data="加利福尼亚州众议院" id="153" uri="http://dbpedia.org/resource/California_State_Assembly">
      <neighbors>
        <neighbor dest="6" relationship="location" weight="0"/>
        <neighbor dest="127" relationship="location" weight="0"/>
        <neighbor dest="154" relationship="is part of" weight="0"/>
      </neighbors>
      <speak>The California State Assembly is the lower house of the California State Legislature.</speak>
      <zh-speak>加利福尼亚州州众议院（英语：California State Assembly）是美国加利福尼亚州议会的下议院。加利福尼亚州州众议院共有80名议员，每届任期2年。加利福尼亚州州众议院领导人为议长。</zh-speak>
    </Feature>
    <Feature data="California State Legislature" zh-data="加利福尼亞州議會" id="154" uri="http://dbpedia.org/resource/California_State_Legislature">
      <neighbors>
        <neighbor dest="6" relationship="location" weight="0"/>
        <neighbor dest="127" relationship="location" weight="0"/>
        <neighbor dest="153" relationship="house" weight="0"/>
        <neighbor dest="155" relationship="house" weight="0"/>
      </neighbors>
      <speak>The  California State Legislature is the state legislature of the U.S. state of California.</speak>
      <zh-speak>加利福尼亚州议会（英语：California State Legislature），是美国加利福尼亚州的立法机构。加利福尼亚州议会为两院制，包含加利福尼亚州参议院（英语：California State Senate）与加利福尼亚州众议院（英语：California State Assembly）。加利福尼亚州参议院为上议院，共40个席位，每届任期4年；加利福尼亚州众议院为下议院，共80个席位，每届任期2年。兩院自1970年以來，一直由民主黨控制。</zh-speak>
    </Feature>
    <Feature data="California State Senate" zh-data="加利福尼亚州参议院" id="155" uri="http://dbpedia.org/resource/California_State_Senate">
      <neighbors>
        <neighbor dest="6" relationship="location" weight="0"/>
        <neighbor dest="127" relationship="location" weight="0"/>
        <neighbor dest="154" relationship="is part of" weight="0"/>
      </neighbors>
      <speak>The California State Senate is the upper house of the California State Legislature.</speak>
      <zh-speak>加利福尼亚州参议院（英语：California State Senate）是美国加利福尼亚州议会的上议院。加利福尼亚州参议院共有40名议员，每届任期4年。加利福尼亚州参议院领导人为参议院议长。现任参议院议长为民主党人加文·紐森，于2011年1月10日上任。</zh-speak>
    </Feature>
    <Feature data="Dianne Feinstein" zh-data="黛安·范士丹" id="156" uri="http://dbpedia.org/resource/Dianne_Feinstein">
      <neighbors>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="6" relationship="birth place" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="152" relationship="associate" weight="0"/>
        <neighbor dest="383" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Dianne Goldman Berman Feinstein, born Dianne Emiel Goldman  and has chaired the Select Committee on Intelligence since 2009. She is the only woman to have presided over a U.S. presidential inauguration.At the age of 81, Feinstein is the oldest currently serving United States Senator.</speak>
      <zh-speak>黛安·戈德曼·伯曼·范士丹（Dianne Goldman Berman Feinstein，1933年6月22日－），美國民主黨籍政治人物，代表最多人口的州、加州的「資深聯邦參議員」，她自1992年起一直擔任這個職位，蟬聯至今。此前她是舊金山首任（及至今唯一）女市長。</zh-speak>
    </Feature>
    <Feature data="West Coast Swing" zh-data="" id="157" uri="http://dbpedia.org/resource/West_Coast_Swing">
      <neighbors/>
      <speak>West Coast Swing  Whip.Alternatively the basic patterns in WCS are defined as: Sugar Push; Left Side Pass; Righ Side Pass; Touch Turn; and Whip.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="William T. Wiley" zh-data="" id="158" uri="http://dbpedia.org/resource/William_T._Wiley">
      <neighbors>
        <neighbor dest="6" relationship="award" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="383" relationship="award" weight="0"/>
      </neighbors>
      <speak>William T. Wiley  is a contemporary American artist.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Brandman University" zh-data="" id="159" uri="http://dbpedia.org/resource/Brandman_University">
      <neighbors>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>Brandman University is a private, non-profit regionally accredited institution that provides educational opportunities for working adults.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="KRLT" zh-data="" id="160" uri="http://dbpedia.org/resource/KRLT">
      <neighbors>
        <neighbor dest="6" relationship="broadcast area" weight="0"/>
      </neighbors>
      <speak>KRLT  is a radio station broadcasting an Adult Top 40 format featuring today's rock-based hits along with the best rock-based hits from the last 3 decades - KRLT 93-9 THE LAKE - HITS THAT ROCK! The Monday thru Friday On-Air line-up: 6-10am Howie Nave, 10am-2pm Steve Harness, 2-7pm Stacy Lynn, 7-10pm Dona Baxter.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="KVHS" zh-data="" id="161" uri="http://dbpedia.org/resource/KVHS">
      <neighbors>
        <neighbor dest="6" relationship="broadcast area" weight="0"/>
      </neighbors>
      <speak>KVHS  is a non-profit high school radio station playing mostly hard rock, heavy metal and some other varying music formats.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Shalimar Radio" zh-data="" id="162" uri="http://dbpedia.org/resource/Shalimar_Radio">
      <neighbors>
        <neighbor dest="6" relationship="broadcast area" weight="0"/>
        <neighbor dest="126" relationship="city" weight="0"/>
        <neighbor dest="79" relationship="broadcast area" weight="0"/>
      </neighbors>
      <speak>Shalimar Radio is a Pakistani Radio that operated through purchased Air Time from Channel 900 AM, from KALI  in West Covina, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Lamborghini Cheetah" zh-data="" id="163" uri="http://dbpedia.org/resource/Lamborghini_Cheetah">
      <neighbors>
        <neighbor dest="6" relationship="assembly" weight="0"/>
      </neighbors>
      <speak>The Lamborghini Cheetah was an off-road prototype built in 1977 by the Italian carmaker Lamborghini.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Galpin GTR1" zh-data="" id="164" uri="http://dbpedia.org/resource/Galpin_GTR1">
      <neighbors>
        <neighbor dest="6" relationship="assembly" weight="0"/>
      </neighbors>
      <speak>The Galpin GTR1  is an American limited production mid-engine sports car developed and built by Galpin Auto Sports.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="KSIZ" zh-data="" id="165" uri="http://dbpedia.org/resource/KSIZ">
      <neighbors>
        <neighbor dest="6" relationship="broadcast area" weight="0"/>
      </neighbors>
      <speak>KSIZ , owned by Mark &amp; Cynthia Kay Baird's Buffalo Broadcasting, LLC, which also owns KSYC-FM in Yreka.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Panther (car-boat)" zh-data="" id="166" uri="http://dbpedia.org/resource/Panther_(car-boat)">
      <neighbors>
        <neighbor dest="6" relationship="assembly" weight="0"/>
        <neighbor dest="79" relationship="assembly" weight="0"/>
      </neighbors>
      <speak>The Panther is a commercial amphibious car manufactured by California-based WaterCar.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="West Coast University" zh-data="" id="167" uri="http://dbpedia.org/resource/West_Coast_University">
      <neighbors>
        <neighbor dest="6" relationship="campus" weight="0"/>
        <neighbor dest="126" relationship="campus" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>West Coast University  is a private,  for-profit university focused on healthcare degrees, campus locations include Los Angeles, Anaheim and Ontario, California, Dallas, Texas, and Miami, Florida.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Marco Sassone" zh-data="" id="168" uri="http://dbpedia.org/resource/Marco_Sassone">
      <neighbors>
        <neighbor dest="6" relationship="award" weight="0"/>
        <neighbor dest="126" relationship="award" weight="0"/>
        <neighbor dest="383" relationship="award" weight="0"/>
      </neighbors>
      <speak>Marco Sassone, OMRI  is an Italian painter.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="KBLF" zh-data="" id="169" uri="http://dbpedia.org/resource/KBLF">
      <neighbors>
        <neighbor dest="6" relationship="broadcast area" weight="0"/>
      </neighbors>
      <speak>KBLF  and CBS News affiliate.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Albert Flynn DeSilver" zh-data="" id="170" uri="http://dbpedia.org/resource/Albert_Flynn_DeSilver">
      <neighbors>
        <neighbor dest="6" relationship="award" weight="0"/>
        <neighbor dest="85" relationship="occupation" weight="0"/>
      </neighbors>
      <speak>Albert Flynn DeSilver is an American author, poet, artist, teacher, speaker, and publisher—born 1968 in Norwalk, Connecticut.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="La Cadena Deportiva" zh-data="" id="171" uri="http://dbpedia.org/resource/La_Cadena_Deportiva">
      <neighbors>
        <neighbor dest="123" relationship="language" weight="0"/>
        <neighbor dest="6" relationship="broadcast area" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="374" relationship="broadcast area" weight="0"/>
      </neighbors>
      <speak>La Cadena Deportiva was a Spanish language regional sports network that served Arizona, California, Nevada, and Hawaii during the 1990s. Launched in November 1993, it was an affiliate of the Prime Network.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="EIKI" zh-data="" id="172" uri="http://dbpedia.org/resource/EIKI">
      <neighbors>
        <neighbor dest="6" relationship="division" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
        <neighbor dest="724" relationship="division" weight="0"/>
      </neighbors>
      <speak>EIKI International, Inc.  is a Japanese company that manufactures LCD and DLP projectors, related accessories and overhead projectors.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Cochise Airlines" zh-data="" id="173" uri="http://dbpedia.org/resource/Cochise_Airlines">
      <neighbors>
        <neighbor dest="6" relationship="destination" weight="0"/>
        <neighbor dest="79" relationship="headquarter" weight="0"/>
        <neighbor dest="372" relationship="headquarter" weight="0"/>
        <neighbor dest="374" relationship="destination" weight="0"/>
      </neighbors>
      <speak>Cochise Airlines was a commuter airline which was founded in 1971 in Tucson, Arizona.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Carol Buckley" zh-data="" id="174" uri="http://dbpedia.org/resource/Carol_Buckley">
      <neighbors>
        <neighbor dest="6" relationship="education" weight="0"/>
        <neighbor dest="79" relationship="state of origin" weight="0"/>
        <neighbor dest="424" relationship="PLACE OF BIRTH" weight="0"/>
      </neighbors>
      <speak>Carol Buckley is a specialist in the trauma recovery and on-going physical care of captive elephants.From 1974 to the present, Buckley has been responsible for and responsive to elephants: caring for them, living with them, transporting them, spending nights out in the habitat with them, advocating for them, playing with them, being responsible for them and their relative happiness in captivity.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="George Reeves" zh-data="" id="175" uri="http://dbpedia.org/resource/George_Reeves">
      <neighbors>
        <neighbor dest="6" relationship="education" weight="0"/>
        <neighbor dest="79" relationship="death place" weight="0"/>
      </neighbors>
      <speak>George Reeves  was an American actor best known for his role as Superman in the 1950s television program Adventures of Superman.His death at age 45 from a gunshot remains a polarizing issue; the official finding was suicide, but some believe he was murdered or the victim of an accidental shooting.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Applegate River" zh-data="" id="176" uri="http://dbpedia.org/resource/Applegate_River">
      <neighbors>
        <neighbor dest="6" relationship="district" weight="0"/>
      </neighbors>
      <speak>The Applegate River is a 51-mile  west of Grants Pass.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="David Klein (American artist)" zh-data="" id="177" uri="http://dbpedia.org/resource/David_Klein_(American_artist)">
      <neighbors>
        <neighbor dest="6" relationship="education" weight="0"/>
      </neighbors>
      <speak>David Klein  during the 1950s and 1960s.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Earl W. Bascom" zh-data="" id="178" uri="http://dbpedia.org/resource/Earl_W._Bascom">
      <neighbors>
        <neighbor dest="6" relationship="education" weight="0"/>
        <neighbor dest="298" relationship="award" weight="0"/>
        <neighbor dest="497" relationship="education" weight="0"/>
      </neighbors>
      <speak>Earl W. Bascom  was an American painter, printmaker, rodeo performer and sculptor, raised in Canada, who portrayed his own experiences cowboying and rodeoing across the American and Canadian West.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Doyald Young" zh-data="" id="179" uri="http://dbpedia.org/resource/Doyald_Young">
      <neighbors>
        <neighbor dest="6" relationship="education" weight="0"/>
      </neighbors>
      <speak>Doyald Young  was an American typeface designer and teacher who specialized in the design of logotypes, corporate alphabets, and typefaces.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Jake Paltrow" zh-data="" id="180" uri="http://dbpedia.org/resource/Jake_Paltrow">
      <neighbors>
        <neighbor dest="6" relationship="education" weight="0"/>
        <neighbor dest="126" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Jacob Danner "Jake" Paltrow  is an American film director and screenwriter.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Andrew Mwenda" zh-data="" id="181" uri="http://dbpedia.org/resource/Andrew_Mwenda">
      <neighbors>
        <neighbor dest="76" relationship="education" weight="0"/>
        <neighbor dest="77" relationship="education" weight="0"/>
        <neighbor dest="6" relationship="education" weight="0"/>
        <neighbor dest="79" relationship="education" weight="0"/>
        <neighbor dest="290" relationship="education" weight="0"/>
        <neighbor dest="298" relationship="education" weight="0"/>
      </neighbors>
      <speak>Andrew Mwenda is a Ugandan journalist, founder and  owner of The Independent, a current affairs newsmagazine.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Orange County Blues FC" zh-data="" id="182" uri="http://dbpedia.org/resource/Orange_County_Blues_FC">
      <neighbors>
        <neighbor dest="6" relationship="ground" weight="0"/>
      </neighbors>
      <speak>Orange County Blues is an American soccer team based in the Los Angeles suburb of Irvine, California, United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="FC Gold Pride" zh-data="" id="183" uri="http://dbpedia.org/resource/FC_Gold_Pride">
      <neighbors>
        <neighbor dest="6" relationship="ground" weight="0"/>
      </neighbors>
      <speak>FC Gold Pride was an American professional soccer club based in Santa Clara, California which participated in Women's Professional Soccer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Riverside County Elite" zh-data="" id="184" uri="http://dbpedia.org/resource/Riverside_County_Elite">
      <neighbors>
        <neighbor dest="6" relationship="ground" weight="0"/>
      </neighbors>
      <speak>Riverside County Elite were an American soccer team established in 1998 that spent the 2000 season in the USISL D-3 Pro League.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Tole Mour" zh-data="" id="185" uri="http://dbpedia.org/resource/Tole_Mour">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
      </neighbors>
      <speak>The SSV Tole Mour is a 156 ft  beam.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="USC&amp;GS Guide (1918)" zh-data="" id="186" uri="http://dbpedia.org/resource/USC&amp;GS_Guide_(1918)">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
      </neighbors>
      <speak>The first USC&amp;GS Guide was a survey ship that served in the United States Coast and Geodetic Survey from 1923 to 1941.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="USS Hanson (DD-832)" zh-data="" id="187" uri="http://dbpedia.org/resource/USS_Hanson_(DD-832)">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
      </neighbors>
      <speak>USS Hanson , United States Marine Corps of Marine Fighting Squadron Two Fifteen,  a quintuple ace who was awarded the Medal of Honor posthumously.Hanson was launched on 11 March 1945 by the Bath Iron Works Corp., Bath, Maine; sponsored by Mrs.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="NOAAS Reuben Lasker (R 228)" zh-data="" id="188" uri="http://dbpedia.org/resource/NOAAS_Reuben_Lasker_(R_228)">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
      </neighbors>
      <speak>NOAAS Reuben Lasker  is a National Oceanic and Atmospheric Administration  fishery research vessel.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="USS George Philip (FFG-12)" zh-data="" id="189" uri="http://dbpedia.org/resource/USS_George_Philip_(FFG-12)">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
      </neighbors>
      <speak>USS George Philip .  Ordered from Todd Shipyards, San Pedro, CA on 27 February 1976 as part of the FY76 program, George Philip was laid down on 14 December 1977, launched on 16 December 1978, and commissioned on 10 October 1980. Decommissioned on 15 March 2003, as of June 2003 George Philip was in reserve at Naval Inactive Ships Maintenance Facility Bremerton, WA.George Philip was expected to join the Portuguese Navy in 2006, together with her sister ship Sides, but the Portuguese Navy dropped the offer and chose two Dutch Karel Doorman-class frigates instead.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="USS Lewis B. Puller (FFG-23)" zh-data="" id="190" uri="http://dbpedia.org/resource/USS_Lewis_B._Puller_(FFG-23)">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
      </neighbors>
      <speak>USS Lewis B. Puller . As of 2013, she remained in active service with the Egyptian Navy.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="USS Copeland (FFG-25)" zh-data="" id="191" uri="http://dbpedia.org/resource/USS_Copeland_(FFG-25)">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
      </neighbors>
      <speak>USS Copeland  was the first ship of that name in the US Navy.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Irving Johnson (ship)" zh-data="" id="192" uri="http://dbpedia.org/resource/Irving_Johnson_(ship)">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
        <neighbor dest="192" relationship="owner" weight="0"/>
      </neighbors>
      <speak>The twin brigantines Irving Johnson and Exy Johnson are the flagships of the Los Angeles Maritime Institute's  TopSail Youth Program, a non-profit organization created as a character building organization to help at risk youth prepare for life through the discipline and teamwork required to safely handle a tall ship.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="USS Coronado (AGF-11)" zh-data="" id="193" uri="http://dbpedia.org/resource/USS_Coronado_(AGF-11)">
      <neighbors>
        <neighbor dest="6" relationship="homeport" weight="0"/>
      </neighbors>
      <speak>USS Coronado , one of seven fitted with an additional superstructure level for command ship duties.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Micron Technology" zh-data="美光科技" id="194" uri="http://dbpedia.org/resource/Micron_Technology">
      <neighbors>
        <neighbor dest="79" relationship="location country" weight="0"/>
        <neighbor dest="7" relationship="type" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="13" relationship="type" weight="0"/>
      </neighbors>
      <speak>Micron Technology, Inc. is an American multinational corporation based in Boise, Idaho, best known for producing many forms of semiconductor devices.</speak>
      <zh-speak>美光科技（Micron Technology，NYSE：MU）又名“镁光科技”，位於美國愛達荷州首府波夕市，於1978年由Ward Parkinson、Joe Parkinson、Dennis Wilson和Doug Pitman創立，1981年成立自有晶圓製造廠。目前是全球最大的記憶體存儲與影像感測器生產商之一。主要產品包括DRAM、NAND快閃記憶體和CMOS影像感測器，其它半導體元件和記憶體模組。</zh-speak>
    </Feature>
    <Feature data="Check Point" zh-data="" id="195" uri="http://dbpedia.org/resource/Check_Point">
      <neighbors>
        <neighbor dest="7" relationship="type" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="85" relationship="key person" weight="0"/>
        <neighbor dest="195" relationship="key person" weight="0"/>
      </neighbors>
      <speak>Check Point Software Technologies Ltd. is an international provider of software and combined hardware and software products for IT security, including network security, endpoint security, data security and security management.As of 2014 the company had approximately 2,900 employees worldwide.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ross Stores" zh-data="" id="196" uri="http://dbpedia.org/resource/Ross_Stores">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="7" relationship="type" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="13" relationship="type" weight="0"/>
      </neighbors>
      <speak>Ross Stores, Inc. is an American chain of off-price department stores headquartered in Dublin, California, operating under the name Ross Dress for Less.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="St.George Bank" zh-data="" id="197" uri="http://dbpedia.org/resource/St.George_Bank">
      <neighbors>
        <neighbor dest="8" relationship="foundation place" weight="0"/>
        <neighbor dest="85" relationship="key person" weight="0"/>
      </neighbors>
      <speak>St.George Bank is an Australian bank with its headquarters in Sydney, New South Wales.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Bain Capital" zh-data="贝恩资本" id="198" uri="http://dbpedia.org/resource/Bain_Capital">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="8" relationship="product" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
        <neighbor dest="532" relationship="location" weight="0"/>
      </neighbors>
      <speak>Bain Capital is a global alternative investment firm based in Boston, Massachusetts.</speak>
      <zh-speak>貝恩資本（英文：Bain Capital）是美國一家私人股權投資公司，於1984年由母公司貝恩策略顧問公司的合夥人米特·羅姆尼等三人成立，總部設於美国馬薩諸塞州波士頓。贝恩资本是国际性私人股权投资基金，管理资金約650亿美元，涉及私人股权、风险投资资金、上市股权对冲基金和杠杆债务资产管理。贝恩资本成立于1984年，为全球多个行业超过250家公司提供私人股权投资和附加收购。公司现有专业人士200名。该公司长期致力于科技业务投资，目前的投资项目包括SunGard Data Systems、NXP、Sensata Technologies、FCI、Sun Telephone、Applied Systems和MEI Conlux。公司总部在美国波士顿，在中国香港、上海，东京、纽约、伦敦和慕尼黑有分公司。</zh-speak>
    </Feature>
    <Feature data="Evergreen Investments" zh-data="" id="199" uri="http://dbpedia.org/resource/Evergreen_Investments">
      <neighbors>
        <neighbor dest="8" relationship="parent company" weight="0"/>
      </neighbors>
      <speak>Evergreen Investments was the investment management business of Wachovia.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Edgewood Management" zh-data="" id="200" uri="http://dbpedia.org/resource/Edgewood_Management">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="8" relationship="industry" weight="0"/>
        <neighbor dest="384" relationship="company type" weight="0"/>
      </neighbors>
      <speak>Edgewood Management LLC is an employee-owned registered investment advisor in the public equity markets of the United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Big Rock Brewery" zh-data="" id="201" uri="http://dbpedia.org/resource/Big_Rock_Brewery">
      <neighbors>
        <neighbor dest="8" relationship="owner" weight="0"/>
        <neighbor dest="85" relationship="key person" weight="0"/>
        <neighbor dest="334" relationship="państwo" weight="0"/>
        <neighbor dest="722" relationship="location city" weight="0"/>
      </neighbors>
      <speak>Big Rock Brewery is a brewery founded in 1985 in Calgary, Alberta, Canada.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ittefaq Group" zh-data="" id="202" uri="http://dbpedia.org/resource/Ittefaq_Group">
      <neighbors>
        <neighbor dest="8" relationship="genre" weight="0"/>
      </neighbors>
      <speak>The Ittefaq Group of Industries  is a Pakistani integrated steel producer with major operations in Punjab.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Samsung" zh-data="三星集团" id="203" uri="http://dbpedia.org/resource/Samsung">
      <neighbors>
        <neighbor dest="9" relationship="product" weight="0"/>
      </neighbors>
      <speak>Samsung .Samsung has a powerful influence on South Korea's economic development, politics, media and culture, and has been a major driving force behind the "Miracle on the Han River". Its affiliate companies produce around a fifth of South Korea's total exports.</speak>
      <zh-speak>三星集團（韓語：삼성그룹，英語：Samsung Group），南韓知名財團之一。旗下子公司包含：三星电子、三星顯示、三星SDI、三星SDS、三星电机、三星康宁、三星网络、三星火灾海上保险、三星证券、三星物产、三星重工和三星生命等，其中三家子公司为美国《财富》杂志评选为世界500强企业之列。</zh-speak>
    </Feature>
    <Feature data="NEC" zh-data="日本電氣" id="204" uri="http://dbpedia.org/resource/NEC">
      <neighbors>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="9" relationship="product" weight="0"/>
      </neighbors>
      <speak>NEC Corporation  and network solutions to business enterprises, communications services providers and to government agencies.</speak>
      <zh-speak>日本電氣（日语：日本電気／にっぽんでんき nippon denki；英文譯名：NEC Corporation，前稱Nippon Electric Company, Limited），简称日電、NEC，在台灣被稱為恩益禧，是日本一家跨国信息技术公司，总部位于东京港区。其英文全稱原為「Nippon Electric Company, Limited」，1983年改為現用的「NEC」名稱。NEC是住友集团的成员。NEC为商业企业、通信服务以及政府提供信息技术（IT）和网络产品。它的经营范围主要分成三个部分：IT解决方案、网络解决方案和电子设备。IT解决方案主要是向商业企业、政府和个人用户提供软件、硬件和相关服务。网络解决方案主要是设计和提供宽带系统、移动和无线通信网络系统、移动电话、广播和其他系统。NEC的电子设备包括半导体、显示器以及其他的电子器件。NEC还生产面向国际市场的Versa系列笔记本电脑和面向日本国内市场的Lavie系列笔记本电脑。NEC还是地球模拟器的发明者，它曾经是世界上最快的超级计算机。</zh-speak>
    </Feature>
    <Feature data="List of counties in California" zh-data="加利福尼亞州行政區劃" id="205" uri="http://dbpedia.org/resource/List_of_counties_in_California">
      <neighbors/>
      <speak>The state of California is divided into 58 counties.</speak>
      <zh-speak>美国加利福尼亞州有58個县，每个郡内通常有若干個城市，但有些郡下面因為地廣人稀只有設“類似市的地方”（unincorporated city-like areas），這種情況在美国西部比較常見。</zh-speak>
    </Feature>
    <Feature data="List of sovereign states" zh-data="世界政區索引" id="206" uri="http://dbpedia.org/resource/List_of_sovereign_states">
      <neighbors/>
      <speak>This list of sovereign states provides an overview of sovereign states around the world, with information on their status and recognition of their sovereignty.The 206 states listed are divided into: The membership within the United Nations system column divides the states into three categories: 193 member states, two observer states, and 11 other states.</speak>
      <zh-speak>世界政區索引列出世界各个国家（或地区），不仅包括被国际普遍承认的国家，也包括未被国际普遍承认的国家和海外属地与其他特殊政区。本索引包含两个部分：第一个部分中所有国家（或地区）将按照英文字母排序，并将提供中文简称、全称以及英文简称，其中未被国际普遍承认的国家用绿色标记，海外属地与其他特殊政区单列并用浅蓝色标记。第二个部分中所有国家（或地区）将按照大洲排序，仅提供中文简称的信息。其他參照索引：人口排列、面积排列、人口密度排列、国内生产总值或参考目录。</zh-speak>
    </Feature>
    <Feature data="Federal Information Processing Standards" zh-data="聯邦資料處理標準" id="207" uri="http://dbpedia.org/resource/Federal_Information_Processing_Standards">
      <neighbors/>
      <speak>Federal Information Processing Standards .</speak>
      <zh-speak>聯邦資訊處理標準（英语：Federal Information Processing Standards，缩写FIPS）是美國聯邦政府制定給所有軍事機構除外的政府機構及政府的承包商所使用的公開標準。許多FIPS標準都是從廣泛的社會標準修改而來的（像ANSI，IEEE，ISO等等）。有些FIPS標準是美國政府自行制定的，例如編碼資料的標準（像國家代碼），但是更多的標準其實是用來做為加密使用，例如資料加密標準（FIPS 46）和先進加密標準。FIPS標準的一些例子： FIPS國家代碼（10-4） FIPS地區代碼（55-3） FIPS郡代碼（6-4） FIPS州代碼（5-2）</zh-speak>
    </Feature>
    <Feature data="San Mateo County, California" zh-data="聖馬刁郡 (加利福尼亞州)" id="208" uri="http://dbpedia.org/resource/San_Mateo_County,_California">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="247" relationship="Southeast" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
        <neighbor dest="383" relationship="North" weight="0"/>
      </neighbors>
      <speak>San Mateo County  is a county located in  the U.S. state of California.</speak>
      <zh-speak>聖馬刁郡（英語：San Mateo County；当地多译为圣马刁郡）是美國加利福尼亚州的一縣，位於舊金山灣區的西部，包含大部份的舊金山半島。緊鄰著聖馬刁縣北邊的是舊金山市與縣，南邊則是圣克拉拉縣。舊金山國際機場位於北聖馬刁縣，但是仍由舊金山市管理。南聖馬刁縣一般認為也包含在俗稱矽谷的高科技產業集中地點裡。根據2000年的人口普查，聖馬刁縣共有70萬7161人居住在此。縣府所在地為雷德伍德(Redwood City)。</zh-speak>
    </Feature>
    <Feature data="Local government in California" zh-data="" id="209" uri="http://dbpedia.org/resource/Local_government_in_California">
      <neighbors/>
      <speak>California has an extensive and complicated system of local government that manages public functions throughout the state.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mayor" zh-data="市长" id="210" uri="http://dbpedia.org/resource/Mayor">
      <neighbors/>
      <speak>In many countries, a mayor  is the highest-ranking officer in a municipal government, such as that of a city or town.Worldwide, there is a wide variance in local laws and customs regarding the powers and responsibilities of a mayor, as well as the means by which a mayor is elected or otherwise mandated.</speak>
      <zh-speak>市長（Mayor，出自拉丁文 māior，「較大的」的意思），是近代一個城市最高職位官員的職稱。在許多政府系統裡，市長是由市民選出為一個城市最高行政長官、或為一個儀式的的職務。市長這個名稱在全世界各個地方依據當地的法律有不同職責和權力，也因各個地方而有不同意義。</zh-speak>
    </Feature>
    <Feature data="Municipal corporation" zh-data="市法團" id="211" uri="http://dbpedia.org/resource/Municipal_corporation">
      <neighbors/>
      <speak>A municipal corporation is the legal term for a local governing body, including  cities, counties, towns, townships, charter townships, villages, and boroughs.Municipal incorporation occurs when such municipalities become self-governing entities under the laws of the state or province in which they are located.</speak>
      <zh-speak>市法團（英语：Municipal corporation，或者團市委）是一個地方政府體制的法律術語。可以指（但不一定限於）城市，縣，鎮，鄉，憲章鄉，村莊和市鎮。</zh-speak>
    </Feature>
    <Feature data="Secondhand Serenade" zh-data="" id="212" uri="http://dbpedia.org/resource/Secondhand_Serenade">
      <neighbors>
        <neighbor dest="10" relationship="home town" weight="0"/>
        <neighbor dest="488" relationship="instrument" weight="0"/>
      </neighbors>
      <speak>Secondhand Serenade is rock band, led by vocalist, pianist and guitarist John Vesely.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Taylor Eigsti" zh-data="" id="213" uri="http://dbpedia.org/resource/Taylor_Eigsti">
      <neighbors>
        <neighbor dest="10" relationship="home town" weight="0"/>
      </neighbors>
      <speak>Taylor Eigsti  is an American jazz pianist and composer.Eigsti's current trio features bassist Harish Raghavan and drummer Eric Harland.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Dumbarton Bridge (California)" zh-data="" id="214" uri="http://dbpedia.org/resource/Dumbarton_Bridge_(California)">
      <neighbors>
        <neighbor dest="10" relationship="located in area" weight="0"/>
      </neighbors>
      <speak>The Dumbarton Bridge is the southernmost of the highway bridges across San Francisco Bay in California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="California State Route 114" zh-data="" id="215" uri="http://dbpedia.org/resource/California_State_Route_114">
      <neighbors>
        <neighbor dest="10" relationship="route end" weight="0"/>
      </neighbors>
      <speak>State Route 114  is a short state highway in the U.S. state of California that runs between U.S. Route 101 and State Route 84 in East Palo Alto and Menlo Park.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Nebula (company)" zh-data="" id="216" uri="http://dbpedia.org/resource/Nebula_(company)">
      <neighbors>
        <neighbor dest="6" relationship="location city" weight="0"/>
        <neighbor dest="10" relationship="foundation place" weight="0"/>
        <neighbor dest="12" relationship="location city" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>Nebula, Inc. is a hardware and software company with offices in Mountain View, California, USA and Seattle, Washington, USA. Nebula is the developer of Nebula One, a cloud computing hardware appliance that turns the customer's racks of standard servers into a private cloud.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Distortion (Forbidden album)" zh-data="" id="217" uri="http://dbpedia.org/resource/Distortion_(Forbidden_album)">
      <neighbors>
        <neighbor dest="10" relationship="recorded in" weight="0"/>
      </neighbors>
      <speak>Distortion is the third album from San Francisco, California thrash metal band, Forbidden.It comes five years after their second, Twisted into Form, was released.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Numena + Geometry" zh-data="" id="218" uri="http://dbpedia.org/resource/Numena_+_Geometry">
      <neighbors>
        <neighbor dest="76" relationship="recorded in" weight="0"/>
        <neighbor dest="10" relationship="recorded in" weight="0"/>
        <neighbor dest="249" relationship="producer" weight="0"/>
      </neighbors>
      <speak>Numena + Geometry .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Sunset (magazine)" zh-data="" id="219" uri="http://dbpedia.org/resource/Sunset_(magazine)">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="10" relationship="city" weight="0"/>
      </neighbors>
      <speak>Sunset is a lifestyle magazine in the United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Round Table Pizza" zh-data="" id="220" uri="http://dbpedia.org/resource/Round_Table_Pizza">
      <neighbors>
        <neighbor dest="6" relationship="location city" weight="0"/>
        <neighbor dest="79" relationship="państwo" weight="0"/>
        <neighbor dest="10" relationship="foundation place" weight="0"/>
      </neighbors>
      <speak>Round Table Pizza is a large chain of pizza parlors in the western United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Isaac Baron" zh-data="" id="221" uri="http://dbpedia.org/resource/Isaac_Baron">
      <neighbors>
        <neighbor dest="10" relationship="home town" weight="0"/>
      </neighbors>
      <speak>Isaac Baron  an American professional poker player from Menlo Park, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Remote Control (The Tubes album)" zh-data="" id="222" uri="http://dbpedia.org/resource/Remote_Control_(The_Tubes_album)">
      <neighbors>
        <neighbor dest="10" relationship="recorded in" weight="0"/>
      </neighbors>
      <speak>Remote Control is the fifth album released by The Tubes.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Trances/Drones" zh-data="" id="223" uri="http://dbpedia.org/resource/Trances/Drones">
      <neighbors>
        <neighbor dest="76" relationship="recorded in" weight="0"/>
        <neighbor dest="77" relationship="recorded in" weight="0"/>
        <neighbor dest="10" relationship="recorded in" weight="0"/>
        <neighbor dest="249" relationship="producer" weight="0"/>
      </neighbors>
      <speak>Trances/Drones  plus other material that was recorded during that time.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="MontaVista" zh-data="MontaVista" id="224" uri="http://dbpedia.org/resource/MontaVista">
      <neighbors>
        <neighbor dest="4" relationship="industry" weight="0"/>
        <neighbor dest="79" relationship="państwo" weight="0"/>
        <neighbor dest="10" relationship="foundation place" weight="0"/>
      </neighbors>
      <speak>MontaVista Software is a company that develops embedded Linux system software, development tools, and related software.</speak>
      <zh-speak>MontaVista（英语：MontaVista Software）是一間美國軟體公司，總部位於加州聖塔克拉拉，專長在於嵌入式Linux裝置的開發。它在1999年由詹姆士·雷迪成立。2009年11月10日，Cavium Networks公司以五千萬美金的價格將它收購。</zh-speak>
    </Feature>
    <Feature data="California State Route 109" zh-data="" id="225" uri="http://dbpedia.org/resource/California_State_Route_109">
      <neighbors>
        <neighbor dest="10" relationship="route end" weight="0"/>
      </neighbors>
      <speak>State Route 109  is a short, unsigned state highway in the U.S. state of California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Saint Patrick's Seminary and University" zh-data="" id="226" uri="http://dbpedia.org/resource/Saint_Patrick's_Seminary_and_University">
      <neighbors>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="10" relationship="city" weight="0"/>
      </neighbors>
      <speak>Saint Patrick's Seminary and University in Menlo Park, California is a Roman Catholic post-graduate seminary whose primary mission is the formation of clergy for Western and Pacific Rim dioceses.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Los Trancos Creek" zh-data="" id="227" uri="http://dbpedia.org/resource/Los_Trancos_Creek">
      <neighbors>
        <neighbor dest="123" relationship="etymology" weight="0"/>
        <neighbor dest="77" relationship="city" weight="0"/>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="208" relationship="region" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="10" relationship="city" weight="0"/>
        <neighbor dest="247" relationship="region" weight="0"/>
      </neighbors>
      <speak>Los Trancos Creek  is a creek that flows northerly from Monte Bello Ridge on the northeast slope of the Santa Cruz Mountains to its confluence with San Francisquito Creek at Stanford University in California, United States of America.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="SLAC National Accelerator Laboratory" zh-data="SLAC國家加速器實驗室" id="228" uri="http://dbpedia.org/resource/SLAC_National_Accelerator_Laboratory">
      <neighbors>
        <neighbor dest="77" relationship="affiliations" weight="0"/>
        <neighbor dest="6" relationship="city" weight="0"/>
        <neighbor dest="79" relationship="city" weight="0"/>
        <neighbor dest="10" relationship="city" weight="0"/>
      </neighbors>
      <speak>SLAC National Accelerator Laboratory, originally named Stanford Linear Accelerator Center, is a United States Department of Energy National Laboratory operated by Stanford University under the programmatic direction of the U.S. Department of Energy Office of Science and located in Menlo Park, California.The SLAC research program centers on experimental and theoretical research in elementary particle physics using electron beams and a broad program of research in atomic and solid-state physics, chemistry, biology, and medicine using synchrotron radiation.</speak>
      <zh-speak>SLAC國家加速器實驗室，原名斯坦福直線加速器中心。為美國能源部所屬的國家實驗室，在能源部的方案下由斯坦福大學指揮運作。主要的研究方向有運用電子束進行基本粒子物理的實驗及理論研究、原子物理、固態物理、使用同步輻射光源的化學、生物以及醫學研究。</zh-speak>
    </Feature>
    <Feature data="2011 UCLA Bruins baseball team" zh-data="" id="229" uri="http://dbpedia.org/resource/2011_UCLA_Bruins_baseball_team">
      <neighbors>
        <neighbor dest="10" relationship="Home" weight="0"/>
      </neighbors>
      <speak>The 2011 UCLA Bruins baseball team represented the University of California, Los Angeles in the 2011 NCAA Division I baseball season.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="2010–11 Laredo Bucks season" zh-data="" id="230" uri="http://dbpedia.org/resource/2010%E2%80%9311_Laredo_Bucks_season">
      <neighbors>
        <neighbor dest="10" relationship="birthplace" weight="0"/>
      </neighbors>
      <speak>The 2010–11 Laredo Bucks season was the ninth season of the CHL franchise in Laredo, Texas.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="2009 UCLA Bruins baseball team" zh-data="" id="231" uri="http://dbpedia.org/resource/2009_UCLA_Bruins_baseball_team">
      <neighbors>
        <neighbor dest="10" relationship="Home" weight="0"/>
        <neighbor dest="602" relationship="Home" weight="0"/>
      </neighbors>
      <speak>The 2009 UCLA Bruins baseball team represented the University of California, Los Angeles in the 2009 NCAA Division I baseball season.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Communication Arts (magazine)" zh-data="" id="232" uri="http://dbpedia.org/resource/Communication_Arts_(magazine)">
      <neighbors>
        <neighbor dest="10" relationship="based" weight="0"/>
      </neighbors>
      <speak>Communication Arts is the largest international trade journal of visual communications.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Alan Cooper" zh-data="阿兰·库珀" id="233" uri="http://dbpedia.org/resource/Alan_Cooper">
      <neighbors>
        <neighbor dest="10" relationship="origin" weight="0"/>
        <neighbor dest="383" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Alan Cooper  is an American software designer and programmer.</speak>
      <zh-speak>阿兰·库珀（Alan Cooper），交互设计的提倡者。现在经营一家设计公司，并且著书讲述如何让软件的用户界面更加人性化。库珀有些时候被叫做 Visual Basic 之父，虽然大多數的工作是由微软的內部開發團隊完成的，但是对于Windows可视化设计工具的创意是来源于库珀的。</zh-speak>
    </Feature>
    <Feature data="National Register of Historic Places listings in San Mateo County, California" zh-data="" id="234" uri="http://dbpedia.org/resource/National_Register_of_Historic_Places_listings_in_San_Mateo_County,_California">
      <neighbors>
        <neighbor dest="208" relationship="county" weight="0"/>
        <neighbor dest="10" relationship="city" weight="0"/>
        <neighbor dest="754" relationship="city" weight="0"/>
      </neighbors>
      <speak>This list includes properties and districts listed on the National Register of Historic Places in San Mateo County, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Josie Maran" zh-data="" id="235" uri="http://dbpedia.org/resource/Josie_Maran">
      <neighbors>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="10" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Johanna Selhorst "Josie" Maran  is an American model, actress, and entrepreneur.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Alex Weed" zh-data="" id="236" uri="http://dbpedia.org/resource/Alex_Weed">
      <neighbors>
        <neighbor dest="10" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Alex Weed  is an American actor.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="DJay Brawner" zh-data="" id="237" uri="http://dbpedia.org/resource/DJay_Brawner">
      <neighbors>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="10" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Djay Brawner  is an American director of music videos, film, and television.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="IPtronics" zh-data="" id="238" uri="http://dbpedia.org/resource/IPtronics">
      <neighbors>
        <neighbor dest="10" relationship="subsid" weight="0"/>
      </neighbors>
      <speak>IPtronics is a fabless semiconductor company headquartered in Copenhagen, Denmark.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="IntelliCorp (software)" zh-data="" id="239" uri="http://dbpedia.org/resource/IntelliCorp_(software)">
      <neighbors>
        <neighbor dest="4" relationship="industry" weight="0"/>
        <neighbor dest="6" relationship="foundation" weight="0"/>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="10" relationship="foundation" weight="0"/>
      </neighbors>
      <speak>IntelliCorp  is a software company that provides, develops, and markets SAP application lifecycle management, business process management and data management software for SAP customers and partners.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="2011–12 Pepperdine Waves men's basketball team" zh-data="" id="240" uri="http://dbpedia.org/resource/2011%E2%80%9312_Pepperdine_Waves_men's_basketball_team">
      <neighbors>
        <neighbor dest="126" relationship="Home" weight="0"/>
        <neighbor dest="127" relationship="Home" weight="0"/>
        <neighbor dest="143" relationship="time" weight="0"/>
        <neighbor dest="10" relationship="Home" weight="0"/>
        <neighbor dest="372" relationship="Home" weight="0"/>
        <neighbor dest="383" relationship="site cityst" weight="0"/>
      </neighbors>
      <speak>The 2011–12 Pepperdine Waves men's basketball team represented Pepperdine University in the 2011–12 college basketball season.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="The Daily News (Palo Alto)" zh-data="" id="241" uri="http://dbpedia.org/resource/The_Daily_News_(Palo_Alto)">
      <neighbors>
        <neighbor dest="6" relationship="headquarters" weight="0"/>
        <neighbor dest="79" relationship="headquarters" weight="0"/>
        <neighbor dest="10" relationship="headquarters" weight="0"/>
      </neighbors>
      <speak>The Daily News, originally the Palo Alto Daily News, is a free daily newspaper owned by MediaNews Group and located in Menlo Park.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Moira Gunn" zh-data="" id="242" uri="http://dbpedia.org/resource/Moira_Gunn">
      <neighbors>
        <neighbor dest="10" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Moira Gunn is host of the public radio program Tech Nation and its regular segment BioTech Nation.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Tanya Seaman" zh-data="" id="243" uri="http://dbpedia.org/resource/Tanya_Seaman">
      <neighbors>
        <neighbor dest="6" relationship="PLACE OF BIRTH" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="10" relationship="birth place" weight="0"/>
        <neighbor dest="742" relationship="education" weight="0"/>
      </neighbors>
      <speak>Tanya Seaman is an American environmentalist and the co-founder and past executive director of PhillyCarShare.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="California Historical Landmarks in San Mateo County, California" zh-data="" id="244" uri="http://dbpedia.org/resource/California_Historical_Landmarks_in_San_Mateo_County,_California">
      <neighbors>
        <neighbor dest="208" relationship="county" weight="0"/>
        <neighbor dest="10" relationship="city" weight="0"/>
        <neighbor dest="754" relationship="city" weight="0"/>
      </neighbors>
      <speak>List table of the properties and districts — listed on the California Historical Landmarks — within San Mateo County, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="2010 UCLA Bruins baseball team" zh-data="" id="245" uri="http://dbpedia.org/resource/2010_UCLA_Bruins_baseball_team">
      <neighbors>
        <neighbor dest="10" relationship="Home" weight="0"/>
      </neighbors>
      <speak>The 2010 UCLA Bruins baseball team represented the University of California, Los Angeles in the 2010 NCAA Division I baseball season.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Marion Dorn" zh-data="" id="246" uri="http://dbpedia.org/resource/Marion_Dorn">
      <neighbors>
        <neighbor dest="10" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Marion Victoria Dorn also known as Marion Dorn Kauffer  was a textile designer primarily in the form of wall hangings, carpeting and rugs, however she is also known to have produced wallpaper, graphics, and illustrations.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Santa Clara County, California" zh-data="聖塔克拉拉縣 (加利福尼亞州)" id="247" uri="http://dbpedia.org/resource/Santa_Clara_County,_California">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="208" relationship="Northwest" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
      </neighbors>
      <speak>Santa Clara County, officially the County of Santa Clara, is a county located in the U.S. state of California.</speak>
      <zh-speak>聖塔克拉拉縣（英语：County of Santa Clara）是美國加利福尼亚州的一个縣，位於舊金山灣區的南部，也是俗稱矽谷的高科技產業集中地點的所在地。根據2010年美国人口普查，聖塔克拉拉縣共有178萬1642人居住在此。聖荷西市為縣政府所在地，也是縣裡人口和面積最大的城市。</zh-speak>
    </Feature>
    <Feature data="North American Numbering Plan" zh-data="" id="248" uri="http://dbpedia.org/resource/North_American_Numbering_Plan">
      <neighbors/>
      <speak>The North American Numbering Plan , a service operated by Neustar Inc.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Robert Rich (musician)" zh-data="" id="249" uri="http://dbpedia.org/resource/Robert_Rich_(musician)">
      <neighbors>
        <neighbor dest="6" relationship="home town" weight="0"/>
        <neighbor dest="12" relationship="home town" weight="0"/>
        <neighbor dest="427" relationship="instrument" weight="0"/>
      </neighbors>
      <speak>Robert Rich  is an ambient musician and composer based in California, United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Fenwick &amp; West" zh-data="" id="250" uri="http://dbpedia.org/resource/Fenwick_&amp;_West">
      <neighbors>
        <neighbor dest="12" relationship="headquarter" weight="0"/>
      </neighbors>
      <speak>Fenwick &amp; West LLP is a law firm of more than 300 attorneys with offices in Silicon Valley, San Francisco, Seattle, and Shanghai.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Stevens Creek (California)" zh-data="" id="251" uri="http://dbpedia.org/resource/Stevens_Creek_(California)">
      <neighbors>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="247" relationship="region" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="12" relationship="city" weight="0"/>
      </neighbors>
      <speak>Stevens Creek is a creek in Santa Clara County, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Airship Ventures" zh-data="" id="252" uri="http://dbpedia.org/resource/Airship_Ventures">
      <neighbors>
        <neighbor dest="18" relationship="target airport" weight="0"/>
        <neighbor dest="79" relationship="headquarter" weight="0"/>
        <neighbor dest="12" relationship="headquarter" weight="0"/>
      </neighbors>
      <speak>Airship Ventures Inc. was a private company that offered sight-seeing rides  and Andrea Deyling, are the only female zeppelin pilots in the world.Airship Ventures was based out of the Bachelor Officer Quarters in Building 20 in the NASA Research Park.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Carnegie Mellon Silicon Valley" zh-data="" id="253" uri="http://dbpedia.org/resource/Carnegie_Mellon_Silicon_Valley">
      <neighbors>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="12" relationship="city" weight="0"/>
      </neighbors>
      <speak>Carnegie Mellon Silicon Valley is a branch campus of Carnegie Mellon University located in the heart of Silicon Valley in Mountain View, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mountain View High School (Mountain View, California)" zh-data="" id="254" uri="http://dbpedia.org/resource/Mountain_View_High_School_(Mountain_View,_California)">
      <neighbors>
        <neighbor dest="12" relationship="city" weight="0"/>
      </neighbors>
      <speak>Mountain View High School . The school sent 97% of its graduating class of 2013 to post-secondary schools.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Saint Francis High School (Mountain View)" zh-data="" id="255" uri="http://dbpedia.org/resource/Saint_Francis_High_School_(Mountain_View)">
      <neighbors>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="247" relationship="county" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="12" relationship="city" weight="0"/>
      </neighbors>
      <speak>Saint Francis High School, founded in 1954 by the Brothers of Holy Cross, is a Roman Catholic, co-educational, college preparatory secondary school located in Mountain View, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Track &amp; Field News" zh-data="" id="256" uri="http://dbpedia.org/resource/Track_&amp;_Field_News">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="12" relationship="city" weight="0"/>
      </neighbors>
      <speak>Track &amp; Field News is an American monthly sports magazine founded in 1948 by brothers Bert Nelson and Cordner Nelson, focused on the world of track and field.The magazine provides coverage of athletics in the U.S.A. from the high school to national level as well as covering the sport on an international bases.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Permanente Creek" zh-data="" id="257" uri="http://dbpedia.org/resource/Permanente_Creek">
      <neighbors>
        <neighbor dest="91" relationship="city" weight="0"/>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="247" relationship="region" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="12" relationship="city" weight="0"/>
        <neighbor dest="266" relationship="left tributary" weight="0"/>
      </neighbors>
      <speak>Permanente Creek is a 13.3-mile-long  stream originating on Black Mountain in Santa Clara County, California, United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="California State Route 237" zh-data="" id="258" uri="http://dbpedia.org/resource/California_State_Route_237">
      <neighbors>
        <neighbor dest="12" relationship="route junction" weight="0"/>
      </neighbors>
      <speak>State Route 237 runs from El Camino Real  in Mountain View to Interstate 680 in Milpitas.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Soma (Steve Roach &amp; Robert Rich album)" zh-data="" id="259" uri="http://dbpedia.org/resource/Soma_(Steve_Roach_&amp;_Robert_Rich_album)">
      <neighbors>
        <neighbor dest="249" relationship="performer" weight="0"/>
        <neighbor dest="12" relationship="recorded in" weight="0"/>
        <neighbor dest="372" relationship="recorded in" weight="0"/>
      </neighbors>
      <speak>Soma  was the second collaborative album by the U.S. ambient musicians Steve Roach and Robert Rich, following their 1990 album Strata.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="California State Route 85" zh-data="85号加利福尼亚州州道" id="260" uri="http://dbpedia.org/resource/California_State_Route_85">
      <neighbors>
        <neighbor dest="12" relationship="route end" weight="0"/>
      </neighbors>
      <speak>State Route 85 . The freeway was built in two phases: the first, comprising the northern half, runs 5.7 miles from Stevens Creek Boulevard near Interstate 280 to its northern terminus at U.S. 101 in Mountain View, was built in the 1960s.  The second half, running 18.5 miles from U.S. 101 in southern San Jose to Stevens Creek Boulevard in Cupertino, remained unbuilt until the 1980s and was opened in 1994.  Prior to the construction of the southern half, the route was signed along surface streets from the end of the freeway portion southwards until its junction with Route 9 in Saratoga, which served as its southern terminus.</speak>
      <zh-speak>85号加利福尼亚州州道（California State Route 85）是加利福尼亚州的一条高速公路，长48.1千米，穿越旧金山湾区南湾，搭载有大量往返硅谷的通勤者。</zh-speak>
    </Feature>
    <Feature data="California State Route 82" zh-data="" id="261" uri="http://dbpedia.org/resource/California_State_Route_82">
      <neighbors>
        <neighbor dest="12" relationship="route junction" weight="0"/>
        <neighbor dest="383" relationship="route end" weight="0"/>
        <neighbor dest="754" relationship="route junction" weight="0"/>
      </neighbors>
      <speak>State Route 82  is a state highway in the U.S. state of California that runs from Interstate 880 in San Jose to Interstate 280 in San Francisco following the San Francisco Peninsula.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Bayshore Freeway" zh-data="" id="262" uri="http://dbpedia.org/resource/Bayshore_Freeway">
      <neighbors>
        <neighbor dest="12" relationship="route junction" weight="0"/>
        <neighbor dest="754" relationship="route junction" weight="0"/>
      </neighbors>
      <speak>The Bayshore Freeway is a part of U.S. Route 101 in the San Francisco Bay Area of the U.S. state of California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="An Evening of Yes Music Plus" zh-data="" id="263" uri="http://dbpedia.org/resource/An_Evening_of_Yes_Music_Plus">
      <neighbors>
        <neighbor dest="12" relationship="recorded in" weight="0"/>
      </neighbors>
      <speak>An Evening of Yes Music Plus is a live album by the English progressive rock side project Anderson Bruford Wakeman Howe . Released on 12 October 1993, it was recorded at the Shoreline Amphitheatre in Mountain View, California on 9 September 1989 in a concert that was shown live on pay-per-view in the United States.The album contains material from ABWH's self-titled album, songs from past Yes records and excerpts from keyboardist Rick Wakeman's solo work.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Strata (Robert Rich and Steve Roach album)" zh-data="" id="264" uri="http://dbpedia.org/resource/Strata_(Robert_Rich_and_Steve_Roach_album)">
      <neighbors>
        <neighbor dest="249" relationship="producer" weight="0"/>
        <neighbor dest="12" relationship="recorded in" weight="0"/>
        <neighbor dest="372" relationship="recorded in" weight="0"/>
      </neighbors>
      <speak>Strata  on their 1992 album Soma.There is a strong sense of surrealism throughout the album.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Yearning (album)" zh-data="" id="265" uri="http://dbpedia.org/resource/Yearning_(album)">
      <neighbors>
        <neighbor dest="249" relationship="producer" weight="0"/>
        <neighbor dest="12" relationship="recorded in" weight="0"/>
      </neighbors>
      <speak>Yearning  is a collaborative album by ambient musician Robert Rich and sarod player Lisa Moskow.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Hale Creek" zh-data="" id="266" uri="http://dbpedia.org/resource/Hale_Creek">
      <neighbors>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="247" relationship="region" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="12" relationship="mouth place" weight="0"/>
        <neighbor dest="257" relationship="river mouth" weight="0"/>
        <neighbor dest="267" relationship="source" weight="0"/>
      </neighbors>
      <speak>Hale Creek is a short stream originating in the foothills of Los Altos Hills, California in Santa Clara County, California, United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Rancho San Antonio County Park" zh-data="" id="267" uri="http://dbpedia.org/resource/Rancho_San_Antonio_County_Park">
      <neighbors>
        <neighbor dest="12" relationship="nearest city" weight="0"/>
      </neighbors>
      <speak>Rancho San Antonio County Park is a public recreational area in the Santa Cruz Mountains, Santa Clara County, in northern California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ames Research Center" zh-data="" id="268" uri="http://dbpedia.org/resource/Ames_Research_Center">
      <neighbors>
        <neighbor dest="79" relationship="headquarters" weight="0"/>
        <neighbor dest="12" relationship="headquarters" weight="0"/>
      </neighbors>
      <speak>Ames Research Center  and a major contributor to the "new exploration focus" as a participant in the Orion crew exploration vehicle.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Downtown Mountain View Station" zh-data="山景城站" id="269" uri="http://dbpedia.org/resource/Downtown_Mountain_View_Station">
      <neighbors>
        <neighbor dest="12" relationship="address" weight="0"/>
      </neighbors>
      <speak>Downtown Mountain View Station is an intermodal passenger transportation station that serves the Santa Clara Valley Transportation Authority light rail system, Caltrain commuter rail line, and numerous bus and shuttle routes.</speak>
      <zh-speak>山景城站（Mountain View Station）位于美国加利福尼亚州山景城，是加州火车（Caltrain）的车站之一。该站为旧金山、圣马刁县和圣克拉拉县的通勤者提供服务。</zh-speak>
    </Feature>
    <Feature data="2013–14 Fresno State Bulldogs men's basketball team" zh-data="" id="270" uri="http://dbpedia.org/resource/2013%E2%80%9314_Fresno_State_Bulldogs_men's_basketball_team">
      <neighbors>
        <neighbor dest="127" relationship="Home" weight="0"/>
        <neighbor dest="143" relationship="TimeZone" weight="0"/>
        <neighbor dest="12" relationship="Home" weight="0"/>
        <neighbor dest="255" relationship="high school" weight="0"/>
        <neighbor dest="577" relationship="Home" weight="0"/>
        <neighbor dest="602" relationship="site cityst" weight="0"/>
        <neighbor dest="722" relationship="Home" weight="0"/>
        <neighbor dest="725" relationship="Home" weight="0"/>
      </neighbors>
      <speak>The 2013–14 Fresno State Bulldogs men's basketball team represented California State University, Fresno during the 2013–14 NCAA Division I men's basketball season.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Hacker Dojo" zh-data="" id="271" uri="http://dbpedia.org/resource/Hacker_Dojo">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="12" relationship="leader name" weight="0"/>
      </neighbors>
      <speak>Hacker Dojo is a 16,600-square-foot  community center and hackerspace in Mountain View, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="First Tech Credit Union" zh-data="" id="272" uri="http://dbpedia.org/resource/First_Tech_Credit_Union">
      <neighbors>
        <neighbor dest="12" relationship="data" weight="0"/>
      </neighbors>
      <speak>First Tech Federal Credit Union . First Tech has over 370,000 members, and over 6.5 billion dollars in assets with 42 branches located mostly in high technology business centers of California, Colorado, Oregon, Washington and five other states and Puerto Rico.It was the first financial institution to offer telephone interactive voice response access and online banking.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="National Register of Historic Places listings in Santa Clara County, California" zh-data="" id="273" uri="http://dbpedia.org/resource/National_Register_of_Historic_Places_listings_in_Santa_Clara_County,_California">
      <neighbors>
        <neighbor dest="76" relationship="city" weight="0"/>
        <neighbor dest="18" relationship="address" weight="0"/>
        <neighbor dest="91" relationship="city" weight="0"/>
        <neighbor dest="247" relationship="county" weight="0"/>
        <neighbor dest="12" relationship="city" weight="0"/>
      </neighbors>
      <speak>This list includes properties and districts listed on the National Register of Historic Places in Santa Clara County, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Moxie Software" zh-data="" id="274" uri="http://dbpedia.org/resource/Moxie_Software">
      <neighbors>
        <neighbor dest="79" relationship="foundation place" weight="0"/>
        <neighbor dest="12" relationship="headquarters" weight="0"/>
        <neighbor dest="85" relationship="key person" weight="0"/>
        <neighbor dest="752" relationship="industry" weight="0"/>
      </neighbors>
      <speak>Moxie Software is a software platform company, originally under the name nGenera Corporation.  was named one of the Top 10 Venture Funded Companies by the Wall Street Journal.In September 2010, nGenera changed its name to "Moxie Software".In September 2010, Moxie Software's Employee Engagement Spaces was named a "Trend-Setting Product of 2010" by KMWorld.In January 2014, Moxie Software named Rebecca Ward its new president and CEO: http://venturebeat.com/2014/01/13/moxie-software-names-rebecca-ward-as-new-president-and-ceo/</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Epiphany, Inc." zh-data="" id="275" uri="http://dbpedia.org/resource/Epiphany,_Inc.">
      <neighbors>
        <neighbor dest="4" relationship="industry" weight="0"/>
        <neighbor dest="12" relationship="foundation" weight="0"/>
        <neighbor dest="752" relationship="products" weight="0"/>
        <neighbor dest="754" relationship="location" weight="0"/>
      </neighbors>
      <speak>Epiphany, Inc.  software.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="BitPass" zh-data="" id="276" uri="http://dbpedia.org/resource/BitPass">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="12" relationship="foundation" weight="0"/>
        <neighbor dest="384" relationship="company type" weight="0"/>
        <neighbor dest="754" relationship="location" weight="0"/>
      </neighbors>
      <speak>BitPass was an American company from 2002-2007 that developed an online payment system for digital content and services including micropayments.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Yew Chung International School – Silicon Valley" zh-data="" id="277" uri="http://dbpedia.org/resource/Yew_Chung_International_School_%E2%80%93_Silicon_Valley">
      <neighbors>
        <neighbor dest="6" relationship="State" weight="0"/>
        <neighbor dest="247" relationship="county" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="12" relationship="city" weight="0"/>
      </neighbors>
      <speak>Yew Chung International School of Silicon Valley is a private, non-profit, co-ed, Preschool - Grade 5 Chinese Immersion day school located at 310 Easy Street, Mountain View, California.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="2014 UCLA Bruins baseball team" zh-data="" id="278" uri="http://dbpedia.org/resource/2014_UCLA_Bruins_baseball_team">
      <neighbors>
        <neighbor dest="76" relationship="Home" weight="0"/>
        <neighbor dest="12" relationship="Home" weight="0"/>
        <neighbor dest="255" relationship="high school" weight="0"/>
        <neighbor dest="424" relationship="Home" weight="0"/>
      </neighbors>
      <speak>The 2014 UCLA Bruins baseball team represents the University of California, Los Angeles in the 2014 NCAA Division I baseball season.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="KSFH" zh-data="" id="279" uri="http://dbpedia.org/resource/KSFH">
      <neighbors>
        <neighbor dest="12" relationship="city" weight="0"/>
        <neighbor dest="255" relationship="owner" weight="0"/>
      </neighbors>
      <speak>KSFH FM 87.9 is a student radio station broadcasting an active rock radio format.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Comparison of survey software" zh-data="" id="280" uri="http://dbpedia.org/resource/Comparison_of_survey_software">
      <neighbors>
        <neighbor dest="76" relationship="headquarters" weight="0"/>
        <neighbor dest="6" relationship="headquarters" weight="0"/>
        <neighbor dest="1" relationship="developer" weight="0"/>
        <neighbor dest="79" relationship="headquarters" weight="0"/>
        <neighbor dest="12" relationship="headquarters" weight="0"/>
        <neighbor dest="290" relationship="headquarters" weight="0"/>
        <neighbor dest="334" relationship="headquarters" weight="0"/>
        <neighbor dest="383" relationship="headquarters" weight="0"/>
        <neighbor dest="490" relationship="headquarters" weight="0"/>
        <neighbor dest="532" relationship="headquarters" weight="0"/>
        <neighbor dest="758" relationship="headquarters" weight="0"/>
      </neighbors>
      <speak>Software tools for surveys are varied, ranging from desktop applications to complex web systems for monitoring consumer behaviour.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Market capitalization" zh-data="市值" id="281" uri="http://dbpedia.org/resource/Market_capitalization">
      <neighbors/>
      <speak>Market capitalization  is the total value of the shares outstanding of a publicly traded company; it is equal to the share price times the number of shares outstanding.</speak>
      <zh-speak>市值指一間（或一組）上市公司在證券市場上的「市場價格總值」的簡稱。一般會以有關上市公司在相關證券市場上的收市價格作為計算基準，乘以其已發行的股份總數，而得出的市場價格總值。由於市值的計算基準為有關上市公司的收市價，因此數字會隨股價升降而變動，而市值的升降，亦反映投資市場的買賣氣氛，及對有關公司的最新估值。例子：某上市公司於1月1日在交易所的收市價為15元，而當天該公司的已發行股數為1,000,000,000股普通股（並無其他類別股份發行）；因此，該公司當天市值為15,000,000,000元。</zh-speak>
    </Feature>
    <Feature data="NASDAQ" zh-data="纳斯达克" id="282" uri="http://dbpedia.org/resource/NASDAQ">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="382" relationship="city" weight="0"/>
      </neighbors>
      <speak>The NASDAQ Stock Market , commonly known as the NASDAQ, is an American stock exchange.</speak>
      <zh-speak>纳斯达克股票交易所（英文: NASDAQ）是美國的一間電子股票交易所，創立於1971年。是现在世界上第二大的证券交易所。该市场允许市场期票和股票出票人通过电话或互联网直接交易，而不用限制在交易大厅，而且交易的内容大多与新技术尤其是電腦方面相关，為世界第一個电子证券交易市场。一般来说，在纳斯达克掛牌上市的公司以高科技公司为主，这些大公司包括微软、苹果、英特尔、戴尔、思科等等。2012年5月18日，Facebook通过在纳斯达克上市，募得约160亿美元，成为仅次于2008年Visa（约179亿美元）的美国第二大IPO。雖然那斯達克是一個電子化的證券交易市場，但它仍有個代表性的交易中心，该中心位於紐約時報廣場旁的時報廣場四號（Four Times Square，該大樓又常被稱為「康泰納仕大樓」，Condé Nast Building）。時代廣場四號內並沒有一般證券交易所常有的各種硬體設施，取而代之的是一個大型的攝影棚，配合高科技的投影螢幕並且有歐美各國主要財經新聞電視台的記者派駐進行即時行情報導。2013年4月1日納斯達克斥資7.5億美元（約58.5億港元）現金，向貨幣經紀商BGC Partners收購電子債券交易平台eSpeed，令納市可首次涉足每日交投量達5,000億美元的市場，若收入符合目標，納斯達克將在未來15年發行價值4.84億美元的約1500萬股普通股，使這項交易的潛在價值達到12.3億美元。</zh-speak>
    </Feature>
    <Feature data="New York Stock Exchange" zh-data="纽约证券交易所" id="283" uri="http://dbpedia.org/resource/New_York_Stock_Exchange">
      <neighbors>
        <neighbor dest="13" relationship="indexes" weight="0"/>
      </neighbors>
      <speak>The New York Stock Exchange , which was formed by the NYSE's 2007 merger with the fully electronic stock exchange Euronext.</speak>
      <zh-speak>纽约证券交易所（英语：New York Stock Exchange，英文缩写：NYSE，有時簡稱紐約證交所）与泛歐股票交易所合并前是世界上第二大证券交易所。它曾是最大的交易所，直到1996年它的交易量被纳斯达克超过。2005年4月末，纽约证交所收购全电子证券交易所（Archipelago），成为一个盈利性机构。紐約證交所的总部位于美国纽约州纽约市百老汇大街18号，在华尔街的轉彎處南侧。2006年6月1日，纽约证券交易所宣布与泛歐股票交易所合并组成纽约证交所－泛欧证交所公司（NYSE Euronext）。纽约证券交易所有大约2,800间公司在此上市，全球市值15万亿美元。至2004年7月，三十间处于道琼斯工业平均指数中的公司除了英特尔和微软之外都在紐約證交所上市。</zh-speak>
    </Feature>
    <Feature data="S&amp;P Dow Jones Indices" zh-data="" id="284" uri="http://dbpedia.org/resource/S&amp;P_Dow_Jones_Indices">
      <neighbors/>
      <speak>S&amp;P Dow Jones Indices /daʊ ˈdʒoʊnz/ is a joint venture between McGraw Hill Financial, the CME Group, and News Corp that was announced in 2011 and launched in 2012.  It produces, maintains, licenses, and markets stock market indices as benchmarks and as the basis of investible products, such as exchange-traded funds  are called "passive" investors.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Capitalization-weighted index" zh-data="" id="285" uri="http://dbpedia.org/resource/Capitalization-weighted_index">
      <neighbors/>
      <speak>A capitalization-weighted  had more than 800 component stocks.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Waters Corporation" zh-data="" id="286" uri="http://dbpedia.org/resource/Waters_Corporation">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="8" relationship="company type" weight="0"/>
        <neighbor dest="13" relationship="company type" weight="0"/>
        <neighbor dest="532" relationship="location" weight="0"/>
      </neighbors>
      <speak>Waters Corporation is a publicly traded laboratory analytical instrument and software company headquartered in Milford, Massachusetts.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Gems Sensors &amp; Controls" zh-data="" id="287" uri="http://dbpedia.org/resource/Gems_Sensors_&amp;_Controls">
      <neighbors>
        <neighbor dest="13" relationship="parent company" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>The Gems Sensors and Controls is a global manufacturer of application engineered sensors.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Setra Systems" zh-data="" id="288" uri="http://dbpedia.org/resource/Setra_Systems">
      <neighbors>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="13" relationship="parent company" weight="0"/>
      </neighbors>
      <speak>Setra Systems, Inc. is a manufacturer of electronic instruments that measure pressure, acceleration, and weight.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Pixar" zh-data="皮克斯动画工作室" id="289" uri="http://dbpedia.org/resource/Pixar">
      <neighbors/>
      <speak>Pixar Animation Studios, or simply Pixar . On September 6, 2009, executives John Lasseter, Brad Bird, Pete Docter, Andrew Stanton, and Lee Unkrich were presented with the Golden Lion for Lifetime Achievement by the Biennale Venice Film Festival.</speak>
      <zh-speak>皮克斯動畫工作室（英语：Pixar Animation Studios 英语发音：/ˈpɪksɑr/，香港译作“彼思动画制作室”），簡稱皮克斯，是一家位於加州愛莫利維爾市的计算机动画制片厂。該公司也制作電腦三維软件，如用于影视效果制作并符合自家制定的RenderMan规范的三维渲染软件包——PRMan。皮克斯的前身是盧卡斯影业于1979年成立的的電腦動畫部。1986年，苹果公司联合创始人史提夫·乔布斯收購了卢卡斯的電腦動畫部，成立了皮克斯动画工作室。2006年，皮克斯被迪士尼以74亿美元收购，成为华特迪士尼公司的一部分，乔布斯亦因此成为迪士尼的最大股东。截至2013年，皮克斯共发布了14部动画长片，第一部是1995年的《玩具总动员》。皮克斯的13部作品都获得了好评与商业上的成功，除了《赛车总动员2》，这部电影虽然获得了商业上的成功，但得到的好评比皮克斯的其他作品大幅减少。皮克斯的14部作品都获得了CinemaScore至少“A-”的评价，表示得到了观众的积极接受。该公司也制作一些动画短片。截至2013年12月，该公司的所有作品在全世界累计获得了85亿美元的票房，平均每部电影获得6.07亿美元。皮克斯电影都曾进入電影票房收入前五十名，其中《海底总动员》与《玩具总动员3》一直保持在前五十名，《玩具总动员3》在全球获得了十亿美元票房。皮克斯至2014年已获得27次奥斯卡奖、7次金球奖、11次格莱美奖以及其他奖项。自2001年奥斯卡最佳动画片奖设立以来，皮克斯电影有七部获奖，分别是《海底总动员》、《超人总动员》、《料理鼠王》、《机器人总动员》、《飞屋环游记》、《玩具总动员3》及《勇敢传说》；还有两部《怪兽电力公司》与《汽車總動員》获得提名。《飞屋环游记》与《玩具总动员3》获得奥斯卡最佳影片奖。2009年9月6日，皮克斯成员约翰·拉萨特、布拉德·伯德、皮特·多克特、安德鲁·斯坦顿与李·安克里奇在威尼斯电影节上获得榮譽金獅獎，由乔治·卢卡斯颁奖。</zh-speak>
    </Feature>
    <Feature data="United Kingdom" zh-data="英国" id="290" uri="http://dbpedia.org/resource/United_Kingdom">
      <neighbors>
        <neighbor dest="298" relationship="capital" weight="0"/>
      </neighbors>
      <speak>The United Kingdom of Great Britain and Northern Ireland /ɡreɪt ˈbrɪtən ənd ˈnɔrðərn ˈaɪərlənd/, commonly known as the United Kingdom .</speak>
      <zh-speak>大不列颠及北爱尔兰联合王国（英语：The United Kingdom of Great Britain and Northern Ireland），简称聯合王國（英語：United Kingdom）或不列颠（英語：Britain）&lt;/Small&gt;，通称英國，是由大不列颠岛上的英格兰、苏格兰和威尔士，以及爱尔兰岛东北部的北爱尔兰以及一系列附属岛屿共同组成的一個西欧岛国。中文裡的英国一词即由“英格兰”而来，英國的國際代碼是GB。英国本土位于欧洲大陆西北面的不列颠群岛，附近環繞北海、英吉利海峡、凯尔特海、爱尔兰海和大西洋。英國除了英國本土之外，还有十四个海外屬地。联合王国由四个國家联合而成，分别是英格兰、苏格兰、威尔士和北爱尔兰。英国采用议会制政体，王国政府所在地为伦敦，但是同时拥有其他三个国家级行政机构分别位于北爱尔兰贝尔法斯特，威尔斯卡地夫和苏格兰爱丁堡。英国是世界上第一个君主立宪国家，现任的君主是伊丽莎白二世女皇。人們在聯合王国最强盛时期稱她和她的海外殖民地为「大英帝国」，大英帝國在1922年时到達巅峰，當時拥有全世界四分之一的領土，是有史以来面积最大的国家。大英帝国解体后，英国继续在语言、文化、政治、軍事及法制上对其前殖民地保留了巨大且深遠的影响力，英国女王伊丽莎白二世现在仍然是英联邦组织的領導，也同時是其他15个英聯邦王國的国家元首。英国是一个已發展和民主的國家，亦是第一个工业化国家，在19世纪和20世纪早期是世界上最强大的国家。经过两次世界大战和20世纪下半葉大英帝国的崩溃，英国雖然已经失去了曾经在国际事务上絕對的领导力，不過，英國至今仍為大國之一，在政治、外交、軍事及經濟上均有舉足輕重的地位。英国是第一、第二次世界大战主要战胜国，拥有核武器和世界上第四的军费开支，是联合国安理会常任理事国，對議案擁有否決權。英国亦為欧盟成员国、北约創始會員國、八大工業國組織成员国之一和歐洲四大經濟體之一、全球前五大经济体、也是一系列国际组织如經合組織、世界貿易組織成員國之一。</zh-speak>
    </Feature>
    <Feature data="Solazyme" zh-data="" id="291" uri="http://dbpedia.org/resource/Solazyme">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
      </neighbors>
      <speak>Solazyme Inc. is a publicly held biotechnology company in the United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Stockport" zh-data="斯托克波特" id="292" uri="http://dbpedia.org/resource/Stockport">
      <neighbors>
        <neighbor dest="290" relationship="country" weight="0"/>
      </neighbors>
      <speak>Stockport /ˈstɒkpɔːt/ is a large town in Greater Manchester, England.</speak>
      <zh-speak>斯托克波特（Stockport）是英國的一座城市。位於英格蘭的大曼徹斯特地區。曼徹斯特市中心的東南。</zh-speak>
    </Feature>
    <Feature data="University of Cambridge" zh-data="剑桥大学" id="293" uri="http://dbpedia.org/resource/University_of_Cambridge">
      <neighbors>
        <neighbor dest="290" relationship="country" weight="0"/>
        <neighbor dest="531" relationship="city" weight="0"/>
      </neighbors>
      <speak>The University of Cambridge  is a collegiate public research university in Cambridge, England.</speak>
      <zh-speak>劍橋大學（英文：University of Cambridge；勳銜：Cantab），是一所位於英國英格蘭劍橋市的研究型書院聯邦制大學。其始創於1209年，是英語世界中歷史第二悠久的大學，亦為全球第三古老持續辦學的高校。大學的前身是一個於劍橋市成立的學者協會。早期的文獻記載，有關協會的創辦者原為牛津大學的成員，惟與當地居民發生衝突故移居到劍橋，並希望延續他們的傳統與精神。這也使這兩所古老的大學在包括辦學模式等多方面都非常相似，兩校同時展開了相當悠久的競爭歲月，故常獲合稱為“牛橋”。1636年，劍橋大學一名校友的捐助促使了美國第一所高等教育機構——哈佛學院的創立。至今，劍橋大學由多個成員機構組成，並培養了眾多著名人士。大學現共有31所成員書院及6所學術學院。這些機構遍布城市的不同角落，為學生提供不同方面的教學及娛樂設施。共有90位諾貝爾得獎者現在或曾經在劍橋大學學習或工作。其為眾多學術組織的成員之一，亦是其中一所英國的金三角名校。劍橋大學所收到的捐款回贈為全歐最多。2013年的數字為四十九億英鎊，同年的大學總收入則為十四億四千萬英鎊，當中的三億多為獲取的研究經費資助及收益。</zh-speak>
    </Feature>
    <Feature data="Master of Arts" zh-data="文学硕士" id="294" uri="http://dbpedia.org/resource/Master_of_Arts">
      <neighbors/>
      <speak>A Master of Arts  nursing, museum studies or theology.</speak>
      <zh-speak>文学硕士（MA），或稱人文學碩士，英語：Master of Arts，拉丁語：Magister Artium，是许多大学都会颁发的一种硕士学位。通常与理学硕士相对应。文学硕士授予者通常学习语言、历史、地理、交流，或是哲学、美术等其他人文类科学及社会科学。文学硕士的颁发历史可追溯至巴黎大学。</zh-speak>
    </Feature>
    <Feature data="MGM Holdings" zh-data="" id="295" uri="http://dbpedia.org/resource/MGM_Holdings">
      <neighbors>
        <neighbor dest="14" relationship="key person" weight="0"/>
        <neighbor dest="79" relationship="location" weight="0"/>
      </neighbors>
      <speak>MGM Holdings Inc. is a Delaware-registered pure holding company and the parent company of the American media company Metro-Goldwyn-Mayer Inc.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Programming language" zh-data="编程语言" id="296" uri="http://dbpedia.org/resource/Programming_language">
      <neighbors/>
      <speak>A programming language is an artificial language designed to communicate instructions to a machine, particularly a computer.</speak>
      <zh-speak>编程语言（programming language），是用来定义计算机程序的形式語言。它是一种被标准化的交流技巧，用来向计算机发出指令。一种计算机语言让程序员能够准确地定义计算机所需要使用的数据，并精确地定义在不同情况下所应当采取的行动。最早的编程语言是在電腦發明之後產生的，當時是用來控制提花織布機及自動演奏鋼琴的動作。在電腦領域已發明了上千不同的编程語言，而且每年仍有新的编程語言誕生。很多编程語言需要用指令方式說明計算的程序，而有些编程語言則屬於宣告式編程，說明需要的結果，而不說明如何計算。编程语言的描述一般可以分為語法及語義。語法是說明編程語言中，哪些符號或文字的組合方式是正確的，語義則是對於編程的解釋。有些語言是用規格文件定義，例如C語言的規格文件也是ISO標準中一部份，2011年後的版本為ISO/IEC 9899:2011，而其他語言（像Perl）有一份主要的编程语言实现文件，視為是參考實現。</zh-speak>
    </Feature>
    <Feature data="Artificial intelligence" zh-data="人工智能" id="297" uri="http://dbpedia.org/resource/Artificial_intelligence">
      <neighbors/>
      <speak>Artificial intelligence , perception and the ability to move and manipulate objects.</speak>
      <zh-speak>人工智能（英语：Artificial Intelligence, AI）亦稱機器智能，是指由人工製造出來的系統所表現出來的智能。通常人工智能是指通過普通電腦實現的智能。該詞同時也指研究這樣的智能系統是否能夠實現，以及如何實現的科學領域。一般教材中的定义领域是“智能代理（intelligent agent）的研究与设计”，智能代理是指一个可以观察周遭环境并作出行动以达致目标的系统。 约翰·麦卡锡于1955年的定义是「制造智能机器的科学与工程。」人工智能的研究是高度技术性和专业的，各分支领域都是深入且各不相通的。人工智能的研究可以分为几个技术问题。其分支领域主要集中在解决具体问题，其中之一是，如何使用各种不同的工具完成特定的应用程序。AI的核心问题包括推理，知识，规划，学习，交流，感知，移动和操作物体的能力等。強人工智能目前仍然是该领域的长远目标。目前比较流行的方法包括统计方法，计算智能和传统意义的AI。目前有大量的工具应用了人工智能，其中包括搜索和数学优化，逻辑，基于概率论和经济学的方法等等。</zh-speak>
    </Feature>
    <Feature data="London" zh-data="伦敦" id="298" uri="http://dbpedia.org/resource/London">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="290" relationship="country" weight="0"/>
      </neighbors>
      <speak>London . Other famous landmarks include Buckingham Palace, the London Eye, Piccadilly Circus, St Paul's Cathedral, Tower Bridge, Trafalgar Square, and The Shard.</speak>
      <zh-speak>伦敦（英語：London，讀音：）是大不列顛及北愛爾蘭聯合王國和英格蘭的首都、第一大城及第一大港，也是欧洲最大的都會區。兩千多年前，羅馬人建立了這座都市。倫敦近幾百年來一直在世界上具有巨大的影響力。城市的核心地區倫敦市，仍保持著自中世纪起就劃分的界限。然而，最晚自19世紀起，「倫敦」這個名稱同時也代表圍繞著倫敦市開發的周围地區。這些衛星城市構成了倫敦的都會區和大倫敦區。倫敦是全球世界級城市之一，与美國紐約、日本東京並列世界三大金融中心，并在债券、保险交易等方面超过纽约位居世界最大金融中心。从1801年到20世纪初，作为世界性帝国——大英帝国的首都，伦敦因在其于政治、经济、人文文化、科技发明等领域上的卓越成就，而成为全世界最大的都市。伦敦是一个非常多元化的大都市，其居民來自世界各地，具有多元的种族、宗教和文化；城市中使用的语言超过300种。同时，伦敦还是世界闻名的旅游胜地，拥有数量众多的名胜景点与博物馆等。2013年，大伦敦的人口总数为979萬，若包括都會区的人口則超过1500万人，是欧洲最大都市。</zh-speak>
    </Feature>
    <Feature data="Demis Hassabis" zh-data="" id="299" uri="http://dbpedia.org/resource/Demis_Hassabis">
      <neighbors>
        <neighbor dest="298" relationship="birth place" weight="0"/>
        <neighbor dest="290" relationship="nationality" weight="0"/>
        <neighbor dest="90" relationship="known for" weight="0"/>
        <neighbor dest="449" relationship="field" weight="0"/>
      </neighbors>
      <speak>Demis Hassabis  is a British artificial intelligence researcher, neuroscientist, computer game designer, and world-class gamer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mustafa Suleyman" zh-data="" id="300" uri="http://dbpedia.org/resource/Mustafa_Suleyman">
      <neighbors/>
      <speak>Mustafa Suleyman is co-founder of DeepMind Technologies.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Universal Robotics" zh-data="" id="301" uri="http://dbpedia.org/resource/Universal_Robotics">
      <neighbors>
        <neighbor dest="297" relationship="industry" weight="0"/>
        <neighbor dest="4" relationship="industry" weight="0"/>
      </neighbors>
      <speak>Universal Robotics, Inc. is a software engineering and robotics company headquartered in Nashville, Tennessee.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="HAL 9000" zh-data="哈兒" id="302" uri="http://dbpedia.org/resource/HAL_9000">
      <neighbors>
        <neighbor dest="297" relationship="species" weight="0"/>
      </neighbors>
      <speak>HAL 9000 is a fictional character in Arthur C. Clarke's Space Odyssey series.</speak>
      <zh-speak>哈兒（英語：HAL 9000），是英國小說家亞瑟·克拉克所著《太空漫遊》（Space Odyssey）小說中出現的一部擁有強人工智慧的超級電腦，中文譯為哈兒或海兒。HAL 名字源自「啟發式程序化演算計算機」（Heuristically programmed ALgorithmic computer），「HAL」經常被認為是在影射電腦公司「IBM」，因為在英文字母順序中I、B、M 都緊接在 H、A、L 之後，不過作者澄清這並非他的本意。在《2001太空漫遊》中，哈兒由錢德拉博士所造，置於發現號上，被喻為發現號上的第六名乘員。在故事的續作中，地球上有另一臺也具有強人工智慧、名為莎兒（SAL 9000）的電腦。</zh-speak>
    </Feature>
    <Feature data="Super Robot Wars UX" zh-data="超級機器人大戰UX" id="303" uri="http://dbpedia.org/resource/Super_Robot_Wars_UX">
      <neighbors>
        <neighbor dest="297" relationship="developer" weight="0"/>
      </neighbors>
      <speak>Super Robot Wars UX  game for the 3DS and was released in Japan on March 14, 2013. The theme of this game is "Possibilities".</speak>
      <zh-speak>《超級機器人大戰UX》（日语：スーパーロボット大戦UX）為南夢宮萬代遊戲以帕布雷斯特名義發售的超級機器人大戰系列遊戲。簡稱「機戰UX」「SRWUX」。口號為「所有的可能性，聚集於此吧」。</zh-speak>
    </Feature>
    <Feature data="Paul Churchland" zh-data="" id="304" uri="http://dbpedia.org/resource/Paul_Churchland">
      <neighbors>
        <neighbor dest="297" relationship="main interest" weight="0"/>
        <neighbor dest="334" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Paul Churchland  is a Canadian philosopher noted for his studies in neurophilosophy and the philosophy of mind.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Aya (DC Comics)" zh-data="" id="305" uri="http://dbpedia.org/resource/Aya_(DC_Comics)">
      <neighbors>
        <neighbor dest="297" relationship="species" weight="0"/>
        <neighbor dest="394" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>Aya is a fictional character featured in comic books published by DC Comics.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="The Emperor's New Mind" zh-data="" id="306" uri="http://dbpedia.org/resource/The_Emperor's_New_Mind">
      <neighbors>
        <neighbor dest="297" relationship="literary genre" weight="0"/>
      </neighbors>
      <speak>The Emperor's New Mind: Concerning Computers, Minds and The Laws of Physics is a 1989 book by mathematical physicist Sir Roger Penrose.Penrose argues that human consciousness is non-algorithmic, and thus is not capable of being modeled by a conventional Turing machine-type of digital computer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Chris McKinstry" zh-data="" id="307" uri="http://dbpedia.org/resource/Chris_McKinstry">
      <neighbors>
        <neighbor dest="297" relationship="occupation" weight="0"/>
        <neighbor dest="332" relationship="occupation" weight="0"/>
        <neighbor dest="333" relationship="birth place" weight="0"/>
        <neighbor dest="334" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Kenneth Christopher "Chris" McKinstry  was a researcher in artificial intelligence.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="The One Doctor" zh-data="" id="308" uri="http://dbpedia.org/resource/The_One_Doctor">
      <neighbors>
        <neighbor dest="297" relationship="race" weight="0"/>
        <neighbor dest="335" relationship="series" weight="0"/>
        <neighbor dest="336" relationship="portrayer" weight="0"/>
        <neighbor dest="337" relationship="writer" weight="0"/>
        <neighbor dest="338" relationship="director" weight="0"/>
        <neighbor dest="339" relationship="featuring" weight="0"/>
        <neighbor dest="340" relationship="executive producer" weight="0"/>
      </neighbors>
      <speak>The One Doctor is a Big Finish Productions audio drama based on the long-running British science fiction television series Doctor Who.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Bastion (comics)" zh-data="" id="309" uri="http://dbpedia.org/resource/Bastion_(comics)">
      <neighbors>
        <neighbor dest="297" relationship="species" weight="0"/>
        <neighbor dest="341" relationship="species" weight="0"/>
        <neighbor dest="342" relationship="alliances" weight="0"/>
        <neighbor dest="343" relationship="creators" weight="0"/>
        <neighbor dest="344" relationship="publisher" weight="0"/>
        <neighbor dest="345" relationship="alliances" weight="0"/>
        <neighbor dest="346" relationship="alliances" weight="0"/>
        <neighbor dest="347" relationship="alliances" weight="0"/>
        <neighbor dest="348" relationship="creators" weight="0"/>
      </neighbors>
      <speak>Bastion is a supervillain that appears in the fictional Marvel Universe.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="David Haussler" zh-data="" id="310" uri="http://dbpedia.org/resource/David_Haussler">
      <neighbors>
        <neighbor dest="297" relationship="award" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="351" relationship="known for" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="353" relationship="field" weight="0"/>
        <neighbor dest="354" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="355" relationship="notable student" weight="0"/>
        <neighbor dest="356" relationship="notable student" weight="0"/>
        <neighbor dest="357" relationship="field" weight="0"/>
        <neighbor dest="358" relationship="work institutions" weight="0"/>
        <neighbor dest="359" relationship="field" weight="0"/>
        <neighbor dest="360" relationship="doctoral student" weight="0"/>
        <neighbor dest="361" relationship="award" weight="0"/>
        <neighbor dest="362" relationship="doctoral student" weight="0"/>
        <neighbor dest="363" relationship="known for" weight="0"/>
        <neighbor dest="364" relationship="award" weight="0"/>
        <neighbor dest="365" relationship="field" weight="0"/>
        <neighbor dest="366" relationship="alma mater" weight="0"/>
        <neighbor dest="367" relationship="alma mater" weight="0"/>
        <neighbor dest="368" relationship="award" weight="0"/>
        <neighbor dest="369" relationship="award" weight="0"/>
        <neighbor dest="370" relationship="award" weight="0"/>
      </neighbors>
      <speak>David Haussler  on the UC Santa Cruz campus, and a consulting professor at Stanford University School of Medicine and UC San Francisco Biopharmaceutical Sciences Department.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Max Weisel" zh-data="" id="311" uri="http://dbpedia.org/resource/Max_Weisel">
      <neighbors>
        <neighbor dest="297" relationship="movement" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="372" relationship="birth place" weight="0"/>
        <neighbor dest="373" relationship="movement" weight="0"/>
        <neighbor dest="374" relationship="birth place" weight="0"/>
        <neighbor dest="375" relationship="field" weight="0"/>
      </neighbors>
      <speak>Max Weisel  is an American software engineer and digital artist.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="INDECT" zh-data="" id="312" uri="http://dbpedia.org/resource/INDECT">
      <neighbors>
        <neighbor dest="297" relationship="keywords" weight="0"/>
        <neighbor dest="376" relationship="keywords" weight="0"/>
        <neighbor dest="377" relationship="keywords" weight="0"/>
        <neighbor dest="378" relationship="keywords" weight="0"/>
        <neighbor dest="379" relationship="keywords" weight="0"/>
        <neighbor dest="380" relationship="funded by" weight="0"/>
        <neighbor dest="381" relationship="keywords" weight="0"/>
      </neighbors>
      <speak>INDECT is a research project in the area of intelligent security systems performed by several European universities since 2009 and funded by the European Union.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Emospark" zh-data="" id="313" uri="http://dbpedia.org/resource/Emospark">
      <neighbors>
        <neighbor dest="297" relationship="industry" weight="0"/>
        <neighbor dest="298" relationship="foundation place" weight="0"/>
        <neighbor dest="79" relationship="location country" weight="0"/>
        <neighbor dest="382" relationship="location city" weight="0"/>
      </neighbors>
      <speak>EmoSPARK is an artificial intelligence console created in London, United Kingdom by Patrick Levy-Rosenthal.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Anki (company)" zh-data="" id="314" uri="http://dbpedia.org/resource/Anki_(company)">
      <neighbors>
        <neighbor dest="297" relationship="industry" weight="0"/>
        <neighbor dest="383" relationship="location city" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
        <neighbor dest="385" relationship="industry" weight="0"/>
      </neighbors>
      <speak>Anki is a consumer robotics and artificial intelligence startup.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Austrian Research Institute for Artificial Intelligence" zh-data="" id="315" uri="http://dbpedia.org/resource/Austrian_Research_Institute_for_Artificial_Intelligence">
      <neighbors>
        <neighbor dest="297" relationship="focus" weight="0"/>
        <neighbor dest="386" relationship="key person" weight="0"/>
        <neighbor dest="387" relationship="location" weight="0"/>
        <neighbor dest="388" relationship="location" weight="0"/>
        <neighbor dest="389" relationship="key person" weight="0"/>
      </neighbors>
      <speak>The Austrian Research Institute for Artificial Intelligence , a registered scientific society founded in 1969.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="BioBIKE" zh-data="" id="316" uri="http://dbpedia.org/resource/BioBIKE">
      <neighbors>
        <neighbor dest="297" relationship="genre" weight="0"/>
        <neighbor dest="390" relationship="genre" weight="0"/>
        <neighbor dest="391" relationship="programming language" weight="0"/>
        <neighbor dest="392" relationship="genre" weight="0"/>
        <neighbor dest="393" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>BioBike accessible to research scientists who are not expert programmers.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Skeets (DC Comics)" zh-data="" id="317" uri="http://dbpedia.org/resource/Skeets_(DC_Comics)">
      <neighbors>
        <neighbor dest="297" relationship="species" weight="0"/>
        <neighbor dest="394" relationship="publisher" weight="0"/>
        <neighbor dest="395" relationship="creator" weight="0"/>
        <neighbor dest="396" relationship="partners" weight="0"/>
        <neighbor dest="397" relationship="powers" weight="0"/>
      </neighbors>
      <speak>Skeets is a fictional artificial intelligence robot from the future in the DC Comics Universe.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="DragonLord Enterprises, Inc." zh-data="" id="318" uri="http://dbpedia.org/resource/DragonLord_Enterprises,_Inc.">
      <neighbors>
        <neighbor dest="297" relationship="service" weight="0"/>
        <neighbor dest="79" relationship="państwo" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
        <neighbor dest="385" relationship="industry" weight="0"/>
        <neighbor dest="399" relationship="product" weight="0"/>
        <neighbor dest="400" relationship="industry" weight="0"/>
        <neighbor dest="401" relationship="location city" weight="0"/>
      </neighbors>
      <speak>DragonLord Enterprises, Inc. is an American corporation that develops games, mobile apps, and3D simulations.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="UNICE global brain project" zh-data="" id="319" uri="http://dbpedia.org/resource/UNICE_global_brain_project">
      <neighbors>
        <neighbor dest="297" relationship="occupation" weight="0"/>
        <neighbor dest="402" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>UNICE, a global brain project, is an acronym for Universal Network of Intelligent Conscious Entities, a term coined by policy analyst and urban designer Michael E. Arth in the 1990s to describe "the transformation of our species that might be the result of a new form of intelligent life developed from a hive-like interaction of computers, humans, and future forms of the Internet."   Arth established the not-for-profit website www.UNICE.info in 2007 and revamped it in 2015, with the focus on public policy and developing Friendly Artificial Intelligence through a system of checks and balances.In a January 2015 article, Arth describes the development of a public policy answer engine, which will involve both an independent web site .  Initially, UNICE would serve the public with evidence-based analyses and recommendations gleaned from Big Data, but eventually it may lead to an efficient, practical, and highly representative form of governance.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Gaius Baltar" zh-data="" id="320" uri="http://dbpedia.org/resource/Gaius_Baltar">
      <neighbors>
        <neighbor dest="297" relationship="occupation" weight="0"/>
        <neighbor dest="81" relationship="occupation" weight="0"/>
      </neighbors>
      <speak>Dr. Gaius Baltar is a fictional character in the TV series Battlestar Galactica played by James Callis, a reimagining of Count Baltar from the 1978 Battlestar Galactica series.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="March of the Machines" zh-data="" id="321" uri="http://dbpedia.org/resource/March_of_the_Machines">
      <neighbors>
        <neighbor dest="297" relationship="non-fiction subject" weight="0"/>
      </neighbors>
      <speak>March of the Machines: Why the New Race of Robots Will Rule the World  and then imagines future scenarios.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="20Q" zh-data="" id="322" uri="http://dbpedia.org/resource/20Q">
      <neighbors>
        <neighbor dest="297" relationship="materials" weight="0"/>
      </neighbors>
      <speak>20Q is a computerized game of twenty questions that began as a test in artificial intelligence  questions, the player is declared the winner.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Haze (video game)" zh-data="" id="323" uri="http://dbpedia.org/resource/Haze_(video_game)">
      <neighbors>
        <neighbor dest="297" relationship="Game Engine" weight="0"/>
      </neighbors>
      <speak>Haze is a first-person shooter video game developed by Free Radical Design and published by Ubisoft for the PlayStation 3. It was released worldwide in May 2008. Releases for Xbox 360 and Microsoft Windows were canceled.A multinational corporation with bio-medical expertise developed a drug called Nova-Keto-Thyrazine - also called Nectar, a "nutritional supplement" that enables soldiers to fight harder and smarter, but also induces a hallucinogenic effect, where soldiers are no longer cognizant of the real battlefield around them, instead viewing an idyllic, painless environment.The game takes place over a three-day period as Mantel battles a group of rebels known as "The Promise Hand" which is led by Gabriel "Skin Coat" Merino, with the player assuming the role of Shane Carpenter, a 25-year-old Mantel soldier.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Soul'd Out" zh-data="" id="324" uri="http://dbpedia.org/resource/Soul'd_Out">
      <neighbors>
        <neighbor dest="297" relationship="associated band" weight="0"/>
      </neighbors>
      <speak>Soul'd Out " and "sold out". The group is sometimes referred to by their initials, S.O.  On 30 January 2014 it was announced via their official Facebook page, that SOUL'd OUT would disband after their final album "To From" is released on 9 April 2014.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Artificial Intelligence Center" zh-data="" id="325" uri="http://dbpedia.org/resource/Artificial_Intelligence_Center">
      <neighbors>
        <neighbor dest="297" relationship="industry" weight="0"/>
        <neighbor dest="332" relationship="service" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>The Artificial Intelligence Center is a laboratory in the Information and Computing Sciences Division of SRI International.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="AIML" zh-data="" id="326" uri="http://dbpedia.org/resource/AIML">
      <neighbors>
        <neighbor dest="297" relationship="genre" weight="0"/>
      </neighbors>
      <speak>AIML, or Artificial Intelligence Markup Language, is an XML dialect for creating natural language software agents.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Feet of Clay (novel)" zh-data="" id="327" uri="http://dbpedia.org/resource/Feet_of_Clay_(novel)">
      <neighbors>
        <neighbor dest="297" relationship="non-fiction subject" weight="0"/>
      </neighbors>
      <speak>Feet of Clay is the nineteenth Discworld novel by Terry Pratchett, published in 1996. The story follows the members of the City Watch, as they attempt to solve murders apparently committed by a golem, as well as the unusual poisoning of the Patrician, Lord Vetinari.The title is a figure of speech from Hebrew scripture  and the script used in the book to represent Morporkian being written by a golem resembles the Hebrew alphabet, a reference to golems' origins in Jewish folklore.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Kenneth M. Sayre" zh-data="" id="328" uri="http://dbpedia.org/resource/Kenneth_M._Sayre">
      <neighbors>
        <neighbor dest="297" relationship="main interest" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="474" relationship="main interest" weight="0"/>
        <neighbor dest="522" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Kenneth M. Sayre is an American philosopher who spent most of his career at the University of Notre Dame . His early career was devoted mainly to philosophic applications of artificial intelligence, cybernetics, and information theory.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ADS-AC" zh-data="" id="329" uri="http://dbpedia.org/resource/ADS-AC">
      <neighbors>
        <neighbor dest="297" relationship="genre" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="783" relationship="programming language" weight="0"/>
      </neighbors>
      <speak>ADS-AC is an experimental Open Source program which implements Absolutely Dynamic System, a proposed mechanism for AC.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Clone Algo Inc" zh-data="" id="330" uri="http://dbpedia.org/resource/Clone_Algo_Inc">
      <neighbors>
        <neighbor dest="297" relationship="industry" weight="0"/>
        <neighbor dest="79" relationship="foundation place" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="502" relationship="industry" weight="0"/>
      </neighbors>
      <speak>Clone Algo Inc is an American multinational corporation headquartered in Winchester, Nevada, US. A technology company, it primarily creates algorithms based on artificial intelligence for mobile applications.The corporation holds the following brands, under its umbrella:	Clone Algo DIY	Clone Algo App	Clone Algo PRO	Algo Shield Insurance	Algo TVClone Algo Inc issued 700,000,000 shares of common stock and 150,000,000 shares of preferred stock in its preliminary filing.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Carlo Penco" zh-data="" id="331" uri="http://dbpedia.org/resource/Carlo_Penco">
      <neighbors>
        <neighbor dest="297" relationship="main interest" weight="0"/>
      </neighbors>
      <speak>Carlo Penco . His early research interests has been mainly on the philosophy of the later Wittgenstein and the philosophy of Frege.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Research" zh-data="研究" id="332" uri="http://dbpedia.org/resource/Research">
      <neighbors/>
      <speak>Research comprises "creative work undertaken on a systematic basis in order to increase the stock of knowledge, including knowledge of man, culture and society, and the use of this stock of knowledge to devise new applications." It is used to establish or confirm facts, reaffirm the results of previous work, solve new or existing problems, support theorems, or develop new theories.</speak>
      <zh-speak>研究是主動和系統方式的過程，是為了發現、解釋或校正事實、事件、行為、或理論，或把這樣事實、法則或理論作出實際應用。「研究」一詞常用來描述關於某一特殊主題的資訊收集。英文「研究（research）」源自中古法語，意思是徹底檢查。</zh-speak>
    </Feature>
    <Feature data="Winnipeg" zh-data="温尼伯" id="333" uri="http://dbpedia.org/resource/Winnipeg">
      <neighbors>
        <neighbor dest="334" relationship="country" weight="0"/>
      </neighbors>
      <speak>Winnipeg .</speak>
      <zh-speak>温尼伯（英语：Winnipeg），加拿大當地華人稱之為溫尼辟，座落於草原三省東緣，是加拿大第八大城市，也是馬尼托巴省省会和该省最大城市，半數多的曼尼托巴省人口集中於此。溫尼伯的名字源於當地原住民的克里語，意為“渾水”。溫尼伯在地理上屬於西加拿大。它是一個運輸、經濟、製造業、農業與教育的重鎮。同時也是西加拿大的重要交通樞紐，距美国邊境仅96公里。1738年，法國商人在此建立第一個貿易站，在這之前，溫尼伯已成為原住民諸部落的貿易中心。1812年，一批蘇格蘭移民在此定居。1873年，城市人口增至1869人。溫尼伯的經濟由金融、製造、餐飲、文化及旅遊組成。城內有理查德森國際機場。由北美一級鐵路構築的城市鐵路東西通往加拿大各省，向南則駛往美國。以溫尼伯為主場的體育隊有：溫尼伯藍色轟炸機隊（加拿大式橄欖球）、溫尼伯噴射機隊（冰球）及溫尼伯黃金眼隊（棒球）。坐落在溫尼伯的大學及學院有：曼尼托巴大學、溫尼伯大學、加拿大門諾會大學、聖伯尼菲斯大學及紅河學院。溫尼伯擁有不同種群的人口，其中菲律賓人占總人口的比例數在加拿大全國為最高，他加祿語也成為城市中使用比例最高的非英語第二語言。然而，其人口的絕大多數仍由歐洲裔構成（如烏克蘭人、俄羅斯人、德國人）。其中十分之一以法語為母語。溫尼伯華裔在市中心也建立了唐人街。</zh-speak>
    </Feature>
    <Feature data="Canada" zh-data="加拿大" id="334" uri="http://dbpedia.org/resource/Canada">
      <neighbors>
        <neighbor dest="725" relationship="largest city" weight="0"/>
      </neighbors>
      <speak>Canada  is a country in North America consisting of ten provinces and three territories.</speak>
      <zh-speak>加拿大（英语、法语：Canada，IPA读音：[ˈkænədə]（英）[kanada]（法））为北美洲一个国家，西抵太平洋，东至大西洋，北滨北冰洋，东北方与丹麦领地格陵兰相望，东部与圣皮埃尔和密克隆群岛相望，南方及西北方与美国接壤。加拿大的领土面积达998万平方公里，为全球面积第二大国家。加拿大素有「枫叶之国」的美誉，渥太华为该国首都。加拿大在一万四千年前即有原住民在此生活。15世纪末，英国和法国殖民者开始探索北美洲的东岸，并在此建立殖民地。1763年，当七年战争结束后，法国被迫将其几乎所有的北美殖民地割让予英国。在随后的几十年中，英国殖民者向西探索至太平洋地区，并建立了数个新的殖民地。1867年7月1日，1867年宪法法案通过，加拿大省、新不伦瑞克、新斯科舍三个英属北美殖民地组成加拿大联邦，其中加拿大省分裂为安大略和魁北克。在随后100多年里，其它英属北美殖民地陆续加入联邦，组成现代加拿大。加拿大是一個实行聯邦制、君主立憲制及議會制的國家，由十个省和三个地区组成，英女王伊丽莎白二世為國家元首及加拿大君主，而加拿大總督為其及政府的代表。加拿大是双语国家，英语和法语为官方语言，原住民的語言被認定為第一語言。该国是世界上擁有最多元化種族及文化的國家之一，也是一个移民国家，约四分之一的国民出生于境外。得益於豐富的自然資源和高度發達的科技，加拿大是全球最富裕、经济最发达的国家之一。以国际汇率计算，加拿大的人均国内生产总值在全世界排名第十一，人类发展指数排名第八。它在教育、政府的透明度、自由度、生活品质及经济自由的国际排名都名列前茅。</zh-speak>
    </Feature>
    <Feature data="Doctor Who" zh-data="異世奇人" id="335" uri="http://dbpedia.org/resource/Doctor_Who">
      <neighbors/>
      <speak>Doctor Who is a British science-fiction television programme produced by the BBC from 1963 to the present day.</speak>
      <zh-speak>《異世奇人》（英语：Doctor Who）是英國廣播公司制作的一部英國科幻电视剧。该剧讲述的是一位名為「博士」（英语：the Doctor）的时间领主（一种能时间旅行的类人外星生物）的冒险经历。他乘坐他的TARDIS（一种有感知能力的时间旅行宇宙飞船）探索宇宙，这艘飞船的外观如同在该剧首播的1963年时在英国随处可见的蓝色警亭。博士同一连串的同伴一道，在面对各种敌人的同时，拯救文明、帮助普通人、纠正错误。這部被健力士世界紀錄大全列為世界上最長的科幻電視影集，從其整體播出收視率、DVD和書籍出售、iTunes下載量、“非法下載”來看，也被列入有史以來“最成功”的科幻電視影集。此片開播之初，其充滿想像力的劇情、低成本卻有創意的特效及前衛的電音配樂（英國廣播公司音效工作室原創）等原因都讓它備受各界肯定。這個節目在大不列顛被認為是英國流行文化中佔有相當重要的地位的一部分，在別的地方也成為了一個邪典電視喜好。這個節目影響了好幾代英國電視界專業人士，他們中很多人從小便看它長大。許多影評人和普羅大眾贊同這是英國電視史上最好的電視節目之一，曾贏得包括英國影藝學院電影電視獎最佳電視劇獎、從2005年到2010年的5次英國戲劇類國家電視獎。博士已主要由11位演員扮演多次，當由一位演員換成另一位演員時，這個改變稱為重生，而博士的身體、相貌會改變，某種程度上，性格也會隨之改變。儘管每個演員詮釋的方式都不同，甚至有時不同的化身會相遇，但他們都定義成同一個角色。博士目前由馬特·史密斯扮演，他在大衛·田納特 2010年1月1日最後出現之後接演這個角色。重新運行的第五季節目開始於2010年4月3日，第11任博士由Karen Gillan扮演的Amy Pond伴隨；這季後半部分，博士得到了第二個助手，由Arthur Darvill扮演的Rory Williams。之後是2011年播出的第六季，Darvill成為了常規助手。第七季在2012年秋天開始播出，從2012年2月開始製作，並在9月1日正式播出。《異世奇人》也擁有多種介質的衍生劇，包括現在的電視節目《珍姐科幻大冒險》和《超疑特工》，獨立的節目《K-9》和1981年《K-9與它的夥伴們》（K-9 and Company）試播一集。</zh-speak>
    </Feature>
    <Feature data="Nicholas Pegg" zh-data="" id="336" uri="http://dbpedia.org/resource/Nicholas_Pegg">
      <neighbors/>
      <speak>Nicholas Pegg is a British actor, director and writer.A graduate of the University of Exeter, Pegg trained at the Guildford School of Acting.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Clayton Hickman" zh-data="" id="337" uri="http://dbpedia.org/resource/Clayton_Hickman">
      <neighbors/>
      <speak>Clayton James Hickman  is a British scriptwriter, magazine editor, journalist and designer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Gary Russell" zh-data="" id="338" uri="http://dbpedia.org/resource/Gary_Russell">
      <neighbors/>
      <speak>Gary Russell  is a freelance writer and former child actor.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Sixth Doctor" zh-data="" id="339" uri="http://dbpedia.org/resource/Sixth_Doctor">
      <neighbors/>
      <speak>The Sixth Doctor is an incarnation of the Doctor, the protagonist of the BBC science fiction television series Doctor Who.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Jacqueline Rayner" zh-data="" id="340" uri="http://dbpedia.org/resource/Jacqueline_Rayner">
      <neighbors/>
      <speak>Jacqueline Rayner is a best selling British author, best known for her work with the licensed fiction based on the long-running British science fiction television series Doctor Who.Her first professional writing credit came when she adapted Paul Cornell's Virgin New Adventure novel Oh No It Isn't! for the audio format, the first release by Big Finish. , consists of five novels, a number of short stories and four original audio plays.Rayner has edited several anthologies of Doctor Who short stories, mainly for Big Finish, and done work for Doctor Who Magazine.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Android (robot)" zh-data="人形機器人" id="341" uri="http://dbpedia.org/resource/Android_(robot)">
      <neighbors/>
      <speak>An android is a robot or synthetic organism designed to look and act like a human, especially one with a body having a flesh-like resemblance.</speak>
      <zh-speak>仿生人（英語Android）， 即仿真機器人，指是以模仿真人作为目的制造的機器人，而還有仿制人或人型機器人等名稱。但人型機器人也可以指英語中的Humanoid（擬人機器人），可以大小和真人差很遠也沒有似人的外觀，但有人的四肢和頭等構造。現時仿生人仍然在試制階段，卻是長期以來科幻和機器人學的一大主題。仿生人擬真的程度有很多，有些可以從外觀上識別，也沒有真人的思想和感情（如Chobits中的人型電腦）。相對的生物機器人Bioroid，是使用一種真人或生物的活組織，但以機器為主體的類型，是和機械化人有重疊的概念，也是完全刻意為了仿冒真人而制造的，但行為不一定似真人，如電影《未來戰士》的T系列和《翡翠窩大陰謀》Future world中的機器人。反過來說亦有開發外觀不似人，但能夠有似真人行為的機器人，如2001年美國麻省理工學院研發了號稱世界上第一個有类似人類感情的機器人。</zh-speak>
    </Feature>
    <Feature data="Operation: Zero Tolerance" zh-data="" id="342" uri="http://dbpedia.org/resource/Operation:_Zero_Tolerance">
      <neighbors>
        <neighbor dest="309" relationship="main char team" weight="0"/>
        <neighbor dest="344" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>"Operation: Zero Tolerance" was a crossover storyline that ran through Marvel Comics' X-Men related titles during 1997. The story followed from the "Onslaught Saga" and focused on individuals, including Bastion and Henry Peter Gyrich, within the United States government and their attempts to use their positions to hunt down all mutants across the country.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Pasqual Ferry" zh-data="" id="343" uri="http://dbpedia.org/resource/Pasqual_Ferry">
      <neighbors/>
      <speak>Pasqual Ferry  is a Spanish comic book artist and penciller</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Marvel Comics" zh-data="漫威漫畫" id="344" uri="http://dbpedia.org/resource/Marvel_Comics">
      <neighbors/>
      <speak>Marvel Worldwide  Inc., commonly referred to as Marvel Comics and formerly Marvel Publishing, Inc. and Marvel Comics Group, is an American publisher of comic books and related media.</speak>
      <zh-speak>漫威出版公司（Marvel Publishing, Inc.，舊譯驚奇漫畫），普遍稱為漫威漫畫（Marvel Comics），是一家美國的漫畫公司，由漫威娛樂（Marvel Entertainment, Inc.）所持有，而漫威娛樂目前為華特迪士尼公司的子公司。自2008年起，漫威漫画工作室（英语：Marvel Studios）开始拍摄漫威电影宇宙系列，将漫画中的故事再次搬上螢幕。</zh-speak>
    </Feature>
    <Feature data="Humanity's Last Stand" zh-data="" id="345" uri="http://dbpedia.org/resource/Humanity's_Last_Stand">
      <neighbors>
        <neighbor dest="344" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>Humanity's Last Stand was a Marvel Comics radical anti-mutant fringe group and enemies of the X-Men.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Purifiers" zh-data="" id="346" uri="http://dbpedia.org/resource/Purifiers">
      <neighbors>
        <neighbor dest="344" relationship="publisher" weight="0"/>
        <neighbor dest="309" relationship="owners" weight="0"/>
      </neighbors>
      <speak>The Purifiers, also known as the Stryker Crusade, are a fictional paramilitary/terrorist organization in the Marvel Comics universe and enemies of the X-Men.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Features of the Marvel Universe" zh-data="" id="347" uri="http://dbpedia.org/resource/Features_of_the_Marvel_Universe">
      <neighbors/>
      <speak>The comic book stories published by Marvel Comics since the 1940s have featured several noteworthy concepts besides its fictional characters, such as unique places and artifacts.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Scott Lobdell" zh-data="" id="348" uri="http://dbpedia.org/resource/Scott_Lobdell">
      <neighbors/>
      <speak>Scott Lobdell  is an American comic book writer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Sentinel (comics)" zh-data="" id="349" uri="http://dbpedia.org/resource/Sentinel_(comics)">
      <neighbors>
        <neighbor dest="344" relationship="publisher" weight="0"/>
        <neighbor dest="309" relationship="members" weight="0"/>
      </neighbors>
      <speak>The Sentinels are a fictional variety of mutant-hunting robots, appearing in the Marvel Comics Universe.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="X-Men: Second Coming" zh-data="" id="350" uri="http://dbpedia.org/resource/X-Men:_Second_Coming">
      <neighbors>
        <neighbor dest="344" relationship="publisher" weight="0"/>
        <neighbor dest="309" relationship="main char team" weight="0"/>
      </neighbors>
      <speak>"Second Coming" is a crossover storyline published by Marvel Comics that ran through the most of the X-Men comic books from March to July 2010.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Hidden Markov model" zh-data="隐马尔可夫模型" id="351" uri="http://dbpedia.org/resource/Hidden_Markov_model">
      <neighbors/>
      <speak>A hidden Markov model , which control the mixture component to be selected for each observation, are related through a Markov process rather than independent of each other.</speak>
      <zh-speak>隐马尔可夫模型（Hidden Markov Model，HMM）是统计模型，它用来描述一个含有隐含未知参数的马尔可夫过程。其难点是从可观察的参数中确定该过程的隐含参数。然后利用这些参数来作进一步的分析，例如模式识别。在正常的马尔可夫模型中，状态对于观察者来说是直接可见的。这样状态的转换概率便是全部的参数。而在隐马尔可夫模型中,状态并不是直接可见的，但受状态影响的某些变量则是可见的。每一个状态在可能输出的符号上都有一概率分布。因此输出符号的序列能够透露出状态序列的一些信息。</zh-speak>
    </Feature>
    <Feature data="Computer science" zh-data="" id="352" uri="http://dbpedia.org/resource/Computer_science">
      <neighbors/>
      <speak>Computer science is the scientific and practical approach to computation and its applications.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Evolution" zh-data="演化" id="353" uri="http://dbpedia.org/resource/Evolution">
      <neighbors/>
      <speak>Evolution, also known as descent with modification, is the change in heritable phenotype traits of biological populations over successive generations.</speak>
      <zh-speak>进化，又称演化（英语：evolution），在生物学中是指种群裡的遺傳性狀在世代之間的變化。所謂性狀則是指基因的表現，這些基因在繁殖過程中，會經複製並傳遞到子代。而基因的突变可使性狀改變，進而造成個體之間的遺傳變異。新性狀又會因為物種迁徙或是物種之間的水平基因轉移，而隨著基因在族群中傳遞。當這些遺傳變異受到非隨機的自然选择或隨機的遺傳漂變影響，而在族群中變得較為普遍或稀有時，就表示發生了演化。簡略的說，進化的實質便是：種群基因頻率的改變。自然選擇能使有利於生存與繁殖的遺傳性狀變得更為普遍，並使有害的性狀變得更稀有。這是因為帶有較有利性狀的個體，能將相同的性狀轉移到更多的後代。經過了許多世代之後，性狀產生了連續、微小且隨機的變化，自然選擇則挑出了最適合所處環境的變異，使適應得以發生。相對而言，遺傳漂變會使性狀在族群中的所佔比例產生一些隨機的變化，來自一些使個體能夠成功繁殖的偶然因素。物種是指一群可以互相進行繁殖行為的個體。當一個物種分離成各個交配行為受到阻礙的不同族群時，再加上突變、遺傳漂變，與不同環境對於不同性狀的青睞，會使變異逐代累積，進而產生新的物種。生物之間的相似性顯示所有已知物種皆是從共同祖先或是祖先基因池逐漸分化產生。以自然選擇為基礎的演化理論，最早是由查爾斯·達爾文與亞爾佛德·羅素·華萊士所提出，詳細闡述出現在達爾文出版於1859年的《物種起源》。1930年代，達爾文自然選擇與孟德爾遺傳合而為一，形成了現代綜合理論。連結了演化的「單位」（基因）與演化的「機制」（自然選擇）。這種有力的解釋以及具預測性的理論成為現代生物學的中心原則，使地球上的生物多樣性得以作統一的解釋。</zh-speak>
    </Feature>
    <Feature data="Andrzej Ehrenfeucht" zh-data="" id="354" uri="http://dbpedia.org/resource/Andrzej_Ehrenfeucht">
      <neighbors>
        <neighbor dest="310" relationship="doctoral student" weight="0"/>
        <neighbor dest="367" relationship="workplaces" weight="0"/>
        <neighbor dest="464" relationship="field" weight="0"/>
      </neighbors>
      <speak>Andrzej Ehrenfeucht  is a Polish American mathematician and computer scientist.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Jim Kent" zh-data="" id="355" uri="http://dbpedia.org/resource/Jim_Kent">
      <neighbors>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="310" relationship="academic advisor" weight="0"/>
        <neighbor dest="358" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>William James .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Anders Krogh" zh-data="" id="356" uri="http://dbpedia.org/resource/Anders_Krogh">
      <neighbors>
        <neighbor dest="351" relationship="known for" weight="0"/>
        <neighbor dest="390" relationship="field" weight="0"/>
        <neighbor dest="750" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Professor Anders Krogh is a bioinformatician at the University of Copenhagen, where he leads the university's bioinformatics center.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Molecular biology" zh-data="分子生物学" id="357" uri="http://dbpedia.org/resource/Molecular_biology">
      <neighbors/>
      <speak>Molecular biology /məˈlɛkjʊlər/ is the branch of biology that deals with the molecular basis of biological activity.</speak>
      <zh-speak>分子生物学是对生物在分子層次上的研究。这是一门生物学和化学之间跨学科的研究，其研究领域涵盖了遗传学、生物化学和生物物理学等学科。分子生物学主要致力于对细胞中不同系统之间相互作用的理解，包括DNA，RNA和蛋白质生物合成之间的关系以及了解它们之间的相互作用是如何被调控的。</zh-speak>
    </Feature>
    <Feature data="University of California, Santa Cruz" zh-data="加利福尼亞大學聖塔克魯茲分校" id="358" uri="http://dbpedia.org/resource/University_of_California,_Santa_Cruz">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>The University of California, Santa Cruz .</speak>
      <zh-speak>聖塔克魯茲加利福尼亞大學（University of California, Santa Cruz，UC Santa Cruz 或 UCSC）是美國加利福尼亞大學的一個分校。該校位於舊金山南方130公里的海灣城市聖塔克魯茲邊緣，校地面積810公頃，位於可俯瞰太平洋和蒙特雷灣的森林叢生山丘上。聖塔克魯茲加利福尼亞大學成立於1965年，該校是以漸進、跨學科的大學教育、創新的教學方式和現代建築起步。之後演變成為一所涵蓋各種大學部和研究所課程的現代化研究型大學，並保留了對大學部學生極力支持和學生政治活動傳統的聲譽。</zh-speak>
    </Feature>
    <Feature data="Cancer" zh-data="癌症" id="359" uri="http://dbpedia.org/resource/Cancer">
      <neighbors/>
      <speak>Cancer /ˈkænsər/, also known as a malignant tumor or malignant neoplasm, is a group of diseases involving abnormal cell growth with the potential to invade or spread to other parts of the body.</speak>
      <zh-speak>癌症又名為惡性腫瘤，指的是細胞不正常增生，且這些增生的細胞可能侵犯身體的其他部分；中医学中称岩，為由控制細胞分裂增殖机制失常而引起的疾病。癌细胞除了分裂失控外，还会局部侵入週遭正常組織甚至經由体内循環系統或淋巴系統转移到身體其他部分。不是所有的腫瘤都會癌化，有些細胞增生不會侵犯身體其他部分，稱為良性腫瘤。癌症常見的徵象與症狀包括新發生的腫塊、異常的出血、慢性咳嗽、無法解釋的體重減輕、以及腸胃蠕動的改變等等，但其他疾病也可能會出現這些症狀，因此發現這些症狀並不一定表示得了癌症。在人類身上，目前已知的癌症超過一百種。癌症有許多類型，因吸菸而罹癌者佔了癌症死者中的22%，肥胖、飲食不佳、運動不足、飲酒則共佔了10%。其他可能造成癌症的因素還包括某些感染、暴露於游離輻射、以及環境汙染因子。在發展中國家約有20%的癌症是由於感染症（如B型肝炎、C型肝炎、以及人類乳突病毒等）造成。致癌因子通常是透過改變細胞中的遺傳物質運作，通常許多這類遺傳物質的變化是癌症產生所必要的。約5到10%的癌症是由於遺傳自雙親的基因異常。癌症可以由症狀和徵候或透過篩檢的方式發現，然後再以影像檢查和切片檢查來確診。癌細胞持續生長而不受外在訊息調控，可能是原本正常的原癌基因被激活，将细胞引入到癌变状态，但主要还是因为一些与控制細胞分裂有关的蛋白质出现異常，如腫瘤抑制基因的功能失常。导致这种局面，可能是为该蛋白编码的DNA因突变而出现了损伤，轉译而出的蛋白质因此也出现错误。要將一個正常細胞轉化成一個惡性腫瘤細胞通常需要許多次突變發生，或是基因轉譯為蛋白質的过程受到干扰。引起基因突變的物质被稱為致癌物質，又以其造成基因損傷的方式可分為化學性致癌物與物理性致癌物。例如接觸放射性物質，或是一些環境因子，例如，香煙、輻射、酒精。还有一些病毒可將本身的基因插入細胞的基因裡中，激活癌基因。但突变也会自然產生，所以即使避免接觸上述的致癌因子，仍然無法完全預防癌症的產生。发生在生殖细胞的突变有可能傳至下一代。許多癌症都可以預防，預防的方式包括戒烟、多吃蔬菜水果及全穀類食品、減少肉類食物與精製碳水化合物的攝取、維持健康體重、多運動、減少陽光曝曬、以及施打疫苗預防感染症等等。透過篩檢早期發現，對於部分的癌症（包括大腸直腸癌和子宮頸癌等）有用，但乳癌篩檢的價值則有爭議性。對癌症的治療方式通常結合化學療法、放射療法以及手術等。疼痛控制與症狀控制是癌症治療中重要的一環，而安寧緩和醫療對於疾病已進展到較晚期的病人來說相當重要。癌症病人的存活率端看癌症的種類與開始治療時的疾病狀況。在已開發國家兒童癌症病人的五年存活率平均高達80%，在美國的成年癌症病人的平均五年存活率則有66%。而病症的嚴重程度取決於癌細胞所在部位以及惡性生長的程度。多數癌症根據其類型、所處的部位和發展的階段可以治療甚至治癒。一旦診斷確定，癌症通常以結合手術、化療和放射療法的方式進行治療。隨著科學研究的進步，開發出許多針對特定類型癌症的藥物，也增進治療上的效果。如果癌症未經治療，通常最終結果將導致死亡。 在2012年，大約有1,410萬人得到癌症，並且造成820萬人身亡（相當於全年總死亡人數的14.6%）。男性身上最常見的癌症包括肺癌、前列腺癌（攝護腺癌）、大腸直腸癌、以及胃癌；在女性身上最常見的則是乳癌、大腸直腸癌、肺癌和子宮頸癌。兒童以急性淋巴性白血病和腦瘤最常見，不過非洲除外，非何杰金氏淋巴瘤在那裡更常見。2012年，大約16.5萬個15歲以下的兒童被診斷出罹患癌症。各個年齡層的人都有可能產生癌症，由於DNA的損傷會隨著年齡而累積增加，罹癌的風險會隨著年齡的增長而升高，同時有數種癌症在已開發國家較常見。美国每年逝世的5个人当中有一人是因癌症致死，这一数字在世界范围则是100-350/100000。癌症在发达国家中已成為主要死亡原因之一。隨著人類越來越長壽及開發中國家生活習慣的改變，全球的罹癌率整體而言在上升中。</zh-speak>
    </Feature>
    <Feature data="Yoav Freund" zh-data="" id="360" uri="http://dbpedia.org/resource/Yoav_Freund">
      <neighbors>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="358" relationship="alma mater" weight="0"/>
        <neighbor dest="310" relationship="doctoral advisor" weight="0"/>
      </neighbors>
      <speak>Yoav Freund is professor of computer science at the University of California, San Diego who mainly works on machine learning, probability theory and related fields and applications.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Allen Newell" zh-data="艾伦·纽厄尔" id="361" uri="http://dbpedia.org/resource/Allen_Newell">
      <neighbors>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="383" relationship="birth place" weight="0"/>
        <neighbor dest="439" relationship="alma mater" weight="0"/>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
        <neighbor dest="596" relationship="award" weight="0"/>
      </neighbors>
      <speak>Allen Newell . He was awarded the ACM's A.M. Turing Award along with Herbert A. Simon in 1975 for their basic contributions to artificial intelligence and the psychology of human cognition.</speak>
      <zh-speak>艾伦·纽厄尔（Allen Newell，1927年3月19日－1992年7月19日）是计算机科学和认知信息学领域的科学家，曾在兰德公司，卡内基梅隆大学的计算机学院、泰珀商学院和心理学系任职和教研。他是信息处理语言（IPL）发明者之一，并写了该语言最早的两个AI程序，合作开发了逻辑理论家（Logic Theorist 1956年）和通用问题求解器General Problem Solver。1975年他和赫伯特·西蒙一起因人工智能方面的基础贡献而被授予图灵奖。</zh-speak>
    </Feature>
    <Feature data="Adam C. Siepel" zh-data="" id="362" uri="http://dbpedia.org/resource/Adam_C._Siepel">
      <neighbors>
        <neighbor dest="358" relationship="alma mater" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="310" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="365" relationship="field" weight="0"/>
        <neighbor dest="546" relationship="award" weight="0"/>
        <neighbor dest="569" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Adam C. Siepel  is an American computational biologist known for his research in comparative genomics, particularly the development of statistical methods and software tools for identifying evolutionarily conserved sequences.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Human Genome Project" zh-data="人类基因组计划" id="363" uri="http://dbpedia.org/resource/Human_Genome_Project">
      <neighbors/>
      <speak>The Human Genome Project  remain unsequenced.</speak>
      <zh-speak>人类基因组计划（英语：Human Genome Project, HGP）是一项规模宏大，跨国跨学科的科学探索工程。其宗旨在于测定组成人类染色体（指单倍体）中所包含的30亿个碱基对组成的核苷酸序列，从而繪製人类基因组圖譜，並且辨識其载有的基因及其序列，达到破译人类遗传信息的最终目的。基因组计划是人类为了探索自身的奥秘所迈出的重要一步，是继曼哈顿计划和阿波罗登月计划之后，人类科学史上的又一个伟大工程。截止到2005年，人类基因组计划的测序工作已经基本完成（92%）。其中，2001年人类基因组工作草图的发表（由公共基金资助的国际人类基因组计划和私人企业塞雷拉基因組公司各自独立完成，并分别公开发表）被认为是人类基因组计划成功的里程碑。</zh-speak>
    </Feature>
    <Feature data="ISCB Senior Scientist Awards" zh-data="" id="364" uri="http://dbpedia.org/resource/ISCB_Senior_Scientist_Awards">
      <neighbors/>
      <speak>The ISCB Accomplishment by a Senior Scientist Award is an annual prize awarded by the International Society for Computational Biology for contributions to the field of computational biology.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Genomics" zh-data="基因組學" id="365" uri="http://dbpedia.org/resource/Genomics">
      <neighbors/>
      <speak>Genomics is a discipline in genetics that applies recombinant DNA, DNA sequencing methods, and bioinformatics to sequence, assemble, and analyze the function and structure of genomes .  Advances in genomics have triggered a revolution in discovery-based research to understand even the most complex biological systems such as the brain.</speak>
      <zh-speak>基因组学(英语：Genomics)，或基因體學，是研究生物基因组和如何利用基因的一门学问。该学科提供基因组信息以及相关数据系统利用，试图解决生物，医学，和工业领域的重大问题。基因组学能为一些疾病提供新的诊断，治疗方法。例如，对刚诊断为乳腺癌的女性，一个名为“Oncotype DX”的基因组测试，能用来评估病人乳腺癌复发的个体危险率以及化疗效果，这有助于医生获得更多的治疗信息并进行个性化医疗。基因组学还被用于食品与农业部门。基因组学的主要工具和方法包括： 生物信息学，遗传分析，基因表达测量和基因功能鉴定。</zh-speak>
    </Feature>
    <Feature data="Connecticut College" zh-data="" id="366" uri="http://dbpedia.org/resource/Connecticut_College">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Connecticut College .Forbes ranked Connecticut College 84th in its 2014 overall list, 45th in the Northeast and 70th among private colleges.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="University of Colorado Boulder" zh-data="科羅拉多大學波德分校" id="367" uri="http://dbpedia.org/resource/University_of_Colorado_Boulder">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
        <neighbor dest="601" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>The University of Colorado Boulder , it is considered one of the thirty "Public Ivy League" schools.In 2010, the university consisted of nine colleges and schools and offered over 150 academic programs and enrolled 29,952 students.</speak>
      <zh-speak>科羅拉多大學波德分校（University of Colorado at Boulder，CU-Boulder, UCB officially; Colorado and CU colloquially）是科罗拉多大学系统的旗舰。它成立于1876年，比科罗拉多加入联邦的时间还早5个月。是美國新聞與世界報道所評全美最佳公立大學之一。科罗拉多大学共有三个校区：博尔德校区、丹佛校区，以及科羅拉多泉校區。博尔德校區是科羅拉多大學主校區，該校區位於洛嘰山麓的波德市—它是美國有名的風光秀美的城市，氣候宜人，陽光燦爛，城市安靜和平。整个学校由9个学院系统组成，提供超过150个学术项目，有近三万名学生，在2010年授予了6781个学位。历史上，科罗拉多大学的学生，研究人员或者学术人员中，总共诞生了11个诺贝尔奖获得者，7个麦克阿瑟奖(MacArthur Fellow)，以及众多航天员。其中在最近的十年内物理系先后有4人获得诺贝尔奖，光学、原子方向实力超群，在美国排名第一。工程领域最具特色的是航天工程(Aerospace Engineering Sciences)，该专业在US News上2011年的排名全美第十二。该系诞生十几位宇航员，并且从2009年起聘期退役宇航员担任某实验类课程指导。航天科学与工程方向下的LASP实验室专门从事航天领域的研究，具备从卫星的设计、在轨运行以及返回数据处理、科学研究的全程研究能力。据统计美国现役的所有卫星都有科罗拉多大学设计、制造的仪器设备。大气与海洋科学系成立的时间不长，但目前已跃升至全美国前五名，并与位于博尔德附近的美国大气研究中心有着密切合作。該大學的教授與學者們曾獲得了包括諾貝爾將在內的諸多獎項。科羅拉多大學對全由學生操作的太空人造衛星引以為榮，曾經登陸太空的太空人，有11位是該大學的畢業同學。至於其他突出的學科有工程、商科、心理學和理科。學生選讀最多的學科，依次是社會科學(23%)、商科管理(16%)、大眾傳播 (12%)、工程(10%)。</zh-speak>
    </Feature>
    <Feature data="Dickson Prize" zh-data="" id="368" uri="http://dbpedia.org/resource/Dickson_Prize">
      <neighbors/>
      <speak>The Dickson Prize in Medicine and the Dickson Prize in Science were both established in 1969 by Joseph Z. Dickson and Agnes Fischer Dickson.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Weldon Memorial Prize" zh-data="" id="369" uri="http://dbpedia.org/resource/Weldon_Memorial_Prize">
      <neighbors/>
      <speak>The Weldon Memorial Prize, also known as the Weldon Memorial Prize and Medal, is given yearly by the University of Oxford.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Curt Stern Award" zh-data="" id="370" uri="http://dbpedia.org/resource/Curt_Stern_Award">
      <neighbors/>
      <speak>The Curt Stern Award, also known as the Stern Award, honors the memory of Curt Stern  for outstanding scientific achievements in human genetics that have occurred in the last 10 years.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mathieu Blanchette (computational biologist)" zh-data="" id="371" uri="http://dbpedia.org/resource/Mathieu_Blanchette_(computational_biologist)">
      <neighbors>
        <neighbor dest="353" relationship="field" weight="0"/>
        <neighbor dest="310" relationship="academic advisor" weight="0"/>
        <neighbor dest="365" relationship="field" weight="0"/>
        <neighbor dest="390" relationship="field" weight="0"/>
      </neighbors>
      <speak>Mathieu Daniel Blanchette is a computational biologist and Associate Professor in the School of Computer Science at McGill University.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Tucson, Arizona" zh-data="图森 (亚利桑那州)" id="372" uri="http://dbpedia.org/resource/Tucson,_Arizona">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
        <neighbor dest="374" relationship="is part of" weight="0"/>
      </neighbors>
      <speak>Tucson  include Casas Adobes, Catalina Foothills, Flowing Wells, Tanque Verde, Tortolita, and Vail.</speak>
      <zh-speak>图森（英文：Tucson，又譯杜桑或土桑），位于美国亚利桑那州南部皮马县（Pima County），是该州第二大城市（凤凰城为第一大）、美国第32大城市和第52大都会区。根據2010年人口普查，图森共有人口520,116人。而图森都会区則共有人口989,569人图森也是皮马县的县治所在。该城位于荒漠山谷区，三面环山。干旱充满阳光的气候长期以来吸引着不少游客，带来了持续增长的疗养中心和退休者的到来。光学制造、航空以及电子工业是该城的特色。同时联邦、地方政府以及学院提供了大量就业需要。亚利桑那大学與美國國家光學天文台總部位于图森。戴维斯－蒙森空军基地也位于该城辖区交通: 市民以自行開車為主，有地鐵，唯一的一家sun tran公交車負起全市區的公共運輸責任。</zh-speak>
    </Feature>
    <Feature data="Interactive art" zh-data="" id="373" uri="http://dbpedia.org/resource/Interactive_art">
      <neighbors/>
      <speak>Interactive art is a form of art that involves the spectator in a way that allows the art to achieve its purpose.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Arizona" zh-data="亞利桑那州" id="374" uri="http://dbpedia.org/resource/Arizona">
      <neighbors>
        <neighbor dest="6" relationship="West" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="139" relationship="title" weight="0"/>
      </neighbors>
      <speak>Arizona ; as well as large, deep canyons, with much more moderate summer temperatures and significant winter snowfalls.</speak>
      <zh-speak>亞利桑那州（英语：Arizona）是第48個加入美國聯邦的州，位於美國的西南方。該州同時也是四角落州之一，與新墨西哥州、猶他州、內華達州、加州和墨西哥為鄰，并與科羅拉多州相連。亞利桑那州的主要大城市是鳳凰城、土桑、優瑪和旗桿市。在該州，除大峽谷國家公園之外，還有許多國家森林、公園和紀念地等。亦有許多印地安保留區。關於亞利桑那（Arizona）這個詞彙的起源以及是如何被用於命名這一地區的，歷史學家並沒有一致的意見，有下列三种說法： 奧哈姆語（O'odham）的“alĭ ṣon”（「小小的泉水」之義）。此名實際上是一個叫做“Arizonac”小鎮的英文名稱，該鎮在美墨邊界的南方約8哩（12公里）處。歷史上來說，這個鎮的名稱可能念做“alĭ son”或“alĭ sona”。在奧哈姆語中“l”是一個發聲的舌尖邊擦音，對於操西班牙語或英語的人而言，這個“l”發音聽起來感覺會像“r”。在18世紀中葉後期，西班牙傳教士修訂了神父Eusebio Francisco Kino所繪製的這一地區的地圖，其中將Arizonac鎮更名為“亞利桑那”（Arizona）。隨著這份地圖再版並流佈至歐洲，“亞利桑那”就成爲了整個“新西班牙”北部的命名。 西班牙語的“árida zona”（義為「乾燥地區」）。 納瓦特爾語（Nahuatl）或稱阿茲特克語的“arizuma”，意思是「銀礦藏」。1736年，就在離Arizonac小鎮不遠處，曾有一個小型的採銀礦基地被西班牙人稱為「Real Arissona」。</zh-speak>
    </Feature>
    <Feature data="New media" zh-data="新媒體" id="375" uri="http://dbpedia.org/resource/New_media">
      <neighbors/>
      <speak>Most technologies described as new media are digital, often having characteristics of being manipulated, networkable, dense, compressible, and interactive.</speak>
      <zh-speak>新媒體泛指利用電腦（計算及資訊處理）及網路（傳播及交換）等新科技，對傳統媒體之形式、內容及類型所產生的質變。新媒體一詞可以從產業區分、人機介面、藝術運動、及其多媒體形式來詮釋，不同的詮釋是由於不同領域的觀點（產業、科技、藝術、及傳媒）的出發點之不同。</zh-speak>
    </Feature>
    <Feature data="Metadata" zh-data="元数据" id="376" uri="http://dbpedia.org/resource/Metadata">
      <neighbors/>
      <speak>Metadata is "data about data". There are two "metadata types;" structural metadata, about the design and specification of data structures or "data about the containers of data"; and descriptive metadata  about individual instances of application data or the data content.Metadata was traditionally in the card catalogs of libraries.</speak>
      <zh-speak>元數據（Metadata），又稱元資料、中介資料、中繼資料，為描述數據的數據（data about data），主要是描述數據屬性（property）的資訊，用來支持如指示儲存位置、歷史資料、資源尋找、文件记錄等功能。元數據算是一種電子式目錄，為了達到編製目錄的目的，必須在描述並收藏數據的內容或特色，進而達成協助數據檢索的目的。都柏林核心集（Dublin Core Metadata Initiative，DCMI）是元數據的一種應用，是1995年2月由國際圖書館電腦中心（OCLC）和美國國家超級計算應用中心（National Center for Supercomputing Applications，NCSA）所聯合贊助的研討會，在邀請52位來自圖書館員、電腦專家，共同制定規格，建立一套描述網路上電子文件之特徵。metadata也有人称为後設資料，也有人稱metadata為元數據或詮釋資料等等。有關metadata名詞起源於1969年，有Jack E. Myers所提出的.metadata即關於資料的資料（data-about-data），可以說是一種標準，是為支援互通性的資料描述，所取得一致的準則。Metadata的基本定義出自OCLC與NCSA所主辦的「Metadata Workshop」研討會。它將Metadata定義為「描述資料的資料」（Data about data）。此後各種有關Metadata的定義紛紛的出現。現存很多metadata的定義，主要端視特定社群或使用情境而不同。如有有關資料的資料（data about data），有關資訊物件之結構的資訊（structured information about an information object），描述資源屬性的資料（Data describes attributes of resources）等。</zh-speak>
    </Feature>
    <Feature data="Security" zh-data="保安" id="377" uri="http://dbpedia.org/resource/Security">
      <neighbors/>
      <speak>Security  is the degree of resistance to, or protection from, harm.</speak>
      <zh-speak>保安（英文：Security），是指保護事物遠離危險或招受損失的一種概念。一般來說，保安的概念跟安全相似，不過保安的著眼點是保護事物免受外來的傷害。保安亦指預防危險或突發情況的一種手段或措施，或進行保安工作的工作人員或職員。</zh-speak>
    </Feature>
    <Feature data="Signal processing" zh-data="信号处理" id="378" uri="http://dbpedia.org/resource/Signal_processing">
      <neighbors/>
      <speak>Signal processing is an enabling technology that encompasses the fundamental theory, applications, algorithms, and implementations of processing or transferring information contained in many different physical, symbolic, or abstract formats broadly designated as signals.</speak>
      <zh-speak>在计算机科学、药物分析、电子学等学科中，信号处理（英语：signal processing）是指对信号表示、变换、运算等进行处理的过程。信号处理可以用于沟通人类之间，或人与机器之间的联系；用以探测我们周围的环境，并揭示出那些不易观察到的状态和构造细节，以及用来控制和利用能源与信息．例如，我们可能希望分开两个或多个多少有些混在一起的信号，或者想增强信号模型中的某些成分或参数。几十年来，信号处理在诸如语音与数据通信、生物医学工程、声学、声呐、雷达、地震、石油勘探、仪器仪表、机器人、日用电子产品以及其它很多的这样一些广泛的领域内起着关键的作用。模拟信号处理 --處理未被數位化的信號，包括傳統收音機、電話、雷達以及電視系統。数字信号处理 --處理已經經過數位化的信號，可經由數位電路如ASIC、FPGA、一般用途的微處理器或是電腦、數位信號處理晶片來進行處理。統計訊號處理 --分析並淬取信號的資訊語音訊號處理聲音訊號處理圖像處理影音處理陣列處理 --處理感應器陣列的信號</zh-speak>
    </Feature>
    <Feature data="Digital watermarking" zh-data="數位浮水印" id="379" uri="http://dbpedia.org/resource/Digital_watermarking">
      <neighbors/>
      <speak>A digital watermark is a kind of marker covertly embedded in a noise-tolerant signal such as audio or image data.</speak>
      <zh-speak>数字水印，是指將特定的資訊嵌入数字訊號中，數位訊號可能是音訊、圖片或是影片等。若要拷貝有数字水印的訊號，所嵌入的資訊也會一併被拷貝。數位浮水印可分為浮現式和隱藏式兩種，前者是可被看見的浮水印（visible watermarking），其所包含的資訊可在觀看圖片或影片時同時被看見。一般來說，浮現式的浮水印通常包含版權擁有者的名稱或標誌。右側的範例圖片便包含了浮現式浮水印。電視台在畫面角落所放置的標誌，也是浮現式浮水印的一種。隱藏式的浮水印是以數位資料的方式加入音訊、圖片或影片中，但在一般的狀況下無法被看見。隱藏式浮水印的重要應用之一是保護版權，期望能藉此避免或阻止數位媒體未經授權的複製和拷貝。隐写术（Steganography）也是數位浮水印的一種應用，雙方可利用隱藏在數位訊號中的資訊進行溝通。數位照片中的註釋資料能記錄照片拍攝的時間、使用的光圈和快門，甚至是相機的廠牌等資訊，這也是數位浮水印的應用之一。某些檔案格式可以包含這些稱為「metadata」的額外資訊。</zh-speak>
    </Feature>
    <Feature data="European Union" zh-data="" id="380" uri="http://dbpedia.org/resource/European_Union">
      <neighbors>
        <neighbor dest="290" relationship="text" weight="0"/>
        <neighbor dest="80" relationship="label" weight="0"/>
        <neighbor dest="388" relationship="text" weight="0"/>
        <neighbor dest="486" relationship="text" weight="0"/>
        <neighbor dest="758" relationship="text" weight="0"/>
      </neighbors>
      <speak>The European Union  in the world.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Electronic data processing" zh-data="" id="381" uri="http://dbpedia.org/resource/Electronic_data_processing">
      <neighbors/>
      <speak>Electronic  Data Processing , especially ca. 1960, to distinguish human clerical data processing from that done by computer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="New York" zh-data="纽约州" id="382" uri="http://dbpedia.org/resource/New_York">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="139" relationship="title" weight="0"/>
      </neighbors>
      <speak>New York is a state in the Northeastern and Mid-Atlantic regions of the United States.</speak>
      <zh-speak>纽约州（英语：New York State），暱稱「帝國州」（Empire State），是美国东北部的一个州，首府是奧爾巴尼，由上州、紐約市及郊縣（下州）所組成。纽约州西部及北部与加拿大接壤，东邻马萨诸塞州、康涅狄格州、佛蒙特州（即“新英格兰三州”）和大西洋，南接宾夕法尼亚州和新泽西州。通常人们说起纽约州时不能像称呼美国绝大多数州那样省略最后的“州”（State）字，因为简单地说纽约多指纽约市。</zh-speak>
    </Feature>
    <Feature data="San Francisco" zh-data="旧金山" id="383" uri="http://dbpedia.org/resource/San_Francisco">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="153" relationship="leader title" weight="0"/>
        <neighbor dest="424" relationship="East" weight="0"/>
        <neighbor dest="602" relationship="Northeast" weight="0"/>
      </neighbors>
      <speak>San Francisco /sæn frənˈsɪskoʊ/, officially the City and County of San Francisco, is the cultural, commercial and financial center of Northern California.The only consolidated city-county in California, San Francisco encompasses a land area of about 46.9 square miles  was founded on June 29, 1776, when colonists from Spain established a fort at the Golden Gate and a mission named for St. Francis of Assisi a few miles away.</speak>
      <zh-speak>舊金山（英语：San Francisco），正式名稱為三藩市市郡（City and County of San Francisco），是美國加利福尼亚州北部的一座都市，也是加州唯一市郡合一的行政區，中文又音译为三藩市和圣弗朗西斯科，亦別名「金門城市」、「灣邊之城」、「霧城」等。位於舊金山半島的北端，東臨舊金山灣、西臨太平洋，人口約83萬，為加州第四大城。其與南邊的聖馬刁郡、南灣的聖荷西與矽谷地區、東灣的奧克蘭與柏克萊、以及北邊的馬林郡與納帕郡合稱為舊金山灣區。舊金山是北加州與舊金山灣區的商業與文化發展中心，當地住有很多艺术家、作家和演员，在20世紀及21世紀初一直是美國嘻皮文化和近代自由主義、進步主義的中心之一。這個城市同樣以其眾多的互聯網公司而聞名，同時也成為了廣大同性戀者的聚居地。舊金山也是受歡迎的旅遊目的地，與其涼爽的夏季、多霧、綿延的丘陵地形、混合的建築風格，和金門大橋、纜車、惡魔島監獄及唐人街等景點聞名。此外，舊金山也是五大主要銀行和許多大型公司的總部所在，包括蓋璞、太平洋瓦電公司、Yelp、Pinterest、Twitter、優步、Mozilla和Craigslist等。</zh-speak>
    </Feature>
    <Feature data="Privately held company" zh-data="私人公司" id="384" uri="http://dbpedia.org/resource/Privately_held_company">
      <neighbors/>
      <speak>A privately held company or close corporation is a business company owned either by non-governmental organizations or by a relatively small number of shareholders or company members which does not offer or trade its company stock , Lidl, Aldi, LEGO, Bosch, Rolex and Victorinox are some examples of Europe's largest privately held companies.</speak>
      <zh-speak>私人公司（英语：Privately held company），又稱私營企業、封閉公司（close corporation），是指非政府組織，有時更指非上市公司。私人公司的體制大多為有限公司，但亦有屬股份有限公司者。私人公司的股東及董事會成員，都是自然人或其他私人法人。私人公司的組織架構比較簡單，如中小企業，不過也有些私人公司是大集團的子公司或母公司，它們的公司治理及透明度，不必向外公報，除非是指定業務的私人公司，如私營銀行、證券公司、慈善團體等。</zh-speak>
    </Feature>
    <Feature data="Robotics" zh-data="机器人学" id="385" uri="http://dbpedia.org/resource/Robotics">
      <neighbors/>
      <speak>Robotics is the branch of mechanical engineering, electrical engineering and computer science that deals with the design, construction, operation, and application of robots, as well as computer systems for their control, sensory feedback, and information processing.These technologies deal with automated machines that can take the place of humans in dangerous environments or manufacturing processes, or resemble humans in appearance, behavior, and/or cognition.</speak>
      <zh-speak>機器人學（英语：Robotics）是一項涵蓋了機器人的設計、建造、運作、以及應用的跨領域科技，就如同電腦系統之控制、感測回授、以及資訊處理。這些科技催生出能夠取代人力的自動化機器，在危險境或製造工廠運作，或塑造成外表、行為、心智的仿人機器人。如今許多的機器人受到自然界的啟發，貢獻於生物啟發的機器人學的領域。創造可自動運轉的機器的概念可追溯至古典時代，但是直到20世紀以前，機器人的功能和潛在應用開發及研究沒有持續地成長。縱觀歷史，機器人常見於模仿人類行為，且常以類似的方法管理事務。時至今日，機器人學成為一個快速成長的領域，同時先進技術持續地研發、設計、以及建造用來達成各種實用目的新款機器人，例如家庭用機器人、工業機器人或軍用機器人。許多機器人從事對人類來講非常危險的工作，如拆除炸彈、地雷、探索沈船等。</zh-speak>
    </Feature>
    <Feature data="Paolo Petta" zh-data="" id="386" uri="http://dbpedia.org/resource/Paolo_Petta">
      <neighbors/>
      <speak>Paolo Petta  is an Italian computer and cognitive scientist who is the head of the Intelligent Software Agents and New Media Research Group at the Austrian Research Institute for Artificial Intelligence.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Vienna" zh-data="維也納" id="387" uri="http://dbpedia.org/resource/Vienna">
      <neighbors>
        <neighbor dest="388" relationship="country" weight="0"/>
      </neighbors>
      <speak>Vienna   in the 2011 Innovation Cities Index, which analyzed 162 indicators in covering three areas: culture, infrastructure, and markets.</speak>
      <zh-speak>維也納（德语：Wien；奧地利德語：Wean）是奧地利共和國首都和維也納州首府，人口172.3萬人（都會區約240萬人，佔奧地利人口1/4以上）。歐洲著名的國際都市之一，拥有许多重要的国际组织，例如联合国和OPEC。位於北緯48度12分5秒、東經16度22分38秒。因市內古典音樂氣氛濃厚，引來各國音樂家聚集於此，具“世界音樂之都”和“樂都”等美譽。第一次世界大戰以前是領域曾遍及除德意志以外的中東歐大部分地區的奧匈帝國首都。按照市区人口，它是欧盟第七大城。在20世纪初以前，它是德语圈最大的城市，奥匈帝国分裂之前，该市已经拥有200万人口。今天它仍是德语圈第二大城市，仅次于柏林。该市位于奥地利东部，靠近捷克、斯洛伐克和匈牙利边界。其市中心古城区被列为世界遗产。</zh-speak>
    </Feature>
    <Feature data="Austria" zh-data="奥地利" id="388" uri="http://dbpedia.org/resource/Austria">
      <neighbors/>
      <speak>Austria . The country has developed a high standard of living and in 2011 was ranked 19th in the world for its Human Development Index.</speak>
      <zh-speak>奥地利共和国（）通稱奥地利（德语：Österreich [ˈøːstɐˌʁaɪç]（13px 发音）），是一个位于欧洲中部的内陆国家。与多國接壤，东面是匈牙利和斯洛伐克，南面是意大利和斯洛文尼亚，西面是列支敦士登和瑞士，北面是德国和捷克。首都兼最大城市是維也納，人口超過170萬。 。國土面積83,855平方公里（32,377平方英里），同時因阿爾卑斯山存在的緣故，奧地利成爲了一個山地國，只有32%的國土海拔低於500米（1,600英尺），最高點海拔3,798米（12,461英尺）。奧地利曾是統治中歐650年哈布斯堡王朝的核心部份。如今的奧地利是一個半總統制的代議民主國家，下含九個聯邦州。 奧地利是當今世界最富裕的國家之一，2012年人均國民生產總值達到46,330美元。其人類發展指數在2014年排世界第21位。同時自1995年以來就是歐盟成員， 是OECD的創始國之一。 1995年簽訂申根公約， 1999年接受歐元。</zh-speak>
    </Feature>
    <Feature data="Robert Trappl" zh-data="" id="389" uri="http://dbpedia.org/resource/Robert_Trappl">
      <neighbors>
        <neighbor dest="387" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Robert Trappl  is an Austrian scientist and head of the Austrian Research Institute for Artificial Intelligence in Vienna, which was founded in 1984.  He is known for his work in the field of cybernetics and artificial intelligence.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Bioinformatics" zh-data="生物信息学" id="390" uri="http://dbpedia.org/resource/Bioinformatics">
      <neighbors/>
      <speak>Bioinformatics /ˌbaɪ.oʊˌɪnfərˈmætɪks/ is an interdisciplinary field that develops methods and software tools for understanding biological data.</speak>
      <zh-speak>生物信息學（英语：bioinformatics）利用应用数学、信息学、统计学和计算机科学的方法研究生物学的问题。目前的生物信息学基本上只是分子生物学与信息技术（尤其是互联网技术）的结合体。生物信息学的研究材料和结果就是各种各样的生物学数据，其研究工具是计算机，研究方法包括对生物学数据的搜索（收集和筛选）、处理（编辑、整理、管理和显示）及利用（计算、模拟）。目前主要的研究方向有：序列比对、基因识别、基因重组、蛋白质结构预测、基因表达、蛋白质反应的预测，以及建立进化模型。生物学技术往往生成大量的嘈杂数据。与数据挖掘类似，生物信息学利用数学工具从大量数据中提取有用的生物学信息。生物信息学所要处理的典型问题包括：重新组装在霰弹枪定序法测序过程中被打散的DNA序列，从蛋白质的氨基酸序列预测蛋白质结构，利用mRNA微阵列或质谱仪的数据检验基因调控的假说。某些人将计算生物学作为生物信息学的同义词处理；但是另外一些人认为计算生物学和生物信息学应当被当作不同的条目处理，因为生物信息学更侧重於生物学领域中计算方法的使用和发展，而计算生物学强调应用信息学技术对生物学领域中的假说进行检验，并尝试发展新的理论。生物信息学可以定义为对分子生物学中两类信息流的研究： 第一类信息流源于分子生物学的中心法则：DNA序列被转录为mRNA序列，后者被翻译为蛋白质序列。蛋白质序列继而折叠为具功能的三维结构。按照达尔文演化理论，这些功能被生物体的环境所选择，从而驱动群体中DNA序列的进化。因此，第一类的生物信息学应用关注于中心法则中任一阶段的信息传递，包括DNA序列中基因的组织与控制、确定DNA中的转录单位、从序列预测蛋白质结构以及分子功能分析。第二类信息流是基于科学方法：提出关于生物学活动的假设，设计实验以验证这些假设，评估结果与假设的相容性，然后根据实验数据对原假设作扩展或修正。第二类的生物信息学应用关注于这一流程中的信息传递，包括产生假设、设计实验、通过数据库将实验结果组织起来、检验数据与模型的相容性以及修正假设的各个系统。　迈克尔·沃特曼（又译：麦克·沃特曼）（Michael Waterman）教授率先将数学和计算方法引入生物学研究，在生物信息领域有许多开创性的贡献，被誉为“生物信息学之父”。麦克·沃特曼教授是计算生物学奠基人之一，是国际计算生物学领域的重要领军人物。他致力于将数学、统计、计算机科学应用于各种分子生物学问题中，开辟了多个重要研究方向。他与Temple Smith发展的Smith-Waterman算法奠定了生物信息学算法的基础，他与Eric Lander发展的生物序列映射数学模型成为人类基因组计划的重要理论基石，同时，他的工作在数学界和计算机领域也有着广泛和深远的影响。2008年起，沃特曼教授受聘为中華人民共和合國清华大学讲席教授，领导由多位海外杰出科学家组成的中國清华大学生物信息学与系统生物学讲席教授组，为中國清华大学乃至中国的生物信息学学科发展作出了突出贡献。2013年获得中华人民共和国友谊奖。</zh-speak>
    </Feature>
    <Feature data="Lisp (programming language)" zh-data="LISP" id="391" uri="http://dbpedia.org/resource/Lisp_(programming_language)">
      <neighbors>
        <neighbor dest="709" relationship="influenced" weight="0"/>
        <neighbor dest="719" relationship="dialects" weight="0"/>
        <neighbor dest="720" relationship="dialects" weight="0"/>
        <neighbor dest="721" relationship="dialects" weight="0"/>
        <neighbor dest="741" relationship="influenced" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="784" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="788" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="794" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="801" relationship="influenced" weight="0"/>
        <neighbor dest="829" relationship="influenced" weight="0"/>
        <neighbor dest="832" relationship="influenced" weight="0"/>
        <neighbor dest="833" relationship="influenced" weight="0"/>
        <neighbor dest="898" relationship="dialects" weight="0"/>
        <neighbor dest="902" relationship="influenced" weight="0"/>
        <neighbor dest="920" relationship="dialects" weight="0"/>
      </neighbors>
      <speak>Lisp .</speak>
      <zh-speak>Lisp，最初被拼為LISP，一個歷史悠久的電腦程式語言家族，以波兰表示法編寫。最早由约翰·麦卡锡在1958年基于λ演算创造，是歷史第二悠久的高级语言，僅次於Fortran。也是第一個函数式编程语言。其名稱源自列表处理器（英语：List Processor）的縮寫。LISP有很多种方言，各个实现中的语言不完全一样。LISP语言的主要现代版本包括Common Lisp, Scheme以及Clojure。1980年代蓋伊·史提爾二世编写了Common Lisp试图进行标准化，这个标准被大多数解释器和编译器所接受。还有一种是編輯器Emacs所衍生出來的Emacs Lisp（而Emacs正是用Lisp作为扩展语言进行功能扩展的）非常流行，并建立了自己的标准。</zh-speak>
    </Feature>
    <Feature data="Scientific workflow system" zh-data="" id="392" uri="http://dbpedia.org/resource/Scientific_workflow_system">
      <neighbors/>
      <speak>A scientific workflow system is a specialized form of a workflow management system designed specifically to compose and execute a series of computational or data manipulation steps, or workflow, in a scientific application.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Unix-like" zh-data="" id="393" uri="http://dbpedia.org/resource/Unix-like">
      <neighbors/>
      <speak>A Unix-like .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="DC Comics" zh-data="DC漫畫" id="394" uri="http://dbpedia.org/resource/DC_Comics">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>DC Comics, Inc. is an American comic book publisher.</speak>
      <zh-speak>DC漫畫（英語：DC Comics），是美國的一家漫畫出版公司，在漫畫書及相關媒體是市場經營規模最大、最成功的公司之一。它的出版單位是DC娛樂、華納兄弟娛樂公司，而它本身則為時代華納旗下。DC漫畫公司旗下擁有超人、蝙蝠俠、神奇女俠、閃電俠、綠燈俠、水行俠 、鷹俠、鷹女俠、綠箭俠、黑金絲雀、火星獵人，甚至是閃靈俠等超級英雄，相關的也同時擁有雷克斯·路瑟、小丑、達克賽德、謎天大聖、貓女、布萊尼亞克和企鵝人等超級反派，可謂聲名煊赫，人丁興旺。「DC」這兩個首字母即來自於公司出版的最受歡迎的漫畫《偵探漫畫》（Detective Comics）的縮寫，而偵探漫畫即為《蝙蝠俠》的處子秀，隨後成為了公司的名字 。DC漫畫公司總部位於紐約州紐約市曼哈頓中城1700 Broadway大廈。DC漫畫書經蘭登書屋發行至書局市場而由鑽石漫畫發行公司提供的直接市場（Direct Market）來販售。2003年到2004年DC漫畫和漫威漫畫合作出了《JLA/復仇者》這個刊物，是正義聯盟和復仇者的合作產物。2008年，DC漫畫與其長期主要對手漫威漫畫合佔超過80%的美國漫畫市場。2011年，DC漫畫推出The New 52出版計劃，將全部的超級英雄漫畫連載序號歸零，並在2011年09月推出52本序號為#1期的連載超級英雄漫畫作品。</zh-speak>
    </Feature>
    <Feature data="Dan Jurgens" zh-data="" id="395" uri="http://dbpedia.org/resource/Dan_Jurgens">
      <neighbors/>
      <speak>Dan Jurgens , particularly during "The Death of Superman" storyline.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Booster Gold" zh-data="黄金后援" id="396" uri="http://dbpedia.org/resource/Booster_Gold">
      <neighbors>
        <neighbor dest="394" relationship="publisher" weight="0"/>
        <neighbor dest="395" relationship="creator" weight="0"/>
        <neighbor dest="317" relationship="partners" weight="0"/>
      </neighbors>
      <speak>Booster Gold is a fictional character, a DC Comics superhero created by Dan Jurgens.</speak>
      <zh-speak>黄金后援（英语：Booster Gold）是一个由DC漫画公司创造的超级英雄。创造者為丹·杰金斯，他首次出现在《黄金后援（第一卷）#1》（1986年），并成为正义联盟的成员，DC漫画全明星战队的英雄。该人物最初被设计为来自未来的探险者，有着历史知识和未来技术，比较高调的一个英雄。随着情节的发展，由于他个人的悲剧，他成为了一个为人低调却名气不小的英雄。</zh-speak>
    </Feature>
    <Feature data="Waverider (comics)" zh-data="" id="397" uri="http://dbpedia.org/resource/Waverider_(comics)">
      <neighbors>
        <neighbor dest="394" relationship="publisher" weight="0"/>
        <neighbor dest="395" relationship="creators" weight="0"/>
      </neighbors>
      <speak>Waverider  and was created by Archie Goodwin and Dan Jurgens.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Booster Gold (comic book)" zh-data="" id="398" uri="http://dbpedia.org/resource/Booster_Gold_(comic_book)">
      <neighbors>
        <neighbor dest="394" relationship="publisher" weight="0"/>
        <neighbor dest="395" relationship="creators" weight="0"/>
        <neighbor dest="396" relationship="main char team" weight="0"/>
        <neighbor dest="317" relationship="main char team" weight="0"/>
      </neighbors>
      <speak>Booster Gold was an ongoing monthly DC Comics comic book series featuring the eponymous superhero Booster Gold, created by Dan Jurgens.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Tetris" zh-data="俄羅斯方塊" id="399" uri="http://dbpedia.org/resource/Tetris">
      <neighbors/>
      <speak>Tetris , to coincide with the franchise's 30th anniversary.</speak>
      <zh-speak>《俄羅斯方塊》（俄语：Тетрис，羅馬字：Tetris）, 是1980年末期至1990年代初期風靡全世界的電腦遊戲，是落下型益智遊戲的始祖，為蘇聯首個在美國發佈的娛樂軟件。此遊戲最初是由阿列克謝·帕基特諾夫在蘇聯設計和編程，於1984年6月6日首次發佈，當時帕基特諾夫正在蘇聯科學院電算中心工作。此遊戲的名稱源自希臘數字前綴「tetra-」和帕基特諾夫最喜歡的運動「tennis」（網球）。此遊戲和其續作可於幾乎所有電子遊戲機和電腦作業系統上遊玩，亦可於图形计算器、手提電話、可攜式媒體播放器、個人數碼助理、互聯網無線電設備上遊玩，甚至能以彩蛋的形式在非媒體產品上遊玩，如示波器。此遊戲甚至啟發了《俄羅斯方塊》餐具。甚至在大楼外墙实现了相应的模式。於1980年代，此遊戲除了成為一個熱門的家用电脑和街機遊戲外，還成為Game Boy史上最受歡迎的遊戲之一。《電子遊戲月刊》在2007年將此遊戲列為「最偉大的100個遊戲」中的第1位，並獲IGN列為「最偉大的100個遊戲」中的第2位。截至2009年，此遊戲已售出逾7000萬套遊戲。於2010年1月，此遊戲於手提電話上已售出逾1億套遊戲。</zh-speak>
    </Feature>
    <Feature data="Mobile application development" zh-data="" id="400" uri="http://dbpedia.org/resource/Mobile_application_development">
      <neighbors/>
      <speak>Mobile application development  by which application software is developed for handheld devices, such as personal digital assistants, enterprise digital assistants or mobile phones.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="North Hills, Los Angeles" zh-data="" id="401" uri="http://dbpedia.org/resource/North_Hills,_Los_Angeles">
      <neighbors>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="126" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
      </neighbors>
      <speak>North Hills is a community in the north-central San Fernando Valley, and within the City of Los Angeles, California.North Hills was originally an agricultural community known as Mission Acres.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Cyberspace" zh-data="信息空间" id="402" uri="http://dbpedia.org/resource/Cyberspace">
      <neighbors/>
      <speak>Cyberspace is "the notional environment in which communication over computer networks occurs." During this period, the uses of the internet, networking, and digital communication were all growing dramatically and the term "cyberspace" was able to represent the many new ideas and phenomena that were emerging.The parent term of cyberspace is "cybernetics", derived from the Ancient Greek κυβερνήτης , a word introduced by Norbert Wiener for his pioneering work in electronic communication and control science.As a social experience, individuals can interact, exchange ideas, share information, provide social support, conduct business, direct actions, create artistic media, play games, engage in political discussion, and so on, using this global network.</speak>
      <zh-speak>赛博空间（Cyberspace），又譯信息空间、網絡空間、電子世界、网络世界等，是哲学和计算机领域中的一个抽象概念，指在计算机以及计算机网络里的虚拟现实。赛博空间一词是控制论（cybernetics）和空间（space）两个词的组合，是由居住在加拿大的科幻小说作家威廉·吉布森在1982年发表于omni杂志的短篇小说—《融化的铬合金》（Burning Chrome）中首次创造出来，并在后来的小说《神经漫游者》中被普及。</zh-speak>
    </Feature>
    <Feature data="Oberheim Electronics" zh-data="" id="403" uri="http://dbpedia.org/resource/Oberheim_Electronics">
      <neighbors>
        <neighbor dest="378" relationship="product" weight="0"/>
        <neighbor dest="423" relationship="product" weight="0"/>
        <neighbor dest="424" relationship="location" weight="0"/>
        <neighbor dest="425" relationship="Caption" weight="0"/>
        <neighbor dest="426" relationship="Caption" weight="0"/>
        <neighbor dest="427" relationship="product" weight="0"/>
        <neighbor dest="428" relationship="Caption" weight="0"/>
        <neighbor dest="429" relationship="Caption" weight="0"/>
        <neighbor dest="430" relationship="key person" weight="0"/>
      </neighbors>
      <speak>Oberheim Electronics is an American company, founded in 1969 by Tom Oberheim , which manufactures audio synthesizers and a variety of other electronic musical instruments.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Leah Jamieson" zh-data="" id="404" uri="http://dbpedia.org/resource/Leah_Jamieson">
      <neighbors>
        <neighbor dest="378" relationship="field" weight="0"/>
        <neighbor dest="79" relationship="residence" weight="0"/>
        <neighbor dest="436" relationship="birth place" weight="0"/>
        <neighbor dest="437" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="439" relationship="alma mater" weight="0"/>
        <neighbor dest="440" relationship="work institution" weight="0"/>
        <neighbor dest="441" relationship="award" weight="0"/>
        <neighbor dest="442" relationship="award" weight="0"/>
        <neighbor dest="443" relationship="award" weight="0"/>
      </neighbors>
      <speak>Leah H. Jamieson , a multi-university engineering design program that operates in a service-learning context.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Venkat Chandrasekaran" zh-data="" id="405" uri="http://dbpedia.org/resource/Venkat_Chandrasekaran">
      <neighbors>
        <neighbor dest="378" relationship="known for" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="445" relationship="known for" weight="0"/>
        <neighbor dest="446" relationship="workplaces" weight="0"/>
        <neighbor dest="447" relationship="alma mater" weight="0"/>
        <neighbor dest="448" relationship="field" weight="0"/>
        <neighbor dest="449" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Venkat Chandrasekaran is an Assistant Professor in the Computing and Mathematical Sciences Department at the California Institute of Technology.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="William L. Melvin" zh-data="" id="406" uri="http://dbpedia.org/resource/William_L._Melvin">
      <neighbors>
        <neighbor dest="378" relationship="field" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="450" relationship="award" weight="0"/>
        <neighbor dest="451" relationship="alma mater" weight="0"/>
        <neighbor dest="452" relationship="field" weight="0"/>
        <neighbor dest="453" relationship="work institution" weight="0"/>
        <neighbor dest="454" relationship="work institution" weight="0"/>
      </neighbors>
      <speak>William L. "Bill" Melvin is the deputy director of Sensors and Intelligent Systems at the Georgia Tech Research Institute.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Fsc2" zh-data="" id="407" uri="http://dbpedia.org/resource/Fsc2">
      <neighbors>
        <neighbor dest="378" relationship="genre" weight="0"/>
        <neighbor dest="456" relationship="genre" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="459" relationship="genre" weight="0"/>
        <neighbor dest="460" relationship="genre" weight="0"/>
      </neighbors>
      <speak>fsc2 is a program running under GNU/Linux for controlling spectrometers.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Peter Balazs (mathematician)" zh-data="" id="408" uri="http://dbpedia.org/resource/Peter_Balazs_(mathematician)">
      <neighbors>
        <neighbor dest="378" relationship="field" weight="0"/>
        <neighbor dest="388" relationship="nationality" weight="0"/>
        <neighbor dest="461" relationship="residence" weight="0"/>
        <neighbor dest="462" relationship="field" weight="0"/>
        <neighbor dest="463" relationship="award" weight="0"/>
        <neighbor dest="464" relationship="field" weight="0"/>
        <neighbor dest="465" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="466" relationship="alma mater" weight="0"/>
        <neighbor dest="467" relationship="workplaces" weight="0"/>
        <neighbor dest="468" relationship="workplaces" weight="0"/>
        <neighbor dest="469" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>Peter Balazs  Peter Balazs 2011 was honored with the high reputed Start-Preis.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Synthesizers.com" zh-data="" id="409" uri="http://dbpedia.org/resource/Synthesizers.com">
      <neighbors>
        <neighbor dest="378" relationship="product" weight="0"/>
        <neighbor dest="470" relationship="product" weight="0"/>
        <neighbor dest="471" relationship="location" weight="0"/>
      </neighbors>
      <speak>Synthesizers.com is an American company based in Tyler, Texas,founded by engineer Roger Arrick , which manufactures analog modular synthesizers for music and sound-effect creation.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Babak Hassibi" zh-data="" id="410" uri="http://dbpedia.org/resource/Babak_Hassibi">
      <neighbors>
        <neighbor dest="378" relationship="field" weight="0"/>
        <neighbor dest="77" relationship="work institution" weight="0"/>
        <neighbor dest="79" relationship="residence" weight="0"/>
        <neighbor dest="446" relationship="work institution" weight="0"/>
        <neighbor dest="472" relationship="work institution" weight="0"/>
        <neighbor dest="473" relationship="field" weight="0"/>
        <neighbor dest="474" relationship="field" weight="0"/>
        <neighbor dest="475" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="476" relationship="alma mater" weight="0"/>
        <neighbor dest="477" relationship="field" weight="0"/>
        <neighbor dest="478" relationship="award" weight="0"/>
        <neighbor dest="479" relationship="award" weight="0"/>
        <neighbor dest="480" relationship="nationality" weight="0"/>
      </neighbors>
      <speak>Babak Hassibi , the 2003 David and Lucille Packard Fellowship for Science and Engineering,  the Okawa Foundation Research Grant in Information Sciences in 2002 and the National Science Foundation Career Award in 2002. He has co-authored 2 books, 18 book chapters, over 300 peer-reviewed journal and conference papers, and 13 US Patents.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Lon Pringle" zh-data="" id="411" uri="http://dbpedia.org/resource/Lon_Pringle">
      <neighbors>
        <neighbor dest="378" relationship="field" weight="0"/>
        <neighbor dest="79" relationship="citizenship" weight="0"/>
        <neighbor dest="452" relationship="field" weight="0"/>
        <neighbor dest="454" relationship="work institution" weight="0"/>
        <neighbor dest="481" relationship="alma mater" weight="0"/>
        <neighbor dest="482" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Lon N. Pringle is the deputy director for research at the Georgia Tech Research Institute . He was the director of GTRI's Signature Technology Laboratory from 2008 to October 2013.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Stage Accompany" zh-data="" id="412" uri="http://dbpedia.org/resource/Stage_Accompany">
      <neighbors>
        <neighbor dest="378" relationship="product" weight="0"/>
        <neighbor dest="483" relationship="product" weight="0"/>
        <neighbor dest="484" relationship="product" weight="0"/>
        <neighbor dest="485" relationship="location city" weight="0"/>
        <neighbor dest="486" relationship="państwo" weight="0"/>
        <neighbor dest="487" relationship="industry" weight="0"/>
      </neighbors>
      <speak>Stage Accompany BV is a  Dutch audio electronics company currently owned by Job Rijsdijk.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Moog Music" zh-data="" id="413" uri="http://dbpedia.org/resource/Moog_Music">
      <neighbors>
        <neighbor dest="378" relationship="product" weight="0"/>
        <neighbor dest="488" relationship="product" weight="0"/>
        <neighbor dest="489" relationship="key person" weight="0"/>
        <neighbor dest="490" relationship="location" weight="0"/>
        <neighbor dest="491" relationship="product" weight="0"/>
        <neighbor dest="492" relationship="location" weight="0"/>
      </neighbors>
      <speak>Moog Music is an American company based in Asheville, North Carolina which manufactures electronic musical instruments.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="LabWindows/CVI" zh-data="" id="414" uri="http://dbpedia.org/resource/LabWindows/CVI">
      <neighbors>
        <neighbor dest="378" relationship="genre" weight="0"/>
        <neighbor dest="456" relationship="genre" weight="0"/>
        <neighbor dest="459" relationship="genre" weight="0"/>
        <neighbor dest="460" relationship="genre" weight="0"/>
        <neighbor dest="496" relationship="developer" weight="0"/>
      </neighbors>
      <speak>LabWindows/CVI  is 2013 SP2.LabWindows/CVI uses the same libraries and data acquisition modules as the better known National Instrument product LabVIEW, and is thus highly compatible with it.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Lee Swindlehurst" zh-data="" id="415" uri="http://dbpedia.org/resource/Lee_Swindlehurst">
      <neighbors>
        <neighbor dest="378" relationship="field" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="475" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="497" relationship="alma mater" weight="0"/>
        <neighbor dest="498" relationship="award" weight="0"/>
        <neighbor dest="499" relationship="birth place" weight="0"/>
        <neighbor dest="500" relationship="award" weight="0"/>
      </neighbors>
      <speak>Lee Swindlehurst  is an electrical engineer who has made contributions in sensor array signal processing for radar and wireless communications, detection and estimation theory, and system identification, and has received many awards in these areas.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Boundaries of Security Report" zh-data="" id="416" uri="http://dbpedia.org/resource/Boundaries_of_Security_Report">
      <neighbors>
        <neighbor dest="378" relationship="discipline" weight="0"/>
        <neighbor dest="501" relationship="discipline" weight="0"/>
      </neighbors>
      <speak>The Boundaries of Security Report is an annual perimeter security report accessible to a wide range of professional security consultants, integrators and professionals in both the public and private sectors.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="NU-Tech" zh-data="" id="417" uri="http://dbpedia.org/resource/NU-Tech">
      <neighbors>
        <neighbor dest="378" relationship="genre" weight="0"/>
        <neighbor dest="456" relationship="genre" weight="0"/>
        <neighbor dest="574" relationship="genre" weight="0"/>
      </neighbors>
      <speak>NU-Tech is a digital signal processing .The developer chooses, by code, whether to "expose" some NUTSs' internal variables on this window, in order to control his plug-in.NU-Tech can connect to the external world by means of interchangeable drivers.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="William Sethares" zh-data="" id="418" uri="http://dbpedia.org/resource/William_Sethares">
      <neighbors>
        <neighbor dest="378" relationship="field" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="532" relationship="birth place" weight="0"/>
        <neighbor dest="569" relationship="alma mater" weight="0"/>
        <neighbor dest="748" relationship="work institution" weight="0"/>
      </neighbors>
      <speak>William A. Sethares  is an American music theorist and professor of electrical engineering at the University of Wisconsin.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Fairchild Semiconductor" zh-data="快捷半導體公司" id="419" uri="http://dbpedia.org/resource/Fairchild_Semiconductor">
      <neighbors>
        <neighbor dest="378" relationship="product" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
      </neighbors>
      <speak>Fairchild Semiconductor International, Inc.  is an American semiconductor company based in San Jose, California.</speak>
      <zh-speak>快捷半導體公司（英语：Fairchild Semiconductor）俗称“仙童半导体”，是美國的一家半導體設計與製造公司，目前總部設在緬因州南波特蘭。曾經開發了世界上第一款商用集成電路（略微領先於德州儀器公司）。當前半導體行業的重要公司英特爾、AMD等的創始人都來自此公司。快捷半導體公司在矽谷的發展史上佔有重要的位置。</zh-speak>
    </Feature>
    <Feature data="LabVIEW" zh-data="LabVIEW" id="420" uri="http://dbpedia.org/resource/LabVIEW">
      <neighbors>
        <neighbor dest="378" relationship="genre" weight="0"/>
        <neighbor dest="456" relationship="genre" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="459" relationship="genre" weight="0"/>
        <neighbor dest="460" relationship="genre" weight="0"/>
        <neighbor dest="496" relationship="developer" weight="0"/>
        <neighbor dest="574" relationship="genre" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>LabVIEW . Originally released for the Apple Macintosh in 1986, LabVIEW is commonly used for data acquisition, instrument control, and industrial automation on a variety of platforms including Microsoft Windows, various versions of UNIX, Linux, and Mac OS X. The latest version of LabVIEW is LabVIEW 2014, released in August 2014.</speak>
      <zh-speak>LabVIEW（Laboratory Virtual Instrumentation Engineering Workbench，实验室虚拟仪器工程平台）是由美國國家儀器公司所開發的圖形化程式編譯平台，發明者為傑夫·考度斯基（Jeff Kodosky），程式最初於1986年在蘋果電腦上發表。LabVIEW早期是為了儀器自動控制所設計，至今轉變成為一種逐漸成熟的高階程式語言。圖形化程式與傳統程式語言之不同點在於程式流程採用"資料流"之概念打破傳統之思維模式，使得程式設計者在流程圖構思完畢的同時也完成了程式的撰寫。LabVIEW率先引入了特別的虛擬儀表的概念，使用者可透過人機介面直接控制自行開發之儀器。此外LabVIEW提供的函式庫包含：訊號擷取、訊號分析、機器視覺、數值運算、邏輯運算、聲音震動分析、資料儲存...等。目前可支援Windows，UNIX，Linux，Mac OS等作業系統。由於LabVIEW特殊的圖形程式簡單易懂的開發介面，縮短了開發原型的速度以及方便日後的軟體維護，因此逐漸受到系統開發及研究人員的喜愛。目前廣泛的被應用於工業自動化之領域上。LabVIEW預設以 多线程執行程式，對於程式設計者更是一大利器。此外LabVIEW通訊介面方面支援：GPIB，USB，IEEE1394，MODBUS，串列埠，並行埠，IrDA，TCP，UDP，Bluetooth，.NET，ActiveX，SMTP...等介面。</zh-speak>
    </Feature>
    <Feature data="EURASIP Journal on Advances in Signal Processing" zh-data="" id="421" uri="http://dbpedia.org/resource/EURASIP_Journal_on_Advances_in_Signal_Processing">
      <neighbors>
        <neighbor dest="378" relationship="academic discipline" weight="0"/>
        <neighbor dest="385" relationship="academic discipline" weight="0"/>
        <neighbor dest="539" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>EURASIP Journal on Advances in Signal Processing is a peer-reviewed open access scientific journal covering theoretical and practical aspects of signal processing in new and emerging technologies.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Raj Senani" zh-data="" id="422" uri="http://dbpedia.org/resource/Raj_Senani">
      <neighbors>
        <neighbor dest="378" relationship="known for" weight="0"/>
        <neighbor dest="450" relationship="award" weight="0"/>
      </neighbors>
      <speak>Professor Raj Senani  during October 2008-December, 2014.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Drum machine" zh-data="" id="423" uri="http://dbpedia.org/resource/Drum_machine">
      <neighbors/>
      <speak>For the early "drum machine" computers that used a rotating cylinder as their main memory, see drum memoryA drum machine is an electronic musical instrument designed to imitate the sound of drums or other percussion instruments.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Oakland, California" zh-data="奥克兰 (加利福尼亚州)" id="424" uri="http://dbpedia.org/resource/Oakland,_California">
      <neighbors>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="383" relationship="West" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
        <neighbor dest="153" relationship="leader title" weight="0"/>
        <neighbor dest="602" relationship="North" weight="0"/>
      </neighbors>
      <speak>Oakland /ˈoʊklənd/ is a major West Coast port city in the U.S. state of California.</speak>
      <zh-speak>奧克蘭（當地華人亦譯作屋崙），英語意為“橡樹之地”，俗稱「奧克城（Oaktown）」是位於美國加利福尼亞州北部舊金山灣沿岸的主要城市，也是阿拉米達縣縣治所在。奧克蘭和柏克萊位於舊金山灣區東邊，此區域也稱為「東灣」。奧克蘭建於1852年，早期居民為在舊金山上班的藍領階級。它的北方是著名柏克萊加州大學所在地；舊金山-奥克蘭海灣大橋連接的舊金山位於其西邊；西南方有阿拉米達島，南邊以聖利安卓為鄰。奧克蘭行政區內還有一個富裕的獨立城鎮彼蒙特（Piedmont）。根據美國人口調查局2006年统計，奧克蘭市是舊金山灣區僅次於舊金山和聖荷西的第三大城市，共有人口415,492人。2008年國會調查報告顯示奧克蘭在全美最危險的城市中排行第五，在加州所有城市中，與北邊的列治文、南加州的坎普敦並駕齊驅。奧克蘭港是美國西海岸三大主要商港之一。奧克蘭國際機場是廉價航空公司（主要是西南航空和捷藍航空）旅客往來舊金山地區的主要門户。奧克蘭也是北加州火車運輸中心，貨運經奧克蘭港卸貨後由火車運往美西各地。由於奧克蘭地價和消費比鄰近舊金山便宜，許多企業總公司坐落於此，如全美最大的連鎖凱薩醫院，ASK.COM、CLOROX 漂白水，醉爾斯冰淇淋、哈根達斯冰淇淋、COST PLUS世界精品店、潘朵拉線上音樂、旅遊書出版社寂寞星球。</zh-speak>
    </Feature>
    <Feature data="Oberheim Xpander" zh-data="" id="425" uri="http://dbpedia.org/resource/Oberheim_Xpander">
      <neighbors>
        <neighbor dest="403" relationship="synth manufacturer" weight="0"/>
      </neighbors>
      <speak>The Oberheim Xpander was an analog synthesizer launched by Oberheim in 1984 and discontinued in 1988. It is essentially a keyboardless, six-voice version of the Matrix-12  with the flexibility of digital controls logic.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Oberheim Matrix synthesizers" zh-data="" id="426" uri="http://dbpedia.org/resource/Oberheim_Matrix_synthesizers">
      <neighbors/>
      <speak>Oberheim Matrix synthesizers are a historic product line of analog synthesizers from Oberheim featuring a method of synthesis which Oberheim called "Matrix Modulation" as a method of defining preset and user patches.While the Matrix-12  are based on CEM Oscillators, the two models Matrix-6 and Matrix-1000 are notable for their implementation of DCOs, which maintain a completely analog sound but are controlled by digital circuitry, making them much more stable.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Synthesizer" zh-data="合成器" id="427" uri="http://dbpedia.org/resource/Synthesizer">
      <neighbors/>
      <speak>A sound synthesizer , and granular synthesis, sample-based synthesis based on grains of sound, generally resulting in soundscapes or clouds.</speak>
      <zh-speak>合成器是一種以加法合成、減法合成、FM、physical modelling或相位調變等電子技術發聲之電子樂器。合成器有三種發聲方式：直接改變電壓（如類比合成器）。利用電腦做數學運算（如軟體合成器）綜合以上二種，最後會產生電壓訊號會使揚聲器或耳機之薄膜振動。合成器所發之聲音和錄音設備裡的自然聲音（natural sound）不同，錄音（recording）是將聲波的機械能（mechanical energy）轉換為訊號，並且可以經由播放（playback）把訊息轉回機械能（雖然取樣技術會導致失真）。合成器通常是以鍵盤做為操控介面，並且常常被當作一種鍵盤樂器。但是其實合成器之操控介面並不一定是鍵盤，如fingerboard synthesizer、ribbon controlled synthesizers...等，甚至不必為人所控制。(詳見音源器）語音合成也常使用於語音訊號處理，和vocoder有關。</zh-speak>
    </Feature>
    <Feature data="Oberheim OB-8" zh-data="" id="428" uri="http://dbpedia.org/resource/Oberheim_OB-8">
      <neighbors>
        <neighbor dest="403" relationship="synth manufacturer" weight="0"/>
      </neighbors>
      <speak>The Oberheim OB-8 is a subtractive analog synthesizer launched by Oberheim in early 1983 and discontinued in 1985. It belongs to the OB-X product line of polyphonic compacts synthesizers and is successor to the OB-Xa. The number of production was about 3,000 units.The OB-8 features eight-voice polyphony, two-part multi-timbrality, a 61-note processor-controlled piano keyboard, sophisticated programmable LFO and envelope modulation, two-pole and four-pole filters, arpeggiator, external cassette storage, MIDI capability and 120 memory patches, 24 bi-timbral patches, and used the Z80 CPU. Musician's interface also consists of two pages of front panel programmable controls, left panel performance controls and a set of foot pedals and switches.Artists who have used the OB-8 include Boys Noize, Ou Est Le Swimming Pool, Prince, Queen, Van Halen, Depeche Mode, The War on Drugs, Styx, Kool &amp; The Gang, Jimmy Jam and Terry Lewis, Clarence Jey, The Police, Silent Running, The KLF, Future Sound of London, Barnes &amp; Barnes and Nik Kershaw.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Oberheim OB-X" zh-data="" id="429" uri="http://dbpedia.org/resource/Oberheim_OB-X">
      <neighbors>
        <neighbor dest="403" relationship="synth manufacturer" weight="0"/>
      </neighbors>
      <speak>The Oberheim OB-X is an analog polyphonic sound synthesizer.First commercially available in  June 1979, it was introduced to compete with the Sequential Circuits Prophet-5, which had been successfully introduced the year before.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Tom Oberheim" zh-data="" id="430" uri="http://dbpedia.org/resource/Tom_Oberheim">
      <neighbors/>
      <speak>Thomas Elroy Oberheim , known as Tom Oberheim, is an audio engineer best known for designing effects processors, analog synthesizers, sequencers, and drum machines.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Solitaire (musician)" zh-data="" id="431" uri="http://dbpedia.org/resource/Solitaire_(musician)">
      <neighbors>
        <neighbor dest="423" relationship="instrument" weight="0"/>
        <neighbor dest="403" relationship="notable instruments" weight="0"/>
      </neighbors>
      <speak>Solitaire from Baltimore, Maryland was a one-man project with pioneering live-electronics created by James L. Callahan; who performed, wrote  and recorded  solo synth-pop music between 1983 and 1986.   James Callahan  was the first “truly computerized” artist in the Baltimore area.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Anne DeMarinis" zh-data="" id="432" uri="http://dbpedia.org/resource/Anne_DeMarinis">
      <neighbors>
        <neighbor dest="403" relationship="instrument" weight="0"/>
        <neighbor dest="427" relationship="instrument" weight="0"/>
        <neighbor dest="488" relationship="instrument" weight="0"/>
      </neighbors>
      <speak>Anne DeMarinis is an American musician and artist.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Oberheim OB12" zh-data="" id="433" uri="http://dbpedia.org/resource/Oberheim_OB12">
      <neighbors>
        <neighbor dest="403" relationship="synth manufacturer" weight="0"/>
      </neighbors>
      <speak>The Oberheim OB•12 is a Virtual Analog synthesizer, designed and realised by the Italian musical instrument manufacturer Viscount, in production between 2000 and 2005.The synth used Oberheim brand name under license from Gibson, which bought Oberheim rights after the original company went out of business in 1987.The OB•12 was the second and last Oberheim synth in whose creation had not been involved original Oberheim company founder Tom Oberheim, the first one being the Oberheim OB-Mx.Despite a brilliant look, an advanced synthesis engine, numerous features, a great hands-on interface and a very particular sound, the instrument failed to gain musicians favour, mostly because of its "non-Oberheim Oberheim" status.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Vince Clarke" zh-data="" id="434" uri="http://dbpedia.org/resource/Vince_Clarke">
      <neighbors>
        <neighbor dest="403" relationship="instrument" weight="0"/>
      </neighbors>
      <speak>Vince Clarke  is an English synthpop musician and songwriter.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Oberheim OB-Xa" zh-data="" id="435" uri="http://dbpedia.org/resource/Oberheim_OB-Xa">
      <neighbors>
        <neighbor dest="403" relationship="synth manufacturer" weight="0"/>
      </neighbors>
      <speak>The Oberheim OB-Xa was Oberheim's overhaul of their first compact synthesizer, the OB-X.The OB-Xa was released in December 1980, a year after the OB-X was released.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Trenton, New Jersey" zh-data="特伦顿 (新泽西州)" id="436" uri="http://dbpedia.org/resource/Trenton,_New_Jersey">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
      </neighbors>
      <speak>Trenton is the capital city of the U.S. state of New Jersey and the county seat of Mercer County.</speak>
      <zh-speak>特倫頓（英语：Trenton, New Jersey）是新澤西州的州府、默瑟縣縣治。位於該州中部，西隔特拉華河與賓夕法尼亞州相望。根據2000年美國人口普查，人口為85,403 人。</zh-speak>
    </Feature>
    <Feature data="Kenneth Steiglitz" zh-data="" id="437" uri="http://dbpedia.org/resource/Kenneth_Steiglitz">
      <neighbors/>
      <speak>Dr. Kenneth "Ken" Steiglitz is a professor of computer science at Princeton University.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Massachusetts Institute of Technology" zh-data="麻省理工学院" id="438" uri="http://dbpedia.org/resource/Massachusetts_Institute_of_Technology">
      <neighbors>
        <neighbor dest="532" relationship="state" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>The Massachusetts Institute of Technology  along the northern bank of the Charles River basin.MIT, with five schools and one college which contain a total of 32 departments, is traditionally known for research and education in the physical sciences and engineering, and more recently in biology, economics, linguistics, and management as well.</speak>
      <zh-speak>麻省理工學院（英語：Massachusetts Institute of Technology，縮寫：MIT）是一所位於美国麻省（麻薩諸塞州）劍橋市的私立研究型大學。學院因響應美國的工業化而於1861年成立，並採用了歐洲理工大學的模式辦學。起初，其主要圍繞應用科技方面發展，故教學與工業領域密切相關，但後來在卡尔·泰勒·康普顿及万尼瓦尔·布什的帶領下，學校進行了課程改革並重新重視了基礎科學研究。此校後來在1934年成功獲選為美國大學協會的一員。麻省理工學院的學者也在二次世界大戰及冷戰期間，致力研究旋風計算機、雷達及慣性導航系統，為美國國家的高科技發展貢獻良多。麻省理工学院共有6所學院合計36個學術部門，從原本只有物理科學及工程學，發展到生物科學以至於經濟金融、管理學及語言學等領域。校方的吉祥物為海狸，代表動物界最擅於築水壩的工程師。 有81名諾貝爾得獎者、52名美國國家科學獎章獲獎人、45名羅德學者及38位麥克阿瑟獎得主現在或曾經在麻省理工學院學習或工作。因為很多校友都捐贈不少金錢回饋母校，麻省理工學院也有很大的資產。其在2012年共有約101億美元的總資金。家庭年收入低於$75,000美元的學生一律免學費，共有大約三成的學生得到此資助。另外，2011-2012麻省理工學院學生平均領到的獎學金為$32,917美元。</zh-speak>
    </Feature>
    <Feature data="Princeton University" zh-data="普林斯顿大学" id="439" uri="http://dbpedia.org/resource/Princeton_University">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Princeton University  is a private Ivy League research university in Princeton, New Jersey.</speak>
      <zh-speak>普林斯顿大学（英語：Princeton University），又译普林斯敦大学，常被直接称为普林斯顿，是一所位於美国新泽西州普林斯顿的私立研究型大学，现为八所常春藤盟校之一。普林斯顿历史悠久。它成立于1746年，是九所在美国革命前成立的殖民地学院之一，同时也是美国第四古老的高等教育机构。 其在1747年移至纽瓦克，最终在1756年搬到了现在的普林斯顿，并于1896年正式改名为“普林斯顿大学”。虽然其旧校名是“新泽西州学院”，但它与今天位于邻近的尤因镇（Ewing Township）的“新泽西州学院”没有任何关联。虽然它最初是长老制的教育机构，但学校从没有跟任何宗教机构有直接的联系， 而现在对学生亦无任何宗教上的要求。普林斯顿现提供各种有关人文、自然科学、社会科学及工程学的本科及研究生课程， 它并没有医学院、法学院、神学院及商学院，但能在政治及工程上提供专业课程。大学也与普林斯顿高等研究院及普林斯顿宗教学校有联谊。至今，已经有37名诺贝尔得奖者、17名美国国家科学奖章得主，7名菲尔兹奖得主，9名图灵奖得主，及3名美国国家人文奖章夺得人曾经或现为普林斯顿大学的毕业生或教职员。另外，普林斯顿也是获得最多捐款的学术机构之一。</zh-speak>
    </Feature>
    <Feature data="Purdue University" zh-data="普渡大學" id="440" uri="http://dbpedia.org/resource/Purdue_University">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Purdue University, located in West Lafayette, Indiana, is the flagship university of the six-campus Purdue University system.</speak>
      <zh-speak>普度大學（英語：Purdue University，或譯普渡大學），美国著名大学，以其严格的录取和教学闻名世界。普渡大学是擁有六個校區的州立大學系統，學生人數約四萬人，主校區位於美國中西部印第安納州西拉法葉。普度大學提供了超過210種的主修；最為人所知的是它的工學院；普度工學院提供了高競爭力的課程設計與具領先地位的系所，經常被認為是全球頂尖的工程學校之一，在此發展出了數項創新，包含Wiki、世界上首台全電子電視、機器人的控制與遠制技術等。商学院的MBA教学也有很高的性价比。美国新闻与世界报道排行中，普度工學院在2014年排行上為第9名，研究所為第8名;總體上，普度大學在美國公立學校中排第18名，所有大學中為62名。在US news上学术声誉排名为全美第32位，泰晤士报将其声誉列为世界前50名的大学之一。普度大學所在的西拉法葉橫跨Wabash河，是個純樸安靜的大學城。距全美第三大城芝加哥約100英里，車程二小時；距該州首府、全美第十二大城印第安納波利斯約65英里，車程約一小時；美國鐵路Amtrak每天都有列車經過此地前往芝加哥或是印第安納波利斯。普度大學成立於1869年5月6日，Morrill所提出的土地撥贈法案，聯邦政府按照眾議員的數目給各州撥地，而這些土地出售後的資金，用來建設以傳授農業和機械知識為主的大學。1865年，印第安那州政府收到拉法葉（Lafayette, IN）地區的商業領袖和慈善家約翰·普渡所捐贈的十五萬美元，包括Tippecanoe郡既有的五萬美元經費及由拉法葉居民提供的150畝土地，在1869年時在拉法葉市郊的這片土地上正式設立普渡大學。今日普度大學擁有3000名教師和四萬名學生；以學生人數而言，普度大學是印地安那州最大的大學，同時也是美國國際學生最多的大學之一。2011年時，普度大學國際學生共7934名，占該校學生近20%。根據国际教育协会統計，普度大學爲國際學生第二多的公立大學，在Big Ten中也為第二名，並在全美所有大學中排第4位。普度大學的Discovery Park與Purdue Research Park是數百家醫學、生物科技與奈米科技實驗室的所在地。普度提供大學部與研究所超過200種以上的主修。普度在美國的航空史上占有一席之地，該校建立了第一個提供了飛行訓練的學院、第一個四年制航空學士學位與第一個大學機場（普度大學機場）。在中20世紀，普度的航空系擴編並包含了了先進航太科技，這也使得普度有了"太空人的搖籃"的美名。目前的太空人有22名是普度校友，其中包含了维吉尔·格里森，尼爾·阿姆斯壯，和尤金·塞尔南。第23屆美國總統本杰明·哈里森在1895到1901為董事會成員，校園中的Harrison Hall以他為名。</zh-speak>
    </Feature>
    <Feature data="American Society for Engineering Education" zh-data="" id="441" uri="http://dbpedia.org/resource/American_Society_for_Engineering_Education">
      <neighbors/>
      <speak>The American Society for Engineering Education  is a non-profit member association, founded in 1893, dedicated to promoting and improving engineering and engineering technology education.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Anita Borg Institute Women of Vision Awards" zh-data="" id="442" uri="http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>The Anita Borg Institute Women of Vision Awards honor exceptional technical women.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Gordon Prize" zh-data="" id="443" uri="http://dbpedia.org/resource/Gordon_Prize">
      <neighbors/>
      <speak>The Bernard M. Gordon Prize was started in 2001 by the United States National Academy of Engineering.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Purdue University College of Engineering" zh-data="" id="444" uri="http://dbpedia.org/resource/Purdue_University_College_of_Engineering">
      <neighbors>
        <neighbor dest="404" relationship="dean" weight="0"/>
        <neighbor dest="440" relationship="affiliations" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>The Purdue University College of Engineering is one of eight major academic divisions, or colleges, of Purdue University.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mathematical optimization" zh-data="最优化" id="445" uri="http://dbpedia.org/resource/Mathematical_optimization">
      <neighbors/>
      <speak>In mathematics, computer science, economics, or management science, mathematical optimization , including a variety of different types of objective functions and different types of domains.</speak>
      <zh-speak>最优化，是应用数学的一个分支，主要研究以下形式的问题：</zh-speak>
    </Feature>
    <Feature data="California Institute of Technology" zh-data="加州理工學院" id="446" uri="http://dbpedia.org/resource/California_Institute_of_Technology">
      <neighbors>
        <neighbor dest="599" relationship="affiliation" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>The California Institute of Technology  .First year students are required to live on campus, and 95% of undergraduates remain in the on-campus house system.</speak>
      <zh-speak>加州理工學院（California Institute of Technology，縮寫：Caltech）是一所位於美國加利福尼亚州帕萨蒂纳的大學，創建於1891年。雖然加州理工學院的規模不大，但是它卻是全球最頂尖的大學之一。加州理工學院擁有33位校友或教授獲得34次諾貝爾獎，1位校友獲得菲爾茲獎（數學界的諾貝爾獎），70位校友獲得美國國家科學獎章或國家技術獎章，112位教授獲選為美國國家學院院士。英國的《泰晤士高等教育增刊》在2011-2012學年和2012-2013學年的評鑑中，都評加州理工學院為世界第一的大學。加州理工在《美國新聞與世界報道》 的全美大學排名中，也名列前十名。而在物理學、行星科學、地球科學領域，更被公認為全美第一。</zh-speak>
    </Feature>
    <Feature data="Rice University" zh-data="萊斯大學" id="447" uri="http://dbpedia.org/resource/Rice_University">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="577" relationship="city" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>William Marsh Rice University, commonly referred to as Rice University or Rice, is a private research university located on a 295-acre  in 2010.  Rice is a member of the Association of American Universities.Rice is noted for its entrepreneurial activity, and has been recognized as the top ranked business incubator in the world by the Stockholm-based UBI Index for both 2013 and 2014.The university is organized into eleven residential colleges and eight schools of academic study, including the Wiess School of Natural Sciences, the George R. Brown School of Engineering, the School of Social Sciences, and the School of Humanities.</speak>
      <zh-speak>莱斯大学 ( 威廉·马歇尔·莱斯大学于1912年开办，开办之初名为威廉·马歇尔·莱斯文学、科学与艺术发展学院)是座落于美国德克萨斯州休斯顿市的一所私立的研究型综合性大学。莱斯大学以其精英的本科学部著称，小而精致，同时有着优秀的应用科学和工程学研究生项目，是美国最著名的大学之一，素有南方哈佛之称。莱斯大学在材料科学、纳米科学、人工心脏研究、以及太空科學等领域占有世界领先的地位。</zh-speak>
    </Feature>
    <Feature data="Applied mathematics" zh-data="应用数学" id="448" uri="http://dbpedia.org/resource/Applied_mathematics">
      <neighbors/>
      <speak>Applied mathematics is a branch of mathematics that deals with mathematical methods that find use in science, engineering, business, computer science, and industry.</speak>
      <zh-speak>应用数学（英语：applied mathematics）是以应用为目的的明确的数学理论和方法的总称，研究如何應用數學知識到其他範疇（尤其是科學）的數學分支，可以說是純數學的相反，应用纯数学中的结论扩展到物理学等其他科学中，應用數學的發展是以科學為依據，做為科學研究的後盾。包括微分方程、向量分析、矩陣、拉普拉斯變換、傅里葉變換、複變分析、數值方法、概率论、数理统计、运筹学、博弈论、控制理论、组合数学、信息论等许多数学分支，也包括从各种应用领域中提出的数学问题的研究。而大部分應用數學是以作為物理分析的工具。计算数学有时也可视为应用数学的一部分。應用數學大部分的教學範疇都是以物理的模型為基礎進行分析，當中或許搭配了各種數學工具，就為了更貼近物理的系統。圖論應用在網絡分析，拓扑学在电路分析上的应用，群论在结晶学上的应用，微分几何在规范场上的应用，自动控制理论在计算上的应用，黎曼几何应用于相对论，数理逻辑应用于计算机，最小二乘法应用于飞机起降时自动控制，利用数字合成计算机辅助的X射线断层成像技术（1979年数学家获得诺贝尔医学奖，）數論應用在密码学，博弈論、概率論、統計學應用在經濟學，线性规划用于生产安排调度，都可見數學在不同範疇的應用。</zh-speak>
    </Feature>
    <Feature data="Machine learning" zh-data="机器学习" id="449" uri="http://dbpedia.org/resource/Machine_learning">
      <neighbors/>
      <speak>Machine learning is a scientific discipline that explores the construction and study of algorithms that can learn from data.</speak>
      <zh-speak>机器学习是近20多年兴起的一门多领域交叉学科，涉及概率论、统计学、逼近论、凸分析、算法复杂度理论等多门学科。机器学习理论主要是设计和分析一些让计算机可以自动“学习”的算法。机器学习算法是一类从数据中自动分析获得规律，并利用规律对未知数据进行预测的算法。因为学习算法中涉及了大量的统计学理论，机器学习与统计推断学联系尤为密切，也被称为统计学习理论。算法设计方面，机器学习理论关注可以实现的，行之有效的学习算法。很多推论问题属于无程序可循难度，所以部分的机器学习研究是开发容易处理的近似算法。机器学习已经有了十分广泛的应用，例如：数据挖掘、计算机视觉、自然语言处理、生物特征识别、搜索引擎、医学诊断、检测信用卡欺诈、证券市场分析、DNA序列测序、语音和手写识别、战略游戏和机器人运用。</zh-speak>
    </Feature>
    <Feature data="Institute of Electrical and Electronics Engineers" zh-data="电气电子工程师学会" id="450" uri="http://dbpedia.org/resource/Institute_of_Electrical_and_Electronics_Engineers">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
      </neighbors>
      <speak>The Institute of Electrical and Electronics Engineers  is a professional association with its corporate office in New York City and its operations center in Piscataway, New Jersey.</speak>
      <zh-speak>電機電子工程師學會（英语：Institute of Electrical and Electronics Engineers，簡稱為IEEE，英文读作“i triple e”[ai trɪpl i:]）是一个建立於1963年1月1日的国际性电子技术与电子工程师协会，亦是世界上最大的专业技术组织之一，擁有來自175個國家的36萬會員。除設立於美國紐約市的總部以外，亦在全球150多個國家擁有分會，並且還有35個專業學會及2個聯合會。其每年均會發表多種雜誌、學報、書籍，亦舉辦至少300次的專業會議。目前IEEE在工業界所定義的標準有著極大的影響。</zh-speak>
    </Feature>
    <Feature data="Lehigh University" zh-data="理海大學" id="451" uri="http://dbpedia.org/resource/Lehigh_University">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Lehigh University is an American private research university located in Bethlehem, Pennsylvania.</speak>
      <zh-speak>理海大学（Lehigh University，又称利哈伊大学或里海大学）是一所以工程科学著称的美国私立研究型大学，1865年由企业家艾萨·帕克（Asa Parker）创建，位于美国宾夕法尼亚州伯利恒（Bethlehem），伯利恒市最著名的的是伯利恒钢铁公司(1857 - 2003)，曾是美国第二大钢铁生产商，该公司的产品曾经被用来建造金门大桥和曼哈顿的高楼大厦。伯利恒钢铁公司同时也是世界上最大的一个造船公司之一，是美国最强大的工业生产的先驱和象征。自十九世纪建校以来，学校发展始终以工科为重点，其工程学在全美享誉盛名。至今，该校仍有50%的学生主修工程学科。该校被USNews选为一级国家级大学，被《纽约时报大学指南》给予四颗星学术评价。在2008年的《美国新闻与世界报导》（US News &amp; World Report）中里海大学全美综合排名为第31位，并被列为入学筛选度最高的大学之一（"Most Selective"）。根据华尔街日报的数据，在大学投资回报比（ROI）院校排名中，里海大学位于全美排名第12位。在福布斯排行榜排出的全美含金量最高的大学中，排名第24位。该校先后有680名教授及校友被授予诺贝尔奖，普利策奖，富布赖特奖学金，及成为美国艺术与科学院院士和美国国家科学院院士等殊荣。</zh-speak>
    </Feature>
    <Feature data="Radar" zh-data="雷达" id="452" uri="http://dbpedia.org/resource/Radar">
      <neighbors/>
      <speak>Radar is an object-detection system that uses radio waves to determine the range, altitude, direction, or speed of objects.</speak>
      <zh-speak>雷达（RADAR），是英文「Radio Detection and Ranging」（無線電偵測和定距）的縮寫及音譯。將電磁能量以定向方式發射至空間之中，藉由接收空間內存在物體所反射之電波，可以計算出該物體之方向，高度及速度，并且可以探测物体的形状。以地面为目标的雷达可以用于探测地面的精确形状。</zh-speak>
    </Feature>
    <Feature data="Rome Laboratory" zh-data="" id="453" uri="http://dbpedia.org/resource/Rome_Laboratory">
      <neighbors/>
      <speak>Rome Laboratory  is the US "Air Force 'superlab' for command, control, and communications" research and development and is responsible for planning and executing the USAF science and technology program.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Georgia Tech Research Institute" zh-data="" id="454" uri="http://dbpedia.org/resource/Georgia_Tech_Research_Institute">
      <neighbors>
        <neighbor dest="482" relationship="key person" weight="0"/>
      </neighbors>
      <speak>The Georgia Tech Research Institute  in April 1934.GTRI's research spans a variety of disciplines, including national defense, homeland security, public health, education, mobile and wireless technologies, and economic development.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="GTRI Sensors and Electromagnetic Applications Laboratory" zh-data="" id="455" uri="http://dbpedia.org/resource/GTRI_Sensors_and_Electromagnetic_Applications_Laboratory">
      <neighbors>
        <neighbor dest="452" relationship="industry" weight="0"/>
        <neighbor dest="406" relationship="key person" weight="0"/>
        <neighbor dest="454" relationship="parent company" weight="0"/>
      </neighbors>
      <speak>The Sensors and Electromagnetic Applications Laboratory  is one of eight labs in the Georgia Tech Research Institute and one of three labs under the Sensors and Intelligent Systems directorate.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Data acquisition" zh-data="" id="456" uri="http://dbpedia.org/resource/Data_acquisition">
      <neighbors/>
      <speak>Data acquisition is the process of sampling signals that measure real world physical conditions and converting the resulting samples into digital numeric values that can be manipulated by a computer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="GNU General Public License" zh-data="GNU通用公共许可证" id="457" uri="http://dbpedia.org/resource/GNU_General_Public_License">
      <neighbors/>
      <speak>The GNU General Public License  that were discovered during its long-time usage.</speak>
      <zh-speak>GNU通用公共授權條款（英语：GNU General Public License，縮寫：GNU GPL、GPL），是一個廣泛被使用的自由軟體授權條款，最初由理查德·斯托曼(Richard Matthrew Stallman)为GNU計劃而撰写。此许可证最新版本为“第3版”（v3），於2007年6月29日发布。GNU宽通用公共许可证是改自GPL的另一個版本，其目的是為了應用於一些軟體函式庫。GPL給予了電腦程式自由軟體的定義，並且使用Copyleft來確保程式的自由被完善的保留。</zh-speak>
    </Feature>
    <Feature data="Linux" zh-data="Linux" id="458" uri="http://dbpedia.org/resource/Linux">
      <neighbors>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="393" relationship="family" weight="0"/>
      </neighbors>
      <speak>Linux  is a Unix-like and mostly POSIX-compliant computer operating system assembled under the model of free and open-source software development and distribution.</speak>
      <zh-speak>Linux（英语发音：/ˈlɪnəks/ LIN-əks）是一種自由和開放源碼的類UNIX操作系統。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。，在加上使用者空間的應用程式之後，成為Linux作業系統。Linux也是自由软件和开放源代码软件发展中最著名的例子。只要遵循GNU通用公共许可证，任何个人和机构都可以自由地使用Linux的所有底层源代码，也可以自由地修改和再发布。大多數Linux系統還包括了像提供GUI界面的X Window之類的程序。除了一部分專家之外，大多數人都是直接使用Linux發行版，而不是自己選擇每一樣組件或自行設置。严格来讲，术语Linux只表示操作系统内核本身，但通常采用Linux内核来表达该意思。Linux则常用来指基于Linux内核的完整操作系统，包括GUI组件和许多其他实用工具。由于这些支持用户空间的系统工具和库主要由理查德·斯托曼于1983年发起的GNU计划提供，自由软件基金会提议将该组合系统命名为GNU/Linux，但Linux不屬於GNU計劃。Linux最初是作为支持英特尔x86架构的个人电脑的一个自由操作系统。目前Linux已经被移植到更多的计算机硬件平台，远远超出其他任何操作系统。Linux是一个领先的操作系统，可以运行在服务器和其他大型平台之上，如大型主机和超级计算机。世界上500个最快的超级计算机90％以上运行Linux发行版或变种，包括最快的前10名超级电脑运行的都是基于Linux内核的操作系统。Linux也广泛应用在嵌入式系统上，如手机，平板电脑，路由器，电视和电子游戏机等。在移动设备上广泛使用的Android操作系统就是建立在Linux内核之上。通常情况下，Linux被打包成供个人计算机和服务器使用的Linux发行版，一些流行的主流Linux发布版，包括Debian（及其派生版本Ubuntu，Linux Mint），Fedora（及其相关版本Red Hat Enterprise Linux，CentOS）和openSUSE等。Linux发行版包含Linux内核和支撑内核的实用程序和库，通常还带有大量可以满足各类需求的应用程序。个人计算机使用的Linux发行版通常包X Window和一个相应的桌面环境，如GNOME或KDE。桌面Linux操作系统常用的应用程序，包括Firefox网页浏览器，LibreOffice办公软件，GIMP图像处理工具等。由于Linux是自由软件，任何人都可以创建一个符合自己需求的Linux发行版。</zh-speak>
    </Feature>
    <Feature data="Test automation" zh-data="" id="459" uri="http://dbpedia.org/resource/Test_automation">
      <neighbors/>
      <speak>In software testing, test automation is the use of special software  to control the execution of tests and the comparison of actual outcomes with predicted outcomes.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Instrument control" zh-data="" id="460" uri="http://dbpedia.org/resource/Instrument_control">
      <neighbors/>
      <speak>Instrument control consists of connecting a desktop instrument to a computer and taking measurements.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Tulln an der Donau" zh-data="多瑙河畔圖爾恩" id="461" uri="http://dbpedia.org/resource/Tulln_an_der_Donau">
      <neighbors>
        <neighbor dest="388" relationship="country" weight="0"/>
      </neighbors>
      <speak>Tulln an der Donau  is a town in the Austrian state of Lower Austria, and the seat of the Tulln district.</speak>
      <zh-speak>多瑙河畔圖爾恩是奧地利的城鎮，位於該國東北部多瑙河南岸，由下奧地利邦負責管轄，面積72.23平方公里，海拔高度180米，2012年人口15,198。因為城中有非常多的公園及綠地，所以又被稱為Blumenstadt，意為花城。</zh-speak>
    </Feature>
    <Feature data="Acoustics" zh-data="声学" id="462" uri="http://dbpedia.org/resource/Acoustics">
      <neighbors/>
      <speak>Acoustics is the interdisciplinary science that deals with the study of all mechanical waves in gases, liquids, and solids including topics such as vibration, sound, ultrasound and infrasound.</speak>
      <zh-speak>声学是研究媒质中机械波（包括声波、超声波和次声波）的科学，研究范围包括声波的产生，接收，转换和声波的各种效应。同时声学测量技术是一种重要的测量技术，有着广泛的应用。最简单的声学就是声音的产生和传播，这也是声学研究的基础。 声音是由物体振动产生的。 声音的传播需要介质，它可在气体、液体和固体中传播，但真空不能传声。声音在不同物质中的传播速度也是不同的，一般在固体中传播的速度最快，液体次之，在气体中传播得最慢。并且，在气体中传播的速度还与气体的温度和压强有关。有规律的悦耳声音叫乐音，没有规律的刺耳声音叫噪音。响度、音调和音色是决定乐音特征的三个因素。 响度。物理学中把人耳能感觉到的声音的强弱称为响度。声音的响度大小一般与声源振动的幅度有关，振动幅度越大，响度越大。分贝（dB）则长用来表示声音的强弱。 音调。物理学中把声音的高、低称为音调。声音的音调高低一般与发生体振动快慢有关，物体振动频率越大，音调就越高。 音色。音色又叫音品，它反映了声音的品质和特色。不同物体发出的声音，其音色是不同的，因此我们才能分辨不同人讲话的声音、不同乐器演奏的声音等。另外，有许多声音是正常人的耳朵听不到的。因为声波的频率范围很宽，由10-4Hz到1012Hz，但正常人的耳朵只能听到20Hz到20000Hz之间的声音。通常把高于20000Hz的声音称为超声波，低于20Hz的声音称为次声波，在20Hz到20000Hz之间的声音称为可闻声。</zh-speak>
    </Feature>
    <Feature data="Start-Preis" zh-data="" id="463" uri="http://dbpedia.org/resource/Start-Preis">
      <neighbors/>
      <speak>The Start-Preis is the highest Austrian award for scientists under the age of 35.It is awarded once per year by the Austrian Science Fund on behalf of the Austrian Ministry for Science.It is endowed with up to 1.2 million Euro for a proposed research project for six years.The recipients are selected by an international jury of experts.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mathematics" zh-data="数学" id="464" uri="http://dbpedia.org/resource/Mathematics">
      <neighbors/>
      <speak>Mathematics  stated that "as far as the laws of mathematics refer to reality, they are not certain; and as far as they are certain, they do not refer to reality." French mathematician Claire Voisin states "There is creative drive in mathematics, it's all about movement trying to express itself." Mathematics is used throughout the world as an essential tool in many fields, including natural science, engineering, medicine, finance and the social sciences.</speak>
      <zh-speak>数学（Mathematics）是利用符号语言研究數量、结构、变化以及空间等概念的一門学科，从某种角度看屬於形式科學的一種。數學透過抽象化和邏輯推理的使用，由計數、計算、量度和對物體形狀及運動的觀察而產生。數學家們拓展這些概念，為了公式化新的猜想以及從選定的公理及定義中建立起嚴謹推導出的定理。基礎數學的知識與運用總是個人與團體生活中不可或缺的一環。對數學基本概念的完善，早在古埃及、美索不達米亞及古印度內的古代數學文本便可觀見，而在古希臘那裡有更為嚴謹的處理。從那時開始，數學的發展便持續不斷地小幅進展，至16世紀的文藝復興時期，因为新的科學發現和數學革新兩者的交互，致使數學的加速发展，直至今日。数学并成为許多國家及地區的教育範疇中的一部分。今日，數學使用在不同的領域中，包括科學、工程、醫學和經濟學等。數學對這些領域的應用通常被稱為應用數學，有時亦會激起新的數學發現，並導致全新學科的發展，例如物理学的实质性发展中建立的某些理论激发数学家对于某些问题的不同角度的思考。數學家也研究純數學，就是數學本身的实质性內容，而不以任何實際應用為目標。雖然許多研究以純數學開始，但其过程中也發現許多應用之处。</zh-speak>
    </Feature>
    <Feature data="Hans Georg Feichtinger" zh-data="" id="465" uri="http://dbpedia.org/resource/Hans_Georg_Feichtinger">
      <neighbors>
        <neighbor dest="408" relationship="doctoral student" weight="0"/>
        <neighbor dest="388" relationship="birth place" weight="0"/>
        <neighbor dest="466" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Hans Georg Feichtinger  at University of Vienna.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="University of Vienna" zh-data="维也纳大学" id="466" uri="http://dbpedia.org/resource/University_of_Vienna">
      <neighbors>
        <neighbor dest="387" relationship="city" weight="0"/>
        <neighbor dest="388" relationship="country" weight="0"/>
      </neighbors>
      <speak>The University of Vienna  is a public university located in Vienna, Austria.</speak>
      <zh-speak>維也納大學（德語：Universität Wien）坐落在奥地利的首都维也纳，始建于公元1365年，是现存最古老的德语大学，也是中欧最大的学校之一，维也纳大学亦是目前最大的德语大学，大约7.4万学生就读于维也纳大学，学校共设有180个学位。在奥地利，维也纳大学的也是最大的教学和研究机构，拥有近8600名员工，其中有6500名学者。</zh-speak>
    </Feature>
    <Feature data="Acoustics Research Institute" zh-data="" id="467" uri="http://dbpedia.org/resource/Acoustics_Research_Institute">
      <neighbors>
        <neighbor dest="387" relationship="headquarters" weight="0"/>
        <neighbor dest="408" relationship="chief1 name" weight="0"/>
        <neighbor dest="560" relationship="parent agency" weight="0"/>
      </neighbors>
      <speak>The Acoustics Research Institute  is a non-university research institution of the Austrian Academy of Sciences in Vienna.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Centre national de la recherche scientifique" zh-data="法國國家科學研究中心" id="468" uri="http://dbpedia.org/resource/Centre_national_de_la_recherche_scientifique">
      <neighbors/>
      <speak>The French National Centre for Scientific Research  and 6,000 temporary workers.</speak>
      <zh-speak>法國國家科學研究中心（法文：CNRS, Centre national de la recherche scientifique）成立於1939年10月19日，法國最大的國家級科學研究機構。</zh-speak>
    </Feature>
    <Feature data="Université catholique de Louvain" zh-data="法语天主教鲁汶大学" id="469" uri="http://dbpedia.org/resource/Universit%C3%A9_catholique_de_Louvain">
      <neighbors/>
      <speak>The Université catholique de Louvain  is Belgium's largest French-speaking university.</speak>
      <zh-speak>天主教鲁汶大学 (法语) ( 法语：Université Catholique de Louvain [简称 UCL] 英语：Catholic University of Louvain，拉丁語：Universitas Catholica Lovaniensis）是欧洲低地国家重要高等学府，也是世界有名的大学之一。其前身为1425年由教皇马丁五世下令建立的天主教鲁汶大学，是现存最古老的天主教大学。1968年天主教鲁汶大学分裂，持荷兰语的部分留在鲁汶，组成天主教鲁汶大学 (荷语)，持法语的则搬至新鲁汶，建立了天主教鲁汶大学 (法语)。</zh-speak>
    </Feature>
    <Feature data="Modular synthesizer" zh-data="" id="470" uri="http://dbpedia.org/resource/Modular_synthesizer">
      <neighbors/>
      <speak>The modular synthesizer is a type of synthesizer, usually analogue, consisting of separate specialized modules.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Tyler, Texas" zh-data="泰勒 (德克薩斯州)" id="471" uri="http://dbpedia.org/resource/Tyler,_Texas">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="210" relationship="leader name" weight="0"/>
      </neighbors>
      <speak>Tyler is a city in and the county seat of Smith County, Texas, United States.</speak>
      <zh-speak>泰勒 （Tyler）是美國德克薩斯州史密斯縣的一個城市，位於德州東部，是該縣縣治，得名于第十任总统约翰·泰勒。面積128平方公里，2000年人口為83,650人。當地以種植玫瑰聞名。</zh-speak>
    </Feature>
    <Feature data="Bell Labs" zh-data="贝尔实验室" id="472" uri="http://dbpedia.org/resource/Bell_Labs">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>Bell Laboratories , information theory, the UNIX operating system, the C programming language, S programming language and the C++ programming language.</speak>
      <zh-speak>贝尔实验室（Bell Laboratories），最初是贝尔系统内从事包括电话交换机、电话电缆、半导体等电信相关技术的研究开发机构。地点位于美國新澤西州聯合縣的Murray Hill。1925年，当时AT&amp;T总裁华特·基佛德（Walter Gifford）收购了西方电子（Western Electric）公司的研究部门，成立了一个叫做“贝尔电话实验室公司”的独立实体。AT&amp;T和西方电子各拥有该公司的50%股權。贝尔实验室的工作可以大致分为三个类别：基础研究、系统工程和应用开发。在基础研究方面，主要从事电信技术的基础理论研究，包括数学、物理学、材料科学、行为科学和计算机编程理论。系统工程主要研究构成电信网络的高度复杂系统。开发部门是贝尔实验室最大的部门，负责设计构成贝尔系统电信网络的设备和软件。在AT&amp;T時期，貝爾實驗室的研發經費主要來自美國民眾繳納電話費的附加稅，所以美國人不需花很多錢就可取得貝爾實驗室的專利技術授權，分享貝爾實驗室的研究成果。1984年以后，按照美国政府分拆AT&amp;T的协议，从贝尔实验室中分割成立了Bellcore。Bellcore为分拆后的一系列小贝尔公司统一提供研究开发的服务。1996年，贝尔实验室以及AT&amp;T的设备制造部门脱离AT&amp;T、成为朗讯科技，AT&amp;T保留了少数研究人员成为其研究机构：AT&amp;T实验室。貝爾實驗室現在屬於法國阿爾卡特-朗訊（Alcatel-Lucent）公司。</zh-speak>
    </Feature>
    <Feature data="Control theory" zh-data="控制理论" id="473" uri="http://dbpedia.org/resource/Control_theory">
      <neighbors/>
      <speak>Control theory is an interdisciplinary branch of engineering and mathematics that deals with the behavior of dynamical systems with inputs, and how their behavior is modified by feedback.</speak>
      <zh-speak>控制理論是工程學與數學的跨領域分支，主要處理在有輸入信號的動力系統的行為。系統的外部輸入稱為「參考值」，系統中的一個或多個變數需隨著參考值變化，控制器處理系統的輸入，使系統輸出得到預期的效果。控制理論一般的目的是藉由控制器的動作讓系統穩定，也就是系統維持在設定值，而且不會在設定值附近晃動。連續系統一般會用微分方程來表示。若微分方程是線性常係數，可以將微分方程取拉普拉斯轉換，將其輸入和輸出之間的關係用傳遞函數表示。若微分方程為非線性，已找到其解，可以將非線性方程在此解附近進行線性化。若所得的線性化微分方程是常係數的，也可以用拉普拉斯轉換得到傳遞函數。傳遞函數也稱為系統函數或網路函數，是一個數學表示法，用時間或是空間的頻率來表示一個線性常係數系統中，輸入和輸出之間的關係。控制理论中常用方塊圖來說明控制理论的內容。</zh-speak>
    </Feature>
    <Feature data="Information theory" zh-data="信息论" id="474" uri="http://dbpedia.org/resource/Information_theory">
      <neighbors/>
      <speak>Information theory is a branch of applied mathematics, electrical engineering, and computer science involving the quantification of information.</speak>
      <zh-speak>信息论（英语：information theory）是运用概率论与数理统计的方法研究信息、信息熵、通信系统、数据传输、密码学、数据压缩等问题的应用数学学科。信息论将信息的传递作为一种统计现象来考虑，给出了估算通信信道容量的方法。信息传输和信息压缩是信息论研究中的两大领域。这两个方面又由信道编码定理、信源－信道隔离定理相互联系。</zh-speak>
    </Feature>
    <Feature data="Thomas Kailath" zh-data="" id="475" uri="http://dbpedia.org/resource/Thomas_Kailath">
      <neighbors>
        <neighbor dest="473" relationship="field" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="77" relationship="work institution" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
      </neighbors>
      <speak>BBVA Foundation Frontiers of Knowledge Award  is an electrical engineer, information theorist, control engineer, entrepreneur and the Hitachi America Professor of Engineering, Emeritus, at Stanford University.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="University of Tehran" zh-data="德黑兰大学" id="476" uri="http://dbpedia.org/resource/University_of_Tehran">
      <neighbors/>
      <speak>The University of Tehran  is the logo of the University and in a more general sense, a logo of education in Iran.</speak>
      <zh-speak>德黑兰大学（波斯語：دانشگاه تهران‎），是伊朗历史最悠久、影响力最大的大学，被誉为“伊朗大学之母”（波斯語：دانشگاه مادر‎）。它提供111个本科专业，177个硕士专业，以及156个博士专业。</zh-speak>
    </Feature>
    <Feature data="Communication theory" zh-data="" id="477" uri="http://dbpedia.org/resource/Communication_theory">
      <neighbors/>
      <speak>Communication theory is a field of information and mathematics that studies the technical process of information and the human process of human communication.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Presidential Early Career Award for Scientists and Engineers" zh-data="" id="478" uri="http://dbpedia.org/resource/Presidential_Early_Career_Award_for_Scientists_and_Engineers">
      <neighbors/>
      <speak>The Presidential Early Career Award for Scientists and Engineers  is the highest honor bestowed by the United States government on outstanding scientists and engineers in the early stages of their independent research careers.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="David and Lucile Packard Foundation" zh-data="" id="479" uri="http://dbpedia.org/resource/David_and_Lucile_Packard_Foundation">
      <neighbors>
        <neighbor dest="91" relationship="location" weight="0"/>
      </neighbors>
      <speak>The David and Lucile Packard Foundation is a private foundation that provides grants to not-for-profit organizations.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Iranian American" zh-data="" id="480" uri="http://dbpedia.org/resource/Iranian_American">
      <neighbors>
        <neighbor dest="6" relationship="population place" weight="0"/>
        <neighbor dest="382" relationship="population place" weight="0"/>
        <neighbor dest="80" relationship="religion" weight="0"/>
      </neighbors>
      <speak>Iranian-Americans, or Persian-Americans, are Americans of Iranian ancestry or people possessing Iranian and American dual citizenship.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="University of South Carolina" zh-data="南卡羅來納大學" id="481" uri="http://dbpedia.org/resource/University_of_South_Carolina">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>The University of South Carolina  in downtown Columbia not far from the South Carolina State House.</speak>
      <zh-speak>南卡羅萊納大學（英语：University of South Carolina，簡稱南卡大學 (USC)）是位於南卡羅來納州的一所公立大學。創立於1801年。他總共有7所分校，旗艦大學位於首都哥倫比亞。其他分校位於艾肯，索克亥奇，布佛特，蘭卡斯特，桑特，斯巴坦堡，和聯合。南卡大學擁有全美排行第一的菁英學院（Honor's College）。他被美国新闻与世界报道在2008年譽為在美國前10大最具創新和前途的大學。</zh-speak>
    </Feature>
    <Feature data="Georgia Institute of Technology" zh-data="佐治亚理工学院" id="482" uri="http://dbpedia.org/resource/Georgia_Institute_of_Technology">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>The Georgia Institute of Technology  is a public research university in Atlanta, Georgia, in the United States.</speak>
      <zh-speak>佐治亚理工学院（Georgia Institute of Technology，常缩写为Gatech，也被简称为Georgia Tech），是美国一所综合性公立大学，始建于1885年。与麻省理工学院及加州理工学院并称为美国三大理工学院。学校总部位于美国佐治亚州首府亚特兰大市，与艾文理大学同处于一个城市。除了位于亚特兰大市的主校区，该校在佐治亚州沙瓦纳和法国洛林大区的首府梅斯开设了分校。2006年，佐治亚理工学院与上海交通大学合作办学，在上海开设双学位项目。此外，佐治亚理工学院还在爱尔兰共和国的阿斯隆市(Athlone)及新加坡国立大学设有联合研究所。</zh-speak>
    </Feature>
    <Feature data="Loudspeaker" zh-data="揚聲器" id="483" uri="http://dbpedia.org/resource/Loudspeaker">
      <neighbors/>
      <speak>A loudspeaker .  In this case the individual speakers are referred to as "drivers" and the entire unit is called a loudspeaker.</speak>
      <zh-speak>揚聲器（英语：Loudspeaker），俗稱喇叭，是一種轉換電子信號成為聲音的换能器、電子元件，可以由一個或多個組成音響組。</zh-speak>
    </Feature>
    <Feature data="Amplifier" zh-data="放大器電路" id="484" uri="http://dbpedia.org/resource/Amplifier">
      <neighbors/>
      <speak>An electronic amplifier, amplifier, or  amp is an electronic device that increases the power of a signal.It does this by taking energy from a power supply and controlling the output to match the input signal shape but with a larger amplitude.</speak>
      <zh-speak>放大器電路，或稱放大電路，能增加訊號的輸出功率。它透過電源取得能量來源，以控制輸出訊號的波形與輸入訊號一致，但具有較大的振幅。依此來講，放大器電路亦可視為可調節的輸出電源，用来获得比输入信号更强的输出信号。放大器的四种基本类型是电压放大器、电流放大器、互导放大器和互阻放大器。进一步的区别在于输出是否是输入的线性或非线性表示。放大器也可以通过在信号链中的物理位置来分类。</zh-speak>
    </Feature>
    <Feature data="Ridderkerk" zh-data="里德凯尔克" id="485" uri="http://dbpedia.org/resource/Ridderkerk">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="486" relationship="country" weight="0"/>
      </neighbors>
      <speak>Ridderkerk  is covered by water.The municipality of Ridderkerk also includes the following towns, villages and townships: Bolnes, Oostendam, Rijsoord and Slikkerveer.</speak>
      <zh-speak>里德凯尔克（荷蘭語：Ridderkerk，）是荷兰南荷兰省的一个镇和基层政权。2010年基层政权人口44,886，面积25.10 km²，其中1.35 km² 为水域。</zh-speak>
    </Feature>
    <Feature data="Netherlands" zh-data="荷兰" id="486" uri="http://dbpedia.org/resource/Netherlands">
      <neighbors>
        <neighbor dest="380" relationship="ethnic group" weight="0"/>
      </neighbors>
      <speak>The Netherlands  have been reclaimed from the sea and from lakes, amounting to nearly 17% of the country's current land mass.With a population density of 406 people per km² – 497 if water is excluded – the Netherlands is a very densely populated country for its size.</speak>
      <zh-speak>荷蘭（荷蘭語：Nederland，[ˈneːdərˌlɑnt]（13px 聆聽）），直译尼德兰），是主權國家荷兰王國（荷蘭語：het Koninkrijk der Nederlanden）下的主要構成国，与美洲加勒比海地区的阿鲁巴、库拉索和荷屬圣马丁4个構成国，共同组成主權國家“荷兰王国”。荷兰的領土可分為歐洲區（European Netherlands）與加勒比區（Caribisch Nederland）兩個部份。歐洲區領土位于欧洲西北部，濒临北海，与德国、比利时接壤。加勒比海區，位於美洲加勒比海地區，包括博奈爾島、聖尤斯特歇斯島和薩巴島三個小島。荷蘭最大的三個城市分別為阿姆斯特丹、鹿特丹與海牙。阿姆斯特丹是宪法确定的正式首都，然而，政府、國王的王宫和大多数使馆都位于海牙。此外，国际法庭也设在海牙。鹿特丹港，位於鹿特丹，為全世界進出量第八的大型港口。尼德蘭的字面意義，為低地國家，這個名稱來自於它國內平坦而低濕的地形。其國土中，只有約50%的土地高於海拔1公尺。其國土中，低於海平面的土地，絕大多數是人造的。從16世紀開始，荷蘭人，利用風車及堤防排乾積水，逐步由海中及湖中製造出圩田。現今荷蘭國土總面積中，有17%是人造的。荷蘭是一個人口非常稠密的國家，其人口密度為每平方公里406人，若不計入水域面積則是每平方公里497人。在全世界上，也只有孟加拉、台灣、韓國，這三個國家的總人口數與人口密度，同時高於尼德蘭。儘管如此，尼德蘭是世界第二大的糧食與農產品出口國，僅次於美國。荷蘭是世界上最早擁有議會選舉的國家之一，自1848年起，就確立了議會民主及立憲君主制。荷蘭被認為是一個自由的國度，其社會長久以來就以寬容異己的風氣聞名，其法律允許墮胎、性交易及安樂死等，有限度的放寬娛樂性藥物的合法使用，如大麻。1579年開始，就允許國內居民有宗教自由，領先當時歐洲其他國家。2001年，成為全世界第一個立法承認同性婚姻的國家。荷蘭是歐盟、G-10、NATO、OECD、WTO的創始成員國之一，也是Benelux關稅同盟的一部份。禁止化學武器組織的總部位於尼德蘭海牙。在這個國家中，擁有五個國際性法庭，包括常设仲裁法院、國際法院、前南斯拉夫问题国际刑事法庭、国际刑事法院、黎巴嫩特別法庭（Special Tribunal for Lebanon）等。前四個法庭都設在海牙，此外，欧洲刑警组织與歐洲檢察官組織的總部也位於此，這使得海牙被稱為是國際司法之都。荷蘭是以市場經濟為主的經濟體，在經濟自由度指數列出的全球177個國家中，排名第17。在2011年，它是全世界人均收入第10高的國家。在2013年，聯合國世界快樂報告（World Happiness Report）中，將尼德蘭列為全世界第四快樂的國度，顯示了這個國家人民的高品質生活。</zh-speak>
    </Feature>
    <Feature data="Professional audio" zh-data="" id="487" uri="http://dbpedia.org/resource/Professional_audio">
      <neighbors/>
      <speak>Professional audio, also 'pro audio', refers to both an activity and a type of audio equipment.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Guitar" zh-data="吉他" id="488" uri="http://dbpedia.org/resource/Guitar">
      <neighbors/>
      <speak>The guitar is a popular musical instrument classified as a string instrument with anywhere from 4 to 18 strings, usually having 6. The sound is projected either acoustically or through electrical amplification , the steel-string acoustic guitar, and the archtop guitar.</speak>
      <zh-speak>吉他（英语：Guitar），港澳称结他，屬於弹拨乐器。通常有六條弦，形状与提琴相似。吉他在流行音樂、搖滾音樂、藍調、民歌、佛朗明哥中，常被視為主要樂器。而在古典音樂的領域裡，結他常以独奏或二重奏的型式演出；當然，在室内乐和管弦乐中，吉他亦扮演著相當程度的陪襯角色。</zh-speak>
    </Feature>
    <Feature data="Robert Moog" zh-data="罗伯特·穆格" id="489" uri="http://dbpedia.org/resource/Robert_Moog">
      <neighbors>
        <neighbor dest="382" relationship="birth place" weight="0"/>
        <neighbor dest="492" relationship="death place" weight="0"/>
        <neighbor dest="569" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Robert Arthur "Bob" Moog , founder of Moog Music, was an American pioneer of electronic music, best known as the inventor of the Moog synthesizer.Moog's innovative electronic design is employed in numerous synthesizers including the Minimoog Model D, Minimoog Voyager, Little Phatty, Moog Taurus Bass Pedals, Moog Minitaur, and the Moogerfooger line of effects pedals.</speak>
      <zh-speak>罗伯特·穆格（Robert Moog，1934年5月23日－2005年8月21日），美国电子工学者，电子音乐的先锋，電子合成器之父。</zh-speak>
    </Feature>
    <Feature data="North Carolina" zh-data="北卡罗来纳州" id="490" uri="http://dbpedia.org/resource/North_Carolina">
      <neighbors>
        <neighbor dest="122" relationship="Mineral" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="133" relationship="language" weight="0"/>
        <neighbor dest="139" relationship="title" weight="0"/>
      </neighbors>
      <speak>North Carolina  from the coast, the western, mountainous part of the state has a subtropical highland climate.</speak>
      <zh-speak>北卡罗来纳州（英语：North Carolina）是位於美國南部區域大西洋海岸的一州。別稱「柏油脚跟州」或「舊北州」。下轄100郡。州府為罗里，最大的城市為夏洛特。北卡羅來納是最初北美十三殖民地的成員之一，最初通認作卡羅來納州，並且是第一個英國殖民地在美洲的家。1861年5月20日，它成為最後一個美利堅聯盟國脫離合眾國的成員，並於1868年7月4日重新被接納。該州並且是第一個以人力動力比空氣重飛行成功的地點，由萊特兄弟於1903年接近小鷹鎮的Kill Devil Hills創造紀錄。今天，該州是一個各色各樣經濟和人口迅速發展的州。截至2009年7月1日止，人口估計是9,380,884（自2000年4月1日來16.7%增加）。北卡罗来纳有著寬闊的海拔地形，從沿岸海平面到約6,684英尺（2,037公尺）的山脈。沿岸、東部皮埃蒙特區域、與北卡罗来纳中部氣候與其它南方的州如喬治亞和南卡罗来纳類似；另一方面，西部山脈的氣候比較接近新英格蘭或中西部上區。當沿海平原，特別是潮流流經地帶，受大西洋強烈影響的同時，該州西部多山部份從沿海算起超過300英哩（500公里）的距離，造成可觀的與海隔絕。因此，該州的氣候範圍從沿海附近溫暖、濕潤亞熱帶氣候，到位於山脈附近濕潤大陸性氣候。該州大多數降雨於濕潤亞熱帶區域。</zh-speak>
    </Feature>
    <Feature data="Musical instrument" zh-data="乐器" id="491" uri="http://dbpedia.org/resource/Musical_instrument">
      <neighbors/>
      <speak>A musical instrument is an instrument created or adapted to make musical sounds.</speak>
      <zh-speak>樂器，泛指可以發聲演奏音樂的工具。根據構造或發聲原理，樂器可以細分作以下的分類：</zh-speak>
    </Feature>
    <Feature data="Asheville, North Carolina" zh-data="阿什维尔" id="492" uri="http://dbpedia.org/resource/Asheville,_North_Carolina">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="490" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
      </neighbors>
      <speak>Asheville is a city in and the county seat of Buncombe County, North Carolina, United States.</speak>
      <zh-speak>阿什维尔（Asheville）位于美国北卡罗来纳州西部，是班康县的县治。根据2000年美国人口普查，共有68,889人，其中白人占77.95%、非裔美国人占17.61%。</zh-speak>
    </Feature>
    <Feature data="Carolina Eyck" zh-data="" id="493" uri="http://dbpedia.org/resource/Carolina_Eyck">
      <neighbors>
        <neighbor dest="489" relationship="instrument" weight="0"/>
        <neighbor dest="413" relationship="instrument" weight="0"/>
        <neighbor dest="758" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Carolina Eyck born on December 26, 1987, is a German musician specialising in playing the Theremin, an electronic instrument.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Moogfest" zh-data="" id="494" uri="http://dbpedia.org/resource/Moogfest">
      <neighbors>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="413" relationship="Founders" weight="0"/>
        <neighbor dest="492" relationship="location" weight="0"/>
      </neighbors>
      <speak>Moogfest is an annual two to five-day electronic music festival that takes place in Asheville, North Carolina, United States towards the end of April.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Pamelia Kurstin" zh-data="" id="495" uri="http://dbpedia.org/resource/Pamelia_Kurstin">
      <neighbors>
        <neighbor dest="6" relationship="birth place" weight="0"/>
        <neighbor dest="413" relationship="instrument" weight="0"/>
      </neighbors>
      <speak>Pamelia Stickney  is an American theremin player.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="National Instruments" zh-data="美国国家仪器公司" id="496" uri="http://dbpedia.org/resource/National_Instruments">
      <neighbors>
        <neighbor dest="456" relationship="product" weight="0"/>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="85" relationship="key person" weight="0"/>
        <neighbor dest="420" relationship="product" weight="0"/>
      </neighbors>
      <speak>—National Instruments Corporation, or NI, is an American company with international operation.</speak>
      <zh-speak>美国国家仪器公司（英语：National Instruments，缩写NI，NASDAQ：NATI）是一家美国公司，从事与测试、控制、设计领域相关的，包括虚拟仪器和电子测试设备等工程软件的开发。著名产品有图形开发环境LabVIEW、C语言虚拟仪器应用系统LabWindows/CVI、集成电路分析程序NI Multisim等等；硬件产品包括VXI总线、PXI总线、VME总线的框架与模块，IEEE-488接口以及内部整合电路和其他自动化技术的标准。作为一家自2000年連續11年入選財富雜誌百大最佳工作環境名单的公司，美国国家仪器在全球范围内拥有五千余名员工并在41个国家经营。</zh-speak>
    </Feature>
    <Feature data="Brigham Young University" zh-data="楊百翰大學" id="497" uri="http://dbpedia.org/resource/Brigham_Young_University">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>Brigham Young University  take a two-year hiatus from their studies at some point to serve as Mormon missionaries.</speak>
      <zh-speak>杨百翰大学（英語：Brigham Young University，縮寫：BYU）为耶稣基督后期圣徒教会（LDS Church）在美國犹他州Provo建立的一所大学，以LDS第二任总会会长杨百翰的名字命名。這所大學是美國最大的宗教大學，也是美國第三大私立大學。楊百翰大學中大約有98%的學生（34,000人）都是耶穌基督後期聖徒會的成員，三分之一的學生來自猶他州。該大學的學生被要求遵守榮譽規章，即與LDS教義所規定的行為一致（例如：學術誠信、著裝守則、不能有婚前性行為並且要拒絕毒品和酒精消費）。78%的男生和10%的女生會在學習期間抽出兩年時間來做傳教士，在這一期間大約31%的學生都會選擇參加外國語課程，因此楊百瀚大學或許是美國擁有會多國語言學生最多的大學。而且在這裡的教育費一般也比其他私立大學低，因為很大一部份開支都是由十一奉獻的捐助來支持的。</zh-speak>
    </Feature>
    <Feature data="IEEE W.R.G. Baker Award" zh-data="" id="498" uri="http://dbpedia.org/resource/IEEE_W.R.G._Baker_Award">
      <neighbors/>
      <speak>IEEE W.R.G. Baker Award provided by the Institute of Radio Engineers , after the IRE organization merged into the IEEE in 1963. Recipients receive a certificate and honorarium "for the most outstanding paper reporting original work" in one of the IEEE publications, including the transactions, journals, proceedings, and magazines of the IEEE Societies.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Boulder City, Nevada" zh-data="" id="499" uri="http://dbpedia.org/resource/Boulder_City,_Nevada">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
      </neighbors>
      <speak>Boulder City is a city in Clark County, Nevada, United States.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Stephen O. Rice" zh-data="" id="500" uri="http://dbpedia.org/resource/Stephen_O._Rice">
      <neighbors/>
      <speak>Stephen "Steve" Oswald Rice  was a pioneer in the related fields of information theory, communications theory, and telecommunications.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Physical security" zh-data="" id="501" uri="http://dbpedia.org/resource/Physical_security">
      <neighbors/>
      <speak>Physical security describes security measures that are designed to deny unauthorized access to facilities, equipment and resources, and to protect personnel and property from damage or harm . Physical security involves the use of multiple layers of interdependent systems which include CCTV surveillance, security guards, protective barriers, locks, access control protocols, and many other techniques.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Algorithm" zh-data="算法" id="502" uri="http://dbpedia.org/resource/Algorithm">
      <neighbors/>
      <speak>In mathematics and computer science, an algorithm Listen/ˈælɡərɪðəm/  is a step-by-step procedure for calculations.</speak>
      <zh-speak>在數學和計算機科學/算學之中，算法/算則法（Algorithm）爲一個計算的具體步驟，常用於計算、數據處理和自動推理。精確而言，算法是一個表示爲有限長列表的有效方法。算法應包含清晰定義的指令用於計算函數。算法中的指令描述的是一個計算，當其執行時能從一個初始狀態和初始輸入（可能爲空）開始，經過一系列有限而清晰定義的狀態最終產生輸出並停止於一個終態。一個狀態到另一個狀態的轉移不一定是確定的。隨機化算法在内的一些算法，包含了一些隨機輸入。形式化算法的概念部分源自尝试解决希尔伯特提出的判定问题，並在其后尝试定义有效计算性或者有效方法中成形。这些尝试包括库尔特·哥德尔、雅克·埃尔布朗和斯蒂芬·科尔·克莱尼分别于1930年、1934年和1935年提出的遞歸函數，阿隆佐·邱奇於1936年提出的λ演算，1936年Emil Leon Post的Formulation 1和艾倫·圖靈1937年提出的圖靈機。即使在當前，依然常有直覺想法難以定義爲形式化算法的情況。</zh-speak>
    </Feature>
    <Feature data="Algorithms (journal)" zh-data="" id="503" uri="http://dbpedia.org/resource/Algorithms_(journal)">
      <neighbors>
        <neighbor dest="502" relationship="academic discipline" weight="0"/>
        <neighbor dest="518" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>Algorithms is a peer-reviewed open access mathematics journal  covering all aspects of algorithm studies, including theory, experiment, design, analysis, and results.Coverage also includes computer data, information systems, software engineering, artificial intelligence, automation, and control systems.The journal is published by MDPI and was established in 2008. The editor-in-chief is Kazuo Iwama . Publishing formats include reviews, original research articles, and short communications.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Michael Mitzenmacher" zh-data="" id="504" uri="http://dbpedia.org/resource/Michael_Mitzenmacher">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="519" relationship="award" weight="0"/>
        <neighbor dest="520" relationship="alma mater" weight="0"/>
        <neighbor dest="521" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="522" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>Michael David Mitzenmacher is an American computer scientist working in algorithms.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Jan van Leeuwen" zh-data="" id="505" uri="http://dbpedia.org/resource/Jan_van_Leeuwen">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="486" relationship="nationality" weight="0"/>
        <neighbor dest="523" relationship="doctoral student" weight="0"/>
        <neighbor dest="524" relationship="alma mater" weight="0"/>
        <neighbor dest="525" relationship="birth place" weight="0"/>
        <neighbor dest="526" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="527" relationship="doctoral student" weight="0"/>
      </neighbors>
      <speak>Jan van Leeuwen  is a Dutch computer scientist and Emeritus professor at the Department of Information and Computing Sciences at the Utrecht University.Van Leeuwen completed his undergraduate studies in mathematics at Utrecht University in 1967 and received a Ph.D. in mathematics in 1971 from the same institution under the supervision of Dirk van Dalen.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Alan Sherman" zh-data="" id="506" uri="http://dbpedia.org/resource/Alan_Sherman">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="81" relationship="SHORT DESCRIPTION" weight="0"/>
        <neighbor dest="528" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="529" relationship="alma mater" weight="0"/>
        <neighbor dest="530" relationship="field" weight="0"/>
        <neighbor dest="531" relationship="birth place" weight="0"/>
        <neighbor dest="532" relationship="birth place" weight="0"/>
        <neighbor dest="533" relationship="field" weight="0"/>
        <neighbor dest="534" relationship="field" weight="0"/>
      </neighbors>
      <speak>Alan Theodore Sherman , and director of the UMBC Chess Program.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Chris Umans" zh-data="" id="507" uri="http://dbpedia.org/resource/Chris_Umans">
      <neighbors>
        <neighbor dest="502" relationship="known for" weight="0"/>
        <neighbor dest="446" relationship="workplaces" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="517" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="520" relationship="alma mater" weight="0"/>
        <neighbor dest="535" relationship="known for" weight="0"/>
        <neighbor dest="536" relationship="alma mater" weight="0"/>
        <neighbor dest="537" relationship="known for" weight="0"/>
        <neighbor dest="538" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Chris Umans is Professor of computer science in the Computing and Mathematical Sciences Department at the California Institute of Technology.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="SWAT and WADS conferences" zh-data="" id="508" uri="http://dbpedia.org/resource/SWAT_and_WADS_conferences">
      <neighbors>
        <neighbor dest="502" relationship="discipline" weight="0"/>
        <neighbor dest="539" relationship="publisher" weight="0"/>
        <neighbor dest="540" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>WADS, the Algorithms and Data Structures Symposium, is an international academic conference in the field of computer science, focusing on algorithms and data structures.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="European Symposium on Algorithms" zh-data="" id="509" uri="http://dbpedia.org/resource/European_Symposium_on_Algorithms">
      <neighbors>
        <neighbor dest="502" relationship="discipline" weight="0"/>
        <neighbor dest="539" relationship="publisher" weight="0"/>
        <neighbor dest="540" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>The European Symposium on Algorithms  is an international conference covering the field of algorithms.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Leonard Schulman" zh-data="" id="510" uri="http://dbpedia.org/resource/Leonard_Schulman">
      <neighbors>
        <neighbor dest="502" relationship="known for" weight="0"/>
        <neighbor dest="446" relationship="workplaces" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="474" relationship="known for" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="448" relationship="field" weight="0"/>
        <neighbor dest="541" relationship="known for" weight="0"/>
        <neighbor dest="542" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="543" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Leonard Schulman is Professor of Computer Science in the Computing and Mathematical Sciences Department at the California Institute of Technology.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Vijay Vazirani" zh-data="" id="511" uri="http://dbpedia.org/resource/Vijay_Vazirani">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="482" relationship="occupation" weight="0"/>
        <neighbor dest="520" relationship="alma mater" weight="0"/>
        <neighbor dest="535" relationship="field" weight="0"/>
        <neighbor dest="544" relationship="nationality" weight="0"/>
        <neighbor dest="545" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="546" relationship="prizes" weight="0"/>
        <neighbor dest="547" relationship="field" weight="0"/>
      </neighbors>
      <speak>Vijay Virkumar Vazirani  is an Indian American Professor of Computer Science at Georgia Tech.He received his Bachelor's degree from MIT in 1979 and his Ph.D. from the University of California, Berkeley in 1983. During the early to mid nineties, he was a Professor of Computer Science at the Indian Institute of Technology, Delhi.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Georg Gottlob" zh-data="" id="512" uri="http://dbpedia.org/resource/Georg_Gottlob">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="297" relationship="field" weight="0"/>
        <neighbor dest="387" relationship="birth place" weight="0"/>
        <neighbor dest="388" relationship="nationality" weight="0"/>
        <neighbor dest="290" relationship="residence" weight="0"/>
        <neighbor dest="519" relationship="award" weight="0"/>
        <neighbor dest="535" relationship="field" weight="0"/>
        <neighbor dest="548" relationship="field" weight="0"/>
        <neighbor dest="549" relationship="field" weight="0"/>
        <neighbor dest="550" relationship="field" weight="0"/>
        <neighbor dest="551" relationship="residence" weight="0"/>
        <neighbor dest="552" relationship="award" weight="0"/>
        <neighbor dest="553" relationship="field" weight="0"/>
        <neighbor dest="554" relationship="alma mater" weight="0"/>
        <neighbor dest="555" relationship="award" weight="0"/>
        <neighbor dest="556" relationship="nationality" weight="0"/>
        <neighbor dest="557" relationship="award" weight="0"/>
        <neighbor dest="558" relationship="award" weight="0"/>
        <neighbor dest="559" relationship="award" weight="0"/>
        <neighbor dest="560" relationship="award" weight="0"/>
        <neighbor dest="561" relationship="award" weight="0"/>
      </neighbors>
      <speak>Georg Gottlob FRS is an Austrian computer scientist who works in the areas of database theory, logic, and artificial intelligence and is Professor of Informatics at the University of Oxford.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="JSON-LD" zh-data="" id="513" uri="http://dbpedia.org/resource/JSON-LD">
      <neighbors>
        <neighbor dest="502" relationship="domain" weight="0"/>
        <neighbor dest="562" relationship="genre" weight="0"/>
        <neighbor dest="563" relationship="domain" weight="0"/>
        <neighbor dest="564" relationship="base standards" weight="0"/>
        <neighbor dest="565" relationship="domain" weight="0"/>
        <neighbor dest="566" relationship="container for" weight="0"/>
        <neighbor dest="567" relationship="base standards" weight="0"/>
      </neighbors>
      <speak>JSON-LD, or JavaScript Object Notation for Linked Data, is a method of transporting Linked Data using JSON. It was a goal to require as little effort as possible from developers to transform their existing JSON to JSON-LD. This allows data to be serialized in a way that is similar to traditional JSON. It is a World Wide Web Consortium Recommendation that has been developed by the JSON for Linking Data Community Group before it has been transferred to the RDF Working Group for review, improvement, and standardization.JSON-LD is designed around the concept of a "context" to provide additional mappings from JSON to an RDF model.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ryan Williams (computer scientist)" zh-data="" id="514" uri="http://dbpedia.org/resource/Ryan_Williams_(computer_scientist)">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="77" relationship="workplaces" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="535" relationship="field" weight="0"/>
        <neighbor dest="545" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
        <neighbor dest="569" relationship="alma mater" weight="0"/>
        <neighbor dest="570" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>Richard Ryan Williams is an American computer scientist working in computational complexity theory.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Meinolf Sellmann" zh-data="" id="515" uri="http://dbpedia.org/resource/Meinolf_Sellmann">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="297" relationship="field" weight="0"/>
        <neighbor dest="571" relationship="alma mater" weight="0"/>
        <neighbor dest="572" relationship="field" weight="0"/>
        <neighbor dest="573" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>Meinolf Sellmann, born in Holzminden, Germany, computer scientist, best known for algorithmic research in combinatorial optimization, artificial intelligence, and the hybridization thereof.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Krishna Palem" zh-data="" id="516" uri="http://dbpedia.org/resource/Krishna_Palem">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="448" relationship="field" weight="0"/>
        <neighbor dest="574" relationship="field" weight="0"/>
        <neighbor dest="575" relationship="field" weight="0"/>
        <neighbor dest="576" relationship="field" weight="0"/>
        <neighbor dest="577" relationship="residence" weight="0"/>
        <neighbor dest="578" relationship="field" weight="0"/>
        <neighbor dest="579" relationship="field" weight="0"/>
        <neighbor dest="580" relationship="field" weight="0"/>
      </neighbors>
      <speak>Krishna V. Palem is an American computer scientist and engineer of Indian origin and is the Kenneth and Audrey Kennedy Professor of Computing at Rice University  and the director of Institute for Sustainable Nanoelectronics . He is recognized for his "pioneering contributions to the algorithmic, compilation, and architectural foundations of embedded computing", as stated in the citation of his 2009 Wallace McDowell Award, the "highest technical award made solely by the IEEE Computer Society".</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Christos Papadimitriou" zh-data="赫里斯托斯·帕帕季米特里乌" id="517" uri="http://dbpedia.org/resource/Christos_Papadimitriou">
      <neighbors>
        <neighbor dest="502" relationship="field" weight="0"/>
        <neighbor dest="353" relationship="field" weight="0"/>
        <neighbor dest="437" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="439" relationship="alma mater" weight="0"/>
        <neighbor dest="535" relationship="field" weight="0"/>
        <neighbor dest="581" relationship="PLACE OF BIRTH" weight="0"/>
        <neighbor dest="582" relationship="field" weight="0"/>
        <neighbor dest="583" relationship="award" weight="0"/>
        <neighbor dest="584" relationship="alma mater" weight="0"/>
        <neighbor dest="585" relationship="doctoral student" weight="0"/>
        <neighbor dest="586" relationship="doctoral student" weight="0"/>
      </neighbors>
      <speak>Christos Harilaos Papadimitriou  is a Greek engineer, computer scientist, and professor of Computer Science at the University of California, Berkeley.</speak>
      <zh-speak>赫里斯托斯·哈里劳斯·帕帕季米特里乌（希腊语：Χρίστος Χαρίλαος Παπαδημητρίου，羅馬化：Christos Harilaos Papadimitriou）是一名生於希臘的電腦科學家，現任教於柏克萊加州大學。帕帕季米特里乌在演算法領域做出研究，並曾先後任教於哈佛大學、麻省理工學院、國立雅典理工大學、史丹佛大學、聖地牙哥加利福尼亞大學、與柏克萊加州大學。</zh-speak>
    </Feature>
    <Feature data="MDPI" zh-data="" id="518" uri="http://dbpedia.org/resource/MDPI">
      <neighbors>
        <neighbor dest="587" relationship="company type" weight="0"/>
      </neighbors>
      <speak>MDPI is an acronym shared by two related organizations nominally headquartered in Basel  concluded an investigation in April 2014 stating that MDPI meets the OASPA Membership Criteria.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Association for Computing Machinery" zh-data="计算机协会" id="519" uri="http://dbpedia.org/resource/Association_for_Computing_Machinery">
      <neighbors>
        <neighbor dest="588" relationship="leader name" weight="0"/>
      </neighbors>
      <speak>The Association for Computing Machinery  is a U.S.-based international learned society for computing.</speak>
      <zh-speak>计算机协会（英语：Association of Computing Machinery，简称ACM）是一个世界性的计算机从业员专业组织，创立于1947年，是世界上第一个科学性及教育性计算机学会。ACM每年都出版大量计算机科学的专门期刊，并就每项专业设有兴趣小组。兴趣小组每年亦会在全世界（但主要在美国）举办世界性讲座及会谈，以供各会员分享他们的研究成果。近年ACM积极开拓网上学习的渠道，以供会员在工作之余或家中提升自己的专业技能。截止20世纪末，ACM在全球拥有75,000个以上的成员，包括遍及学术界、工业、研究和政府领域的学生和计算机专业人员。成员的最高荣誉是会士（Fellow）。ACM通过它的35个特别兴趣组（Special Interest Group，SIG）提供特殊的技术信息和服务。这些特别兴趣组集中于计算机学科的多种专业，如计算机系统结构专业组（computer architecture，SIGARCH）和计算机图形与互动技术专业组（computer graphics and interactive techniques，SIGGRAPH）。这些特别兴趣组中有不少是跨学科的，适合计算机行业以外的人员。例如有不少艺术家参与到图形互动小组中。ACM通过支持全球700个以上的专业和学生组织，为当地和地区团体提供服务。其中约有20%不在美国境内。这些组织为专业人士提供服务，搜集信息，准备讲座，组织研讨会和竞赛。ACM主要成员刊物是Communications of the ACM，刊有一些广泛兴趣的文章，并对每月不同的热点问题展开讨论。ACM也出版了不少获得业内认可的期刊，这些期刊覆盖了计算机领域相当广泛的领域。ACM主办了8个主要奖项，来表彰计算机领域的技术和专业成就。最高奖项为图灵奖（Turing Award），常被形容为计算机领域的诺贝尔奖。</zh-speak>
    </Feature>
    <Feature data="University of California, Berkeley" zh-data="加州大學柏克萊分校" id="520" uri="http://dbpedia.org/resource/University_of_California,_Berkeley">
      <neighbors>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="599" relationship="affiliation" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
        <neighbor dest="601" relationship="athletics" weight="0"/>
        <neighbor dest="602" relationship="city" weight="0"/>
      </neighbors>
      <speak>The University of California, Berkeley  and are members of both the Pacific-12 Conference and the Mountain Pacific Sports Federation in the NCAA.</speak>
      <zh-speak>柏克萊加州大學，全稱柏克萊加利福尼亞大學（英语：University of California, Berkeley，也縮寫為柏克萊加大、英语：UC Berkeley、Berkeley或Cal，也常譯為柏克萊大學或加州大學柏克萊分校），是美國的一所公立研究型大學，位於舊金山東灣柏克萊市的山丘上，為世界上最傑出及最享負盛名的高等公立學府。其許多科系位于全球大学排行前十名，也是美國最佳公立大學之一。伯克利加大是加利福尼亞大學中的旗艦大學，為最古老的一所，它也是美國大學協會的創始會員之一。学校每学期为本科生和研究生提供近300门可选课程。学校总面积为约27平方公里，中心校园面积约为0.8平方公里。在美國的大學運動聯賽裡，因以往只有一所加州大學，因此伯克利一直以加州大學（California）作校名，簡稱Cal，並沿用至今；其吉祥物蛻變自加州徽號，故其學生亦常自稱「金色小熊」（Golden Bears/Cal Bears）。柏克萊研究水平非常堅厚，柏克萊科研人員發現6種化學元素，若計入與其關係密切的勞倫斯伯克利國家實驗室更多達16種，位居世界第一，其中鉳（Berkelium）更以柏克萊來命名。根據美國國家科學研究委員會的調查，柏克萊擁有全美最多十大傑出研究課程。柏克萊分校曾有72位教職員或學生為諾貝爾獎得主、9位沃爾夫獎、7位菲爾茲獎、15位圖靈獎、45位麥克阿瑟獎 、20位奧斯卡金像獎及11位普立茲獎得主。除了學術成就外，柏克萊分校在體育運動上亦傲視全球，其校友共獲得159面奧林匹克運動會獎牌（91金、40銀、28銅），其中在單一年度內（2008年）曾獲17面獎牌，是美國學校的歷史紀錄，校友纳塔莉·考芙林是首位在同一屆奧運（2008年）中獲得六面獎牌的女性、11面獎牌（包括8面金牌）得主馬特·尼古拉斯·比昂迪更打破12項世界紀錄；學校賽艇代表隊曾三次代表美國在奧運會奪金亦是世界紀錄。</zh-speak>
    </Feature>
    <Feature data="Alistair Sinclair" zh-data="阿利斯泰爾·辛克萊爾" id="521" uri="http://dbpedia.org/resource/Alistair_Sinclair">
      <neighbors/>
      <speak>Alistair Sinclair  is a British computer scientist and computational theorist.Sinclair received his B.A. in Mathematics from St. John’s College, Cambridge in 1979, and his Ph.D. in Computer Science from the University of Edinburgh in 1988 under the supervision of Mark Jerrum.</speak>
      <zh-speak>阿利斯泰爾·辛克萊爾（英语：Alistair Sinclair）是英國著名的電腦科學家與計算理論家，曾獲哥德爾獎。辛克萊爾於1979年大學畢業於劍橋大學，隨後於1988年自愛丁堡大學得到電腦科學博士學位，目前在柏克萊加州大學任教，並在愛丁堡大學、DIMACS、柏克萊國際電腦科學院都曾有任職。</zh-speak>
    </Feature>
    <Feature data="Harvard University" zh-data="哈佛大学" id="522" uri="http://dbpedia.org/resource/Harvard_University">
      <neighbors>
        <neighbor dest="332" relationship="type" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="532" relationship="state" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Harvard University is a private Ivy League research university in Cambridge, Massachusetts, established in 1636. Its history, influence and wealth have made it one of the most prestigious universities in the world.Established originally by the Massachusetts legislature and soon thereafter named for John Harvard  northwest of Boston; the business school and athletics facilities, including Harvard Stadium, are located across the Charles River in the Allston neighborhood of Boston and the medical, dental, and public health schools are in the Longwood Medical Area.</speak>
      <zh-speak>哈佛大學（英文：Harvard University）為一所本部坐落於麻省（麻薩諸塞州）劍橋市的私立研究型大學，並因歷史、學術地位、影響力、財富等因素而獲評為世上最享負盛名的學府之一。哈佛於1636年由當地的殖民地立法機關立案成立，迄今為全美歷史最悠久的高等學府，並擁有北美最古老的校董委員會。 其最初稱之為「新學院」，該機構為了感謝一名年輕的牧師約翰·哈佛所作出的捐贈，而改名為「哈佛學院」。雖然從沒有與任何宗教派別有正式的聯繫，但早期的學院還是以培養公理會及一位論派神職者為主要職責。可是自18世紀起，其課程與學生群體的宗教性質漸漸淡化，而19世紀的哈佛則進一步成為了波士頓精英的文化起源地。美國南北戰爭後，當時的校長查爾斯·艾略特將哈佛各個學術機構綜合成了一所研究型大學，並增添了小班授課以及入學考試，而這些模式同時也影響了國家的中高等教育政策。此校亦為美國大學協會其中一個原始成員，並在經濟大蕭條及二次大戰後進一步修改了課程及收生政策。後與拉德克利夫學院合併成為了男女校。校方目前共有十所學院及一所高等研究院。這些單位偏佈鄰近各區：其本部位於劍橋的哈佛庭院；醫學、公共衛生及牙醫學院位於波士頓的長木醫學區；而包括哈佛體育場在內的大學體育設施以及商學院則在奧爾斯頓。哈佛同時擁有龐大的資產，每年所收到的捐款回贈數目長期位列全球教育機構之首。哈佛大學為全美最難入讀的學府之一。 學校的研究生課程較為多元化，而本科教育則主要集中在文理學範疇。校方在2007年起實行了財政援助政策，家庭年收入低於一定數目的學生獲得不同程度的學費豁免。 哈佛擁有全美最古老的圖書館系統，這同時也是全球最具規模的私立及大學圖書館系統，館藏量逾1600萬冊。 其為常春藤盟校成員之一，現共有42支參與不同運動競賽的代表隊，屬全美大學體育協會甲組。除了體育，學生的課外生活還包括各個學會所舉辦的活動。哈佛有眾多知名人士。此校校友涵蓋8名美國總統及多國領袖與政治要員。其亦培養了62名富豪企業家及335位羅德學者，人數均為全美最多。另外，也有150多名諾貝爾獎得主現在或曾經在哈佛學習或工作。</zh-speak>
    </Feature>
    <Feature data="Mark Overmars" zh-data="" id="523" uri="http://dbpedia.org/resource/Mark_Overmars">
      <neighbors>
        <neighbor dest="505" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="486" relationship="residence" weight="0"/>
        <neighbor dest="385" relationship="field" weight="0"/>
        <neighbor dest="524" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Markus Hendrik "Mark" Overmars .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Utrecht University" zh-data="乌特勒支大学" id="524" uri="http://dbpedia.org/resource/Utrecht_University">
      <neighbors>
        <neighbor dest="486" relationship="country" weight="0"/>
      </neighbors>
      <speak>Utrecht University  and Hans Amman.</speak>
      <zh-speak>乌特勒支大学（荷蘭語：Universiteit Utrecht），荷兰最古老大学之一，也是欧洲规模最大的大学之一。乌特勒支大学坐落在荷兰乌特勒支市，创办于1636年3月26日。2004年入学学生有26,787人，教职员工8,224人，其中有570正教授。乌特勒支大学是荷兰综合实力最强的大学，也是欧洲最好的研究型大学之一，大学排名荷兰第一，欧洲第六，世界第五十三，乌特勒支大学一直以强大的研究实力，高质量的教育水准，和良好的学术声誉而享誉欧洲。乌特勒支大学除了法学院，经济学院以及下属的UCU坐落在乌特勒支城市之内外，其余学院包括图书馆全部坐落于城市东边的Uithof区。</zh-speak>
    </Feature>
    <Feature data="Waddinxveen" zh-data="瓦丁斯芬" id="525" uri="http://dbpedia.org/resource/Waddinxveen">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="486" relationship="country" weight="0"/>
      </neighbors>
      <speak>Waddinxveen . This is the lowest place in the Dutch polders.</speak>
      <zh-speak>瓦丁斯芬（荷蘭語：Waddinxveen，）是荷兰南荷兰省的一个镇和基层政权。位于豪韦河（Gouwe）畔。2004年人口26,304。面积29.39 km² ，其中1.52 km²为水域。</zh-speak>
    </Feature>
    <Feature data="Dirk van Dalen" zh-data="" id="526" uri="http://dbpedia.org/resource/Dirk_van_Dalen">
      <neighbors/>
      <speak>Dirk van Dalen  is a Dutch mathematician and historian of science.Van Dalen studied mathematics and physics and astronomy at the University of Amsterdam.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Hans L. Bodlaender" zh-data="" id="527" uri="http://dbpedia.org/resource/Hans_L._Bodlaender">
      <neighbors>
        <neighbor dest="486" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Hans Leo Bodlaender  is a Dutch computer scientist, a professor of computer science at Utrecht University.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ron Rivest" zh-data="罗纳德·李维斯特" id="528" uri="http://dbpedia.org/resource/Ron_Rivest">
      <neighbors>
        <neighbor dest="438" relationship="work institution" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="382" relationship="birth place" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="506" relationship="doctoral student" weight="0"/>
        <neighbor dest="533" relationship="field" weight="0"/>
        <neighbor dest="596" relationship="award" weight="0"/>
      </neighbors>
      <speak>Ronald Linn Rivest   He also authored the MD2, MD4, MD5 and MD6 cryptographic hash functions.</speak>
      <zh-speak>罗纳德·李维斯特 （英语：Ronald Linn Rivest，1947年－）是一名美国密码学家。他是麻省理工学院电子工程和计算机科学部门 (EECS)计算机科学的一名教授 和麻省理工学院之计算机科学和人工智能实验室 (CSAIL)的成员。他与阿迪·萨莫尔和伦纳德·阿德曼共同发明了RSA加密演算法；以及在密码学和计算机科学等领域做出许多杰出贡献而知名。RSA被广泛使用在计算机安全应用上，包括https。2002年，他与阿迪·萨莫尔和伦纳德·阿德曼一起因在公钥密码学RSA加密演算法取得的杰出贡献而获得图灵奖。</zh-speak>
    </Feature>
    <Feature data="Brown University" zh-data="布朗大学" id="529" uri="http://dbpedia.org/resource/Brown_University">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Brown University is a private Ivy League research university in Providence, Rhode Island.Founded in 1764 as "The College in the English Colony of Rhode Island and Providence Plantations," Brown is the seventh-oldest institution  of higher education in the United States and one of the nine Colonial Colleges established before the American Revolution.</speak>
      <zh-speak>布朗大学（Brown University）位于美国罗德岛州普罗维登斯市，是美国八所著名常春藤盟校之一。布朗大学也是美国第一所可以接受任何宗教背景的学生入学的高校。布朗大学的入学竞争极为激烈，本科生入学率仅为8%，部分专业录取率不足5%，这是全美所有具有博士授予权的高校中列于第6最低的接受率。在校学生来自全美50个州，以及世界上百个不同的国家。布朗大学的资金资助项目每年以奖学金，助学金，贷款等形式向学生提供大约7亿美元的资助，这使得超过50%的学生可以获得资助。布朗大学于1847年在所有常春藤盟校中最早成立了面向本科生的工程系，它同时也是最早开始重视传媒教育的高校，学生在现代文化与媒介系里能够学习电影赏析与评论等各种批评理论。该校最大的特征之一就是小而精，在当今大学人数不断增长的语境下，布朗大学堪称小型的研究型大学，全职教师不到700人，本科生6000人，研究生2000人。但在这样少量的教师队伍中，就有五位诺贝尔奖得主，还有两位校友获得诺贝尔奖。本科生中，主修社会科学、人文学科的分别占42%和26%，还有17%和14%的学生主修生命科学与物理科学。布朗的学生们对布朗的大学教育经历相当满意。大部分人相信布朗生涯给他的未来做了最好的准备，认为“布朗教纲”、布朗的学术自由和教育哲学非常优秀。更多的布朗人甚至说，如果有选择的话，愿意再上布朗读一次大学，而92%的人将鼓动自己的孩子读布朗。</zh-speak>
    </Feature>
    <Feature data="Computer security" zh-data="计算机安全" id="530" uri="http://dbpedia.org/resource/Computer_security">
      <neighbors/>
      <speak>Computer security is security applied to computing devices such as computers and smartphones, as well as computer networks such as private and public networks, including the whole Internet.</speak>
      <zh-speak>计算机安全（computer security）是计算机与网络领域的信息安全（information security）的一个分支。其目的是在保证信息和财产可被受权用户正常获取和使用的情况下，保护此信息和财产不受偷窃，污染，自然灾害等的损坏。计算机系统安全是指一系列包含敏感和有价值的信息和服务的进程和机制，不被未得到授权和不被信任的个人，团体或事件公开，修改或损坏。由于它的目的在于防止不需要的行为发生而非使得某些行为发生，其策略和方法常常与其他大多数的计算机技术不同。</zh-speak>
    </Feature>
    <Feature data="Cambridge" zh-data="劍橋" id="531" uri="http://dbpedia.org/resource/Cambridge">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="290" relationship="country" weight="0"/>
      </neighbors>
      <speak>The city of Cambridge . This makes Cambridge the second largest city in Cambridgeshire after Peterborough, and the 54th largest in the United Kingdom.</speak>
      <zh-speak>劍橋（英语：Cambridge，舊譯康橋），英國英格蘭東區域劍橋郡的城市、自治市鎮-非都市區，是英國歷史最悠久的大學城。在這裡，除了劍橋大學建築之外，還有商店、公園、茶藝館，以及代表劍橋現代化一面的百貨公司，商店及運動設施。康河上可以泛舟，在劍橋可以參加音樂會或步行到郊外欣賞幽美景色，也可以和劍橋居民一樣，享受騎腳踏車的樂趣。</zh-speak>
    </Feature>
    <Feature data="Massachusetts" zh-data="麻薩諸塞州" id="532" uri="http://dbpedia.org/resource/Massachusetts">
      <neighbors>
        <neighbor dest="119" relationship="Dance" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="139" relationship="title" weight="0"/>
      </neighbors>
      <speak>Massachusetts /ˌmæsəˈtʃuːsɨts/, officially the Commonwealth of Massachusetts, is a state in the New England region of the northeastern United States.</speak>
      <zh-speak>马萨诸塞州（又作：麻省、麻州或者麻薩諸塞州；英语：Massachusetts）正式名稱為马萨诸塞聯邦（Commonwealth of Massachusetts）位於美國東北部，為美國的一州，是新英格蘭地區的一部份。根据美国2012年人口估算显示，该州共有人口664.6万。</zh-speak>
    </Feature>
    <Feature data="Cryptography" zh-data="密码学" id="533" uri="http://dbpedia.org/resource/Cryptography">
      <neighbors/>
      <speak>Cryptography  was involved in a case in the United States which questioned whether requiring suspected criminals to provide their decryption keys to law enforcement is unconstitutional.</speak>
      <zh-speak>密碼學（英语：cryptology，在西欧語文中，源於希臘語kryptós“隱藏的”，和gráphein“書寫”）是研究如何隱密地傳遞信息的学科。在現代特別指對信息以及其傳輸的數學性研究，常被认為是数学和计算机科学的分支，和信息论也密切相关。著名的密碼學者Ron Rivest解釋道：「密碼學是關於如何在敵人存在的環境中通訊」，自工程學的角度，這相當于密碼學與純數學的異同。密碼學是信息安全等相關議題，如認證、访问控制的核心。密碼學的首要目的是隱藏訊息的涵義，並不是隱藏訊息的存在。密碼學也促進了计算机科学，特別是在於電腦與網路安全所使用的技術，如访问控制與資訊的機密性。密碼學已被應用在日常生活：包括自动柜员机的芯片卡、電腦使用者存取密碼、電子商務等等。密码学（英语：cryptology），下包括密码编码学（英语：cryptography）与密码分析（英语：cryptanalysis）。常见的“密码学”通常指密码编码学。</zh-speak>
    </Feature>
    <Feature data="Information assurance" zh-data="信息保障" id="534" uri="http://dbpedia.org/resource/Information_assurance">
      <neighbors/>
      <speak>Information assurance  is the practice of assuring information and managing risks related to the use, processing, storage, and transmission of information or data and the systems and processes used for those purposes.</speak>
      <zh-speak>信息保障（英語：Information assurance，簡稱：IA）是為了確保信息和有關使用風險的管理實踐，而使用的信息或數據的處理，儲存，傳輸，系統與流程。</zh-speak>
    </Feature>
    <Feature data="Computational complexity theory" zh-data="計算複雜性理論" id="535" uri="http://dbpedia.org/resource/Computational_complexity_theory">
      <neighbors/>
      <speak>Computational complexity theory is a branch of the theory of computation in theoretical computer science and mathematics that focuses on classifying computational problems according to their inherent difficulty, and relating those classes to each other.</speak>
      <zh-speak>计算复杂性理论（Computational complexity theory）是理论计算机科学和数学的一个分支，它致力于将可计算问题根据它们本身的复杂性分类，以及将这些类别联系起来。一个可计算问题被认为是一个原则上可以用计算机解决的问题，亦即这个问题可以用一系列机械的数学步骤解决，例如算法。如果一个问题的求解需要相当多的资源（无论用什么算法），则被认为是难解的。计算复杂性理论通过引入数学计算模型来研究这些问题以及定量计算解决问题所需的资源（时间和空间），从而将资源的确定方法正式化了。其他复杂性测度同样被运用，比如通信量（应用于通信复杂性），电路中门的数量（应用于电路复杂性）以及中央处理器的数量（应用于并行计算）。计算复杂性理论的一个作用就是确定一个能或不能被计算机求解的问题的所具有的实际限制。在理论计算机科学领域，与此相关的概念有算法分析和可计算性理论。两者之间一个关键的区别是前者致力于分析用一个确定的算法来求解一个问题所需的资源量，而后者则是在更广泛意义上研究用所有可能的算法来解决相同问题。更精确地说，它尝试将问题分成能或不能在现有的适当受限的资源条件下解决这两类。相应地，在现有资源条件下的限制正是区分计算复杂性理论和可计算性理论的一个重要指标：后者关心的是何种问题原则上可以用算法解决。</zh-speak>
    </Feature>
    <Feature data="Williams College" zh-data="威廉姆斯学院" id="536" uri="http://dbpedia.org/resource/Williams_College">
      <neighbors>
        <neighbor dest="532" relationship="state" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Williams College is a private liberal arts college located in Williamstown, Massachusetts, United States.</speak>
      <zh-speak>威廉姆斯學院（英语：Williams College），是一所位於美国马萨诸塞州威廉姆斯镇的私立文理学院，为全美排名最佳的文理大学之一，校友不乏政商名流。 学校于1793年建立。学术课程分三类(人文学科、科学与社会研究)，24个系别，33个专业，和美术史与发展经济学的硕士课程。教职员数315，而学生与教职员的比率是7:1。当2009年，学本科生约2124人，研究生约49人。学年为4-1-4体制(两个四门学科的学期，中间加上一个一门学科的1月学期)。暑假时，约200多学生与教授一起做研究。</zh-speak>
    </Feature>
    <Feature data="Hardness of approximation" zh-data="" id="537" uri="http://dbpedia.org/resource/Hardness_of_approximation">
      <neighbors/>
      <speak>In computer science, hardness of approximation is a field  that studies the algorithmic complexity of finding near-optimal solutions to optimization problems.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Matrix multiplication" zh-data="矩陣乘法" id="538" uri="http://dbpedia.org/resource/Matrix_multiplication">
      <neighbors/>
      <speak>In mathematics, matrix multiplication is a binary operation that takes a pair of matrices, and produces another matrix.</speak>
      <zh-speak>這篇文章給出多種矩陣相乘方法的綜述。</zh-speak>
    </Feature>
    <Feature data="Springer Science+Business Media" zh-data="施普林格科学+商业媒体" id="539" uri="http://dbpedia.org/resource/Springer_Science+Business_Media">
      <neighbors/>
      <speak>Springer Science+Business Media or Springer is a global publishing company that publishes books, e-books and peer-reviewed journals in science, technical and medical  publishing.</speak>
      <zh-speak>施普林格科学+商业媒体（Springer Science+Business Media）或施普林格（Springer，宽式IPA：/ˈʃpʁɪŋɐ/）是在柏林成立 一个总部位于德国的世界性出版公司，它出版教科书、学术参考书以及同行评论性杂志，专注于科学、技术、数学以及医学领域。在科学、技术与医学领域中，施普林格是最大的书籍出版者，以及第二大世界性杂志出版者（最大的是爱思唯尔）。施普林格拥有超过60个出版社，每年出版1 900种杂志，5 500种新书，营业额为9.24亿欧元（2006年），雇有超过5 000名员工[1] 。施普林格在柏林、海德堡、多德雷赫特（位于荷兰）与纽约设有主办事处。施普林格亚洲总部设在香港。2005年8月，施普林格在北京成立代表处。</zh-speak>
    </Feature>
    <Feature data="Lecture Notes in Computer Science" zh-data="" id="540" uri="http://dbpedia.org/resource/Lecture_Notes_in_Computer_Science">
      <neighbors/>
      <speak>Springer Lecture Notes in Computer Science  are two sub-series of LNCS. The editorial team for LNCS is based in Heidelberg, Germany, but much of the production work has since been outsourced to India.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Quantum computing" zh-data="量子计算机" id="541" uri="http://dbpedia.org/resource/Quantum_computing">
      <neighbors/>
      <speak>Quantum computing studies theoretical computation systems , which can be in superpositions of states.</speak>
      <zh-speak>量子计算机（英语：Quantum computer），是一种使用量子邏輯實現通用計算的設備。不同於电子计算机（或稱傳統電腦），量子計算用來存儲數據的對象是量子比特，它使用量子算法來進行數據操作。</zh-speak>
    </Feature>
    <Feature data="Michael Sipser" zh-data="" id="542" uri="http://dbpedia.org/resource/Michael_Sipser">
      <neighbors/>
      <speak>Michael Fredric Sipser is a professor of Applied Mathematics in the Theory of Computation Group at the Massachusetts Institute of Technology.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Coding theory" zh-data="编码理论" id="543" uri="http://dbpedia.org/resource/Coding_theory">
      <neighbors/>
      <speak>Coding theory is the study of the properties of codes and their fitness for a specific application.</speak>
      <zh-speak>編碼理論是數學和計算機科學的一個分支，處理在噪聲信道傳送資料時的錯誤傾向。按照編碼理論，資料傳送時會採用更好的方法以修正傳送途中所產生的大量錯誤。编码共分两类： 信源编码（数据压缩） 信道编码（前向纠错）</zh-speak>
    </Feature>
    <Feature data="Indian American" zh-data="" id="544" uri="http://dbpedia.org/resource/Indian_American">
      <neighbors>
        <neighbor dest="126" relationship="population place" weight="0"/>
        <neighbor dest="577" relationship="population place" weight="0"/>
      </neighbors>
      <speak>Indian Americans  are Americans of Indian ancestry and comprise about 2.81 million people, alone or 3.18 million, combined with one or more races, about 1% of the U.S. population, the country's third largest self-reported Asian ancestry group after Chinese Americans and Filipino Americans, according to American Community Survey of 2010 data.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Manuel Blum" zh-data="曼纽尔·布卢姆" id="545" uri="http://dbpedia.org/resource/Manuel_Blum">
      <neighbors>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="520" relationship="work institution" weight="0"/>
        <neighbor dest="542" relationship="doctoral student" weight="0"/>
        <neighbor dest="511" relationship="doctoral student" weight="0"/>
        <neighbor dest="514" relationship="doctoral student" weight="0"/>
        <neighbor dest="568" relationship="work institution" weight="0"/>
        <neighbor dest="596" relationship="award" weight="0"/>
      </neighbors>
      <speak>Manuel Blum  is a Venezuelan computer scientist who received the Turing Award in 1995 "In recognition of his contributions to the foundations of computational complexity theory and its application to cryptography and program checking".</speak>
      <zh-speak>曼纽尔·布卢姆 （英语：Manuel Blum，1938年4月26日－）是1995年因其計算複雜性理論杰出贡献和密码学和编程校验上的应用而获得图灵奖的一名计算机科学家。</zh-speak>
    </Feature>
    <Feature data="Guggenheim Fellowship" zh-data="" id="546" uri="http://dbpedia.org/resource/Guggenheim_Fellowship">
      <neighbors/>
      <speak>Guggenheim Fellowships are grants that have been awarded annually since 1925 by the John Simon Guggenheim Memorial Foundation to those "who have demonstrated exceptional capacity for productive scholarship or exceptional creative ability in the arts." Each year, the foundation makes several hundred awards in each of two separate competitions: one open to citizens and permanent residents of the United States and Canada.  the other to citizens and permanent residents of Latin America and the Caribbean.The performing arts are excluded, although composers, film directors, and choreographers are eligible.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Algorithmic game theory" zh-data="" id="547" uri="http://dbpedia.org/resource/Algorithmic_game_theory">
      <neighbors/>
      <speak>Algorithmic game theory is an area in the intersection of game theory and algorithm design, whose objective is to design algorithms in strategic environments.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Database theory" zh-data="資料庫理論" id="548" uri="http://dbpedia.org/resource/Database_theory">
      <neighbors/>
      <speak>Database theory encapsulates a broad range of topics related to the study and research of the theoretical realm of databases and database management systems.Theoretical aspects of data management include, among other areas, the foundations of query languages, computational complexity and expressive power of queries, finite model theory, database design theory, dependency theory, foundations of concurrency control and database recovery, deductive databases, temporal and spatial databases, real time databases, managing uncertain data and probabilistic databases, and Web data.Most research work has traditionally been based on the relational model, since this model is usually considered the simplest and most foundational model of interest.</speak>
      <zh-speak>資料庫理論（Database theory）指資料庫與資料庫管理系統的相關理論與研究。</zh-speak>
    </Feature>
    <Feature data="Database" zh-data="数据库" id="549" uri="http://dbpedia.org/resource/Database">
      <neighbors/>
      <speak>A database is an organized collection of data.</speak>
      <zh-speak>数据库，简单来说是本身可視為電子化的檔案櫃——儲存电子檔案的處所，使用者可以對檔案中的資料執行新增、擷取、更新、刪除等操作。数据库指的是以一定方式储存在一起、能为多个用户共享、具有尽可能小的冗余度、与应用程序彼此独立的数据集合。</zh-speak>
    </Feature>
    <Feature data="Logic in computer science" zh-data="计算机逻辑" id="550" uri="http://dbpedia.org/resource/Logic_in_computer_science">
      <neighbors/>
      <speak>Logic in computer science covers the overlap between the field of logic and that of computer science.</speak>
      <zh-speak>计算机逻辑描述应用于计算机科学和人工智能的逻辑。它包括：以在计算机科学中的应用为导向的逻辑学研究。例如：组合子逻辑和抽象释义；以逻辑形式自然表达的计算机科学基本概念。例如：编程语言的形式语义，霍尔逻辑和逻辑编程；计算理论的关注形式逻辑的基本问题的方面。例如：Curry-Howard对应和博弈语义；被当作应用计算机科学的逻辑工具。例如：自动定理证明和模型效验。软件（和硬件）开发的形式方法，比如在Z符号中使用谓词逻辑。基本数理逻辑比如命题逻辑和谓词逻辑（通常联合上集合论）的研究被认为是对任何大学计算机科学课程都非常重要的理论基础。高阶逻辑通常不教，但在定理证明工具如HOL中是很重要的。有相关的一个年刊IEEE Symposium on Logic in Computer Science（LICS）。</zh-speak>
    </Feature>
    <Feature data="Oxford" zh-data="牛津" id="551" uri="http://dbpedia.org/resource/Oxford">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="290" relationship="country" weight="0"/>
      </neighbors>
      <speak>Oxford  is a city in southern England and the county town of Oxfordshire.</speak>
      <zh-speak>牛津（英语：Oxford），英國英格蘭東南區域牛津郡的行政總部、非都市郡區和城市地位，為牛津大學－英語國家中歷史最久的大學的發源地，人口大约在165,000左右，其中153,900住在中央城区。中央城区位于伦敦西南方向80公里处。著名的查威尔河与泰晤士河贯穿牛津，于城市南部中央交匯。</zh-speak>
    </Feature>
    <Feature data="Academia Europaea" zh-data="" id="552" uri="http://dbpedia.org/resource/Academia_Europaea">
      <neighbors/>
      <speak>Academia Europaea founded in 1988, is a European non-governmental scientific association acting as an Academy.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Information system" zh-data="信息系统" id="553" uri="http://dbpedia.org/resource/Information_system">
      <neighbors/>
      <speak>An information system  that an organization uses, and also the way in which people interact with this technology in support of business processes.Some authors make a clear distinction between information systems, computer systems, and business processes.</speak>
      <zh-speak>信息系统或資訊系統（Information Systems），從技術上說就是為了支持決策和組織控製而收集（或獲取）、處理、存儲、分配信息的一組相互關聯的組件。除了支持決策、協作和控制，信息系統也可用來幫助經理和工人分析解決問題，使復雜性可視化，以及創造新的產品，從商業角度看，一個信息系統是一個用於解決環境提出的挑戰的、基於信息技術的組織管理方案。通常用“信息系統”這個詞時，特指依賴於計算機技術的信息系統。一个基于计算机的信息系统是以计算机软件、硬件、存储和电信等技术为核心的人机系统信息系統是由一系列相互關聯的組件構成，是通過信息的收集，處理，存儲及發佈為組織決策和組織控制提供支持的系統。信息系統包括組織內部及其周邊環境中所有重要人員，地理​​位置，和事物的相關信息。來自《Management Information Systems Managing The Digital Firm》</zh-speak>
    </Feature>
    <Feature data="Vienna University of Technology" zh-data="维也纳科技大学" id="554" uri="http://dbpedia.org/resource/Vienna_University_of_Technology">
      <neighbors>
        <neighbor dest="387" relationship="state" weight="0"/>
      </neighbors>
      <speak>The Vienna University of Technology . The university's teaching and research is focused on engineering and natural sciences.</speak>
      <zh-speak>维也纳科技大学 (德语：Technische Universität Wien)是奥地利首都维也纳的主要大学之一，其前身为成立于1815年的"帝国皇家理工学院"(KK音标：Polytechnisches Institut)，现有约26200名学生(含19%的国际学生和30%的女生)，4000名教职工(其中1800名教师)。学校的教学与科研以工程学和自然科学见长。</zh-speak>
    </Feature>
    <Feature data="Royal Society Wolfson Research Merit Award" zh-data="" id="555" uri="http://dbpedia.org/resource/Royal_Society_Wolfson_Research_Merit_Award">
      <neighbors/>
      <speak>The Royal Society Wolfson Research Merit Award is an award to outstanding scientists holding posts at UK universities, originally announced in 2000. It is administered by the Royal Society and jointly funded by the Wolfson Foundation and the UK Office of Science and Technology, this scheme aims "to give universities additional support to attract key researchers, with great potential or outstanding achievement, to this country or to retain those who might seek to gain higher salaries elsewhere." to tackle the brain drain.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Italians" zh-data="義大利人" id="556" uri="http://dbpedia.org/resource/Italians">
      <neighbors>
        <neighbor dest="334" relationship="population place" weight="0"/>
        <neighbor dest="79" relationship="population place" weight="0"/>
      </neighbors>
      <speak>Italians , and are distinguished from people of Italian descent and from ethnic Italians living in territories adjacent to the Italian Peninsula.In 2010, in addition to about 56 million Italians in Italy, Italian-speaking autonomous groups are found in neighboring countries: about half a million in Switzerland, a large population in France, and smaller groups in Slovenia and Croatia, primarily in Istria and Dalmatia.</speak>
      <zh-speak>義大利人（意大利语：Italiani），或意大利人，是義大利公民與義大利僑民的統稱。義大利人是歐洲民族其中之一的族群，源出於義大利。義大利人擁有義大利文化和豐富的文化遺產，母語是意大利语。法律上的義大利公民稱為義大利共和國人，不論祖先或國家或居住地。(《義大利國籍法》採用血统主义原則)，主要以生活在義大利半島與鄰近地區為區隔。2010年時，約有5600萬人居住在義大利。而鄰國瑞士有約50萬義大利人，法國也有一大部分人口是義大利人。斯洛維尼亞和克羅埃西亞的義大利人族群較小，主要居住在伊斯特里亞半島和達爾馬提亞。義大利僑民約有500萬人具義大利公民身分，而約有將近8000萬人帶有全部或一部份義大利血統。這些離開義大利生活的人，最主要是在南美洲、北美洲，澳洲及部分歐洲。</zh-speak>
    </Feature>
    <Feature data="Institute for Scientific Information" zh-data="" id="557" uri="http://dbpedia.org/resource/Institute_for_Scientific_Information">
      <neighbors/>
      <speak>The Institute for Scientific Information , Engineering, Biology, Chemistry, and Physics.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Academy of Sciences Leopoldina" zh-data="利奥波第那科学院" id="558" uri="http://dbpedia.org/resource/Academy_of_Sciences_Leopoldina">
      <neighbors/>
      <speak>The Leopoldina is the national academy of Germany.Historically it was known under the German name Deutsche Akademie der Naturforscher Leopoldina until 2007, when it was declared a national academy of Germany.The Leopoldina is located in Halle.</speak>
      <zh-speak>利奥波第那科学院（德语：Deutsche Akademie der Naturforscher Leopoldina），是德國的國家科學院。利奥波第那科学院总部现位于哈勒。德国一直未有全国性的科学院，直至2007年11月，利奥波第那科学院升格为德国国家级科学院。利奥波第那科学院成立于1652年，是世界上存续时间最长的学术机构〈研究中心〉。</zh-speak>
    </Feature>
    <Feature data="Wittgenstein-Preis" zh-data="" id="559" uri="http://dbpedia.org/resource/Wittgenstein-Preis">
      <neighbors/>
      <speak>The Wittgenstein-Preis is the highest Austrian science award.It is awarded once per year by the Austrian Science Fund on behalf of the Austrian Ministry for Science.The prize money of 1.5 million euro is tied to research activities in the following six years.The recipients are selected by an international jury of experts.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Austrian Academy of Sciences" zh-data="" id="560" uri="http://dbpedia.org/resource/Austrian_Academy_of_Sciences">
      <neighbors>
        <neighbor dest="387" relationship="headquarters" weight="0"/>
        <neighbor dest="467" relationship="child6 agency" weight="0"/>
      </neighbors>
      <speak>The Austrian Academy of Sciences  is a legal entity under the special protection of the Republic of Austria.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Royal Society" zh-data="皇家学会" id="561" uri="http://dbpedia.org/resource/Royal_Society">
      <neighbors/>
      <speak>The President, Council, and Fellows of the Royal Society of London for Improving Natural Knowledge, commonly known as the Royal Society, is a learned society for science, and is possibly the oldest such society still in existence.</speak>
      <zh-speak>倫敦皇家自然知識促進學會（英语：The Royal Society of London for Improving Natural Knowledge），簡稱皇家学会（Royal Society），是英国资助科学发展的组织，成立于1660年，并于1662年、1663年、1669年领到皇家的各种特许证。学会宗旨是促进自然科学的发展，它是世界上历史最长而又从未中断过的科学学会，在英国起着国家科学院的作用。英女王是学会的保护人。</zh-speak>
    </Feature>
    <Feature data="Semantic Web" zh-data="语义网" id="562" uri="http://dbpedia.org/resource/Semantic_Web">
      <neighbors/>
      <speak>The Semantic Web is a collaborative movement led by international standards body the World Wide Web Consortium .According to the W3C, "The Semantic Web provides a common framework that allows data to be shared and reused across application, enterprise, and community boundaries". The term was coined by Tim Berners-Lee for a web of data that can be processed by machines.While its critics have questioned its feasibility, proponents argue that applications in industry, biology and human sciences research have already proven the validity of the original concept.</speak>
      <zh-speak>语义网（Semantic Web）是由万维网联盟的蒂姆·伯纳斯-李（Tim Berners-Lee）在1998年提出的一个概念，它的核心是：通过给万维网上的文档（如: HTML）添加能够被计算机所理解的语义（Meta data），从而使整个互联网成为一个通用的信息交换媒介。语义万维网通过使用标准、置标语言和相关的处理工具来扩展万维网的能力。不过语意网概念实际上是基于很多已有技术的，也依赖于后来和text-and-markup与知识表现的综合。那些渊源甚至可以追溯到20世纪60年代末期的Allan M. Collins、M. Ross Quillian、Elizabeth F. Loftus等人的研究，还有之后70年代初R.F.Simon、R.C.Schamk、Minsky等人陆续提出的一些理论上的成果，其中Simon在进行自然语言理解的应用研究时提出了语义网络Semantic Network（不是现在的Semantic Web）的概念。当时人们甚至发明了以逻辑为基础的程序设计语言Prolog。"语义"网是由比现今成熟的网际搜索工具更加行之有效的、更加广泛意义的并且自动聚集和搜集信息的文档组成的。其最基本的元素就是语义链接。通过下列方法可以提升全球資訊網以及其互连的资源的易用性（usability）和實用性（usefulness）："标记"了语义信息的文档。这可以是机器可以理解的关于文档内容（例如文档的作者,标题,简介等)的描述,或者是描述该网站所拥有的服务和资源.(注意:任何东西都是能被URI-统一资源定位符-所描述的,因此语义网能理解人物、地方、想法、類別等等)通用元数据詞滙表(本体论)及詞滙間的影射使得文檔作者知道如何來標記文檔方可讓機器識別他想提供的元數據.利用元数据为语义网用户执行任务的自动软件代理(agent).為自動軟件代理提供特定信息的網絡服务 (例如,可信度服務可以讓軟件代理查詢某個在线商店是否曾經有過不良紀錄或者發送過垃圾郵件).</zh-speak>
    </Feature>
    <Feature data="Serialization" zh-data="序列化" id="563" uri="http://dbpedia.org/resource/Serialization">
      <neighbors/>
      <speak>In computer science, in the context of data storage, serialization is the process of translating data structures or object state into a format that can be stored .</speak>
      <zh-speak>序列化在计算机科学中通常有以下定義:對同步控制而言，表示強制在同一時間內進行單一存取。在數據储存與傳送的部分是指將一個對象存儲至一個儲存媒介，例如檔案或是記億體緩衝等，或者透過網絡傳送資料時進行編碼的過程，可以是位元組或是XML等格式。而位元組的或XML編碼格式可以還原完全相等的對象。這程序被應用在不同應用程式之間傳送對象，以及伺服器將對象儲存到檔案或資料庫。相反的過程又稱為反序列化。</zh-speak>
    </Feature>
    <Feature data="JSON" zh-data="JSON" id="564" uri="http://dbpedia.org/resource/JSON">
      <neighbors/>
      <speak>JSON , or JavaScript Object Notation, is an open standard format that uses human-readable text to transmit data objects consisting of attribute–value pairs.</speak>
      <zh-speak>JSON（JavaScript Object Notation）是一種由道格拉斯·克羅克福特構想設計、輕量級的資料交換語言，以文字為基礎，且易於讓人閱讀。儘管JSON是Javascript的一個子集，但JSON是獨立於語言的文本格式，並且採用了類似於C語言家族的一些習慣。</zh-speak>
    </Feature>
    <Feature data="Application programming interface" zh-data="应用程序接口" id="565" uri="http://dbpedia.org/resource/Application_programming_interface">
      <neighbors/>
      <speak>In computer programming, an application programming interface  in that an API is source code-based while an ABI is a binary interface.</speak>
      <zh-speak>应用程序接口（英语：Application Programming Interface，简称：API），又称为应用编程接口，就是软件系统不同组成部分衔接的约定。由於近年來软件的规模日益庞大，常常需要把复杂的系统划分成小的组成部分，编程接口的设计十分重要。程序设计的实践中，编程接口的设计首先要使软件系统的职责得到合理划分。良好的接口设计可以降低系统各部分的相互依赖，提高组成单元的内聚性，降低组成单元间的耦合程度，从而提高系统的维护性和扩展性。</zh-speak>
    </Feature>
    <Feature data="Linked data" zh-data="鍵連資料" id="566" uri="http://dbpedia.org/resource/Linked_data">
      <neighbors/>
      <speak>In computing, linked data  describes a method of publishing structured data so that it can be interlinked and become more useful through semantic queries.</speak>
      <zh-speak>鍵連資料是正在快速發展的語義網的一系列的活動，它描述了一套在全球資訊網上發佈、分享、及連結資料的方法。主要以可參照的URI作為最基本的要素、以RDF作為描述連結的語言。</zh-speak>
    </Feature>
    <Feature data="Resource Description Framework" zh-data="資源描述框架" id="567" uri="http://dbpedia.org/resource/Resource_Description_Framework">
      <neighbors>
        <neighbor dest="562" relationship="domain" weight="0"/>
      </neighbors>
      <speak>The Resource Description Framework  specifications  originally designed as a metadata data model.</speak>
      <zh-speak>资源描述框架（英语：Resource Description Framework，縮寫为RDF），是万维网联盟（W3C）提出的一组标记语言的技术标准，以便更为丰富地描述和表达网络资源的内容与结构。</zh-speak>
    </Feature>
    <Feature data="Carnegie Mellon University" zh-data="" id="568" uri="http://dbpedia.org/resource/Carnegie_Mellon_University">
      <neighbors>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>Carnegie Mellon University , College of Fine Arts, Dietrich College of Humanities and Social Sciences, Mellon College of Science, Tepper School of Business, H. John Heinz III College and the School of Computer Science.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Cornell University" zh-data="康乃爾大學" id="569" uri="http://dbpedia.org/resource/Cornell_University">
      <neighbors>
        <neighbor dest="382" relationship="state" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Cornell University  as well as the numerous university owned lands in New York.Since its founding, Cornell has been a co-educational, non-sectarian institution where admission is offered irrespective of religion or race.</speak>
      <zh-speak>康乃爾大學（英语：Cornell University）是一所位于美国纽约州伊萨卡的私立研究型大学，另有两所分校位于纽约市和卡塔尔教育城，是著名的常春藤盟校成员。康乃尔大学由埃兹拉·康乃尔和安德鲁·迪克森·怀特于1865年所建立，為八个常春藤盟校中唯一一所在美国独立战争后创办的。康乃尔大学男女同校，不分信仰和种族皆可入學。自学校成立伊始，其创始人就期待将康大辦成一所全科型的新式大学，教授内容从文学名著至自然科学，自理论研究擴及实际应用，无所不包。此一理念最终成为康乃尔的校训：「我將创办一所任何人在此都能获得所有学科教育的学府」（I would found an institution where any person can find instruction in any study）。康乃尔大学有七个本科生学院和七个研究生学院，每个学院都自主制订学术计划。2001年，康乃尔在卡塔尔建立了一所新的医学院，并宣示：「藉由教育明日的領導者與拓展知識的新領域來服務社會」（to serve society by educating the leaders of tomorrow and extending the frontiers of knowledge）。目前康乃尔的校友逾240萬名，先后有超過40位师生获頒诺贝尔奖。科學研究是康乃尔的興學方針，在2004年7月至2005年6月之间的财政年度中，共有5.613亿美元被应用於各項领域的研究。</zh-speak>
    </Feature>
    <Feature data="IBM Almaden Research Center" zh-data="" id="570" uri="http://dbpedia.org/resource/IBM_Almaden_Research_Center">
      <neighbors/>
      <speak>The IBM Almaden Research Center is in Almaden Valley  of land in the hills above Silicon Valley.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="University of Paderborn" zh-data="帕德博恩大学" id="571" uri="http://dbpedia.org/resource/University_of_Paderborn">
      <neighbors/>
      <speak>The University of Paderborn .RailCab is a research project by the University of Paderborn.</speak>
      <zh-speak>帕德博恩大学(德语名:Universität Paderborn,简称：UPB)座落在德国北莱茵-威斯特法伦州的帕德博恩市，创立于1972年，</zh-speak>
    </Feature>
    <Feature data="Operations research" zh-data="運籌學" id="572" uri="http://dbpedia.org/resource/Operations_research">
      <neighbors/>
      <speak>Operations research, or operational research in British usage, is a discipline that deals with the application of advanced analytical methods to help make better decisions.</speak>
      <zh-speak>运筹学（Operations Research，又被称作作业研究），是一门應用數學学科，利用统计学和数学模型等方法，去尋找複雜問題中的最佳或近似最佳的解答。运筹学经常用于解决现实生活中的复杂问题，特别是改善或优化现有系统的效率。研究运筹学的基础知识包括矩阵论和离散数学，在应用方面多与仓储、物流等领域相关。因此运筹学与应用数学、工业工程专业密切相关。运筹学是一门研究怎么样处理事情更有效的学科，比如机械动作合理安排，计算机的多线程，高层建筑材料的合理分配，不同动植物的共同养殖等都是当今社会经济发展的热点。</zh-speak>
    </Feature>
    <Feature data="IBM Research" zh-data="IBM研究院" id="573" uri="http://dbpedia.org/resource/IBM_Research">
      <neighbors/>
      <speak>IBM Research is IBMs research and development division.</speak>
      <zh-speak>IBM研究院是IBM公司的一個（研究）部門，是一個研究與先進發展的組織，該部門目前分佈在全球八個地方，並正進行著數百個研究專案，這個部門最早可追溯到1945年成立於哥倫比亞大學的華生科學運算實驗室（Watson Scientific Computing Laboratory）。詳見此IBM研究院的主要研究活動包括創新材料與結構的發明、高效能微處理器及電腦、分析方法與工具、演算法、軟體架構、管理方法、從資料進行搜尋並探知意向。過去許多知名的科技發展也都出自此部門，例如DES（Data Encryption Standard）加密演算、經典的電腦程式語言：FORTRAN（Formula Translation System）、本華·曼德博（Benoît B. Mandelbrot）的報告書中發表了分形（Fractal）、磁性碟片儲存（硬碟）、用單一個電晶體即可記憶一個比特的動態RAM（Dynamic Random Access Memory，DRAM）、精簡指令集電腦（RISC）架構、以及關聯式資料庫等。IBM研究院在物理科學上也有所貢獻，包括掃描隧道顯微鏡（簡稱：STM）以及高溫超導等，此兩項成就都獲得了諾貝爾獎。IBM研究院在全球拥有八个實驗室，其中三處在美國本土，分别是：托马斯·Ｊ·沃森研究中心（Thomas J. Watson Research Center）共分佈在三個位置，分別是紐約州約克鎮（Yorktown, New York）、霍桑（Hawthorne, New York）、以及马萨诸塞州剑桥（Cambridge, Massachusetts）。愛曼登研究中心（Almaden Research Center），位于加利福尼亚州聖荷西（矽谷）。奧斯汀研究實驗室（Austin Research Lab），位于德克萨斯州奧斯汀。而在美國本土之外的五處為：瑞士的蘇黎世以色列的海法日本的東京中國的北京印度的德里</zh-speak>
    </Feature>
    <Feature data="Embedded system" zh-data="嵌入式系统" id="574" uri="http://dbpedia.org/resource/Embedded_system">
      <neighbors/>
      <speak>An embedded system is a computer system with a dedicated function within a larger mechanical or electrical system, often with real-time computing constraints.</speak>
      <zh-speak>嵌入式系统（Embedded system），是一种「嵌入机械或电气系统内部、具有专属功能的计算机系统」，通常要求实时计算性能。被嵌入的系统通常是包含硬件和机械部件的完整设备。相反，通用计算机如个人计算机则设计灵活，以满足广大终端用户的需求。现在常见的很多设备都采用嵌入式系统控制。现代嵌入式系统通常是基于微控制器（如含集成内存和/或外设接口的中央处理单元）的；但普通微处理器（使用外部存储芯片和外设接口电路）也很常见，特别是在较复杂的系统中。通用型处理器、专门进行某类计算的处理器、为手持应用订制设计的处理器等，都可能应用到嵌入式系统。常见的典型专用处理器有数字信号处理器。嵌入式系统的关键特性是专用于处理特定的任务，因此工程师能对其进行优化，以降低产品的体积和成本，提升可靠性和性能。嵌入式系统的物理形态包括便携设备如电子表和MP3播放器，大型固定装置如交通灯、工厂控制器，大型复杂系统如混合动力汽车、磁共振成像设备、航空电子设备等。它们的复杂度低至单片机，高至大型底盘或外壳内安装有多个部件、外设和网络。</zh-speak>
    </Feature>
    <Feature data="Peripheral" zh-data="外部设备" id="575" uri="http://dbpedia.org/resource/Peripheral">
      <neighbors/>
      <speak>A peripheral is a "device that is used to put information into or get information out of the computer."There are three different types of peripherals: Input, used to interact with, or send data to the computer ↑</speak>
      <zh-speak>外部裝置（英语：Peripherals 或 英语：Peripheral Devices），又叫周边设备、外部设备（简称外设），是能够通电并正常运行的计算机的非必须硬件设备。它们可以独立或半独立工作而不依赖于计算机，通常可以扩展或提高所接入的计算机的功能或性能。包括输入输出设备和部分存储设备。如键盘、鼠标、扫描仪、摄像头、显示器、打印机、光盘驱动器、UPS 不间断电源和其它闪存盘、储存卡读卡器、數位相框、MP3/MP4 播放器、移动硬盘等 USB 设备或便携设备。正常的计算机即使去除这些设备，也能开机进入准备工作的就绪状态（虽然对使用者来说，操作这样的计算机可能变得困难或不可行）。</zh-speak>
    </Feature>
    <Feature data="Compiler" zh-data="編譯器" id="576" uri="http://dbpedia.org/resource/Compiler">
      <neighbors/>
      <speak>A compiler is a computer program , code generation, and code optimization.</speak>
      <zh-speak>编译器（Compiler），是一種電腦程式，它會將用某種程式語言寫成的原始碼（原始語言），轉換成另一種程式語言（目標語言）。它主要的目的是將便于人编写，阅读，维护的高级计算机语言所寫作的原始碼程式，翻译为计算机能解读、运行的低阶机器语言的程序，也就是執行檔。编译器将原始程序（Source program）作为输入，翻译产生使用目标语言（Target language）的等价程序。源代码一般为高阶语言（High-level language），如Pascal、C、C++、C# 、Java等，而目标语言则是汇编语言或目标机器的目标代码（Object code），有时也称作机器代码（Machine code）。一个现代编译器的主要工作流程如下：源代码（source code）→ 预处理器（preprocessor）→ 编译器（compiler）→ 汇编程序（assembler）→ 目标代码（object code）→ 链接器（Linker）→ 執行檔（executables）</zh-speak>
    </Feature>
    <Feature data="Houston" zh-data="休斯敦" id="577" uri="http://dbpedia.org/resource/Houston">
      <neighbors>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
      </neighbors>
      <speak>Houston  east of where the city was established.</speak>
      <zh-speak>休斯敦（英语：Houston）是美國德克薩斯州的第一大城，全美國第四大城，墨西哥灣沿岸最大的經濟中心。面積達1,440平方公里，市名是以當年德克薩斯共和國總統山姆·休士頓（Sam Houston）命名的。休士頓是哈里斯縣（全國第三大縣）的縣城。休士頓在密蘇里市的東面，西南部分伸入福遍縣，東北一小部分伸入蒙哥馬利縣。休士頓創建於1836年，合併於1837年，是美國成長最迅速的大城市之一，也是全美最大的一個沒有規劃法的大城市。1900年，休士頓有45,000人口，排名美國第85位。2000年美國人口統計指出，城市人口總數達到190萬人（2004年已超過2百萬人）。大休士頓都會區是美國第七大都會區（10個縣，5,180,443人）。 休士頓以其能源（特別是石油）、航空工業和運河聞名世界。休士頓港是世界第六大港口，美國最繁忙的港口，外輪噸位第一，不分國籍則居第二位。財富500強總部僅次於紐約市。休斯敦是德克薩斯醫療中心的所在地，世界最大和最重要的研究和治療機構的集中地。休士頓還是美國27個超過170萬人口的重要大都會地區中生活消費和房價最低的。休士頓被全球化和世界城市研究小組和網絡（GaWC）稱為「全球城市」。 休士頓的官方綽號為「太空城（Space City）」，因為它是約翰遜航空中心的所在地，任務監控中心也設在這裡（因此，「休斯敦」是在月球上說的第一個詞）。許多當地人喜愛稱作「牛沼城」。其他綽號還有「H鎮」、「腳爪城」或「蒙古城」。休士頓是一個擁有多重文化的城市，許多外來移民的社區在此發展。其美術館區是許多文化機構和展覽的天堂，每年吸引將進七百萬的遊客，在休士頓常能看見活躍的視覺表演藝術。</zh-speak>
    </Feature>
    <Feature data="Physics" zh-data="物理学" id="578" uri="http://dbpedia.org/resource/Physics">
      <neighbors/>
      <speak>Physics  is the natural science that involves the study of matter and its motion through space and time, along with related concepts such as energy and force.</speak>
      <zh-speak>物理學（拉丁语：Physica，希腊语：Φυσική，英语：Physics）是一門自然科學，注重于研究物質、能量、空間、時間，尤其是它們各自的性質與彼此之間的相互關係。物理學是關於大自然規律的知識；更廣義地說，物理學探索分析大自然所發生的現象，以了解其規則。物理學是最古老的學術之一。在過去兩千多年間，物理學與化學、天文學都歸屬於自然哲學的範疇，直到十七世紀歐洲的科學革命之後，物理學才從自然哲學中獨立出來，成為了一門自然科學。物理學與其它很多跨領域研究有相當的交集，如量子化學、生物物理學等等。物理學的疆界並不是固定不變的，物理學裡的創始突破時常可以用來解釋這些跨領域研究的基礎機制，有時還會開啟嶄新的跨領域研究。物理學是自然科學中最基礎的學科之一。經過嚴謹思考論證，物理學者會提出表述大自然現象與規律的假说。倘若這假说能夠通過大量嚴格的實驗檢驗，則可以被歸類為物理定律。但正如很多其他自然科學理論一樣，這些定律不能被證明，其正確性只能靠著反覆的實驗來檢驗。通過創立新理論與發展新科技，物理學對於人類文明有極為顯著的貢獻。例如，由於電磁學的快速進展，電燈、電動機、家用電器等新產品纷纷涌现，人類社會的生活水平也得到大幅提升。由於核子物理學日趨成熟，核能發電不再是藍圖構想，但引致的安全問題也使人們意識到地球的脆弱。</zh-speak>
    </Feature>
    <Feature data="Electronic circuit" zh-data="電子電路" id="579" uri="http://dbpedia.org/resource/Electronic_circuit">
      <neighbors/>
      <speak>An electronic circuit is composed of individual electronic components, such as resistors, transistors, capacitors, inductors and diodes, connected by conductive wires or traces through which electric current can flow.</speak>
      <zh-speak>電子電路（Electronic circuit）：將各式各樣的電子元件，形成一迴路電路，進行電信號的運算，電子元件形成電路為電子電路。</zh-speak>
    </Feature>
    <Feature data="Computer architecture" zh-data="计算机系统结构" id="580" uri="http://dbpedia.org/resource/Computer_architecture">
      <neighbors/>
      <speak>In electronics engineering and computer engineering, computer architecture is a set of disciplines that describes a computer system by specifying its parts and their relations.</speak>
      <zh-speak>抽象来說，计算机系统结构，或称计算机体系结构，是一个系统在其所处环境中最高层次的概念；它确定一台计算机硬件和软件之间的衔接。具體地說计算机体系结构指的是電腦系統設計的觀念與架構，描述電腦在實做的設計原则。它确定一个计算机设计的： 部件 部件功能 部件间接口並且计算机体系结构著重於「負責了計算機架構的中心功能：計算」的中央處理器(CPU)內部的執行動作與記憶體的存取。注意，不要与处理器领域的微体系结构/微架構(Microarchitecture)相混淆。</zh-speak>
    </Feature>
    <Feature data="Athens" zh-data="雅典" id="581" uri="http://dbpedia.org/resource/Athens">
      <neighbors/>
      <speak>Athens  and the Athens Trilogy, consisting of the National Library of Greece, the Athens University and the Academy of Athens.</speak>
      <zh-speak>雅典（希臘語：Αθήνα，古希腊语：αἱ Άθῆναι 英語：Athens）是希腊首都，也是希腊最大的城市。雅典位于巴尔干半岛南端，三面环山，一面傍海，西南距爱琴海法利龙湾8公里，属亚热带地中海气候。基菲索斯河和伊利索斯河穿城而过。市内多小山。雅典是世界上最古老的城市之一，有记载的历史就长达3000多年。现在雅典是欧洲第八大城市。雅典是希腊经济、财政、工业、政治和文化中心。雅典也是欧盟商业中心之一。市区人口330万，加上郊区人口共有380万人口。城市的面积为39平方公里，加上郊区为412平方公里。古雅典是一个强大的城邦，是驰名世界的文化古城。希腊是西方哲学的搖籃，是柏拉图学院和亚里士多德的讲学场所的所在地。苏格拉底、希罗多德、伯里克利、索福克勒斯、阿里斯托芬、欧里庇得斯、埃斯库罗斯和其他著名的哲学家、政治家和文学家都在雅典诞生或居住过，雅典也因此被称作“西方文明的摇篮”和民主的起源地。公元前5世纪和4世纪在文化和政治上的成就对欧洲及世界文化产生重大影响。雅典至今仍保留了很多历史遗迹和大量的艺术作品，其中最著名的是雅典卫城的帕提农神庙，是西方文化的象征。雅典是現代奥运会起源的地方。1896年曾举办过第一届夏季奥运会。2004年，第二十八届夏季奥林匹克运动会在雅典举行。</zh-speak>
    </Feature>
    <Feature data="Game theory" zh-data="" id="582" uri="http://dbpedia.org/resource/Game_theory">
      <neighbors/>
      <speak>Game theory is the study of strategic decision making.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Knuth Prize" zh-data="高德納獎" id="583" uri="http://dbpedia.org/resource/Knuth_Prize">
      <neighbors/>
      <speak>The Donald E. Knuth Prize is a prize for outstanding contributions to the foundations of computer science, named after Donald E. Knuth.</speak>
      <zh-speak>高德納獎（英语：Donald E. Knuth Prize）， 授予为计算机科学基础做出杰出贡献的人，以計算機科學家高德納（Donald E. Knuth）命名。高德纳奖始于1996年，每1.5年颁发一次，包括5000美元奖金。现在奖项由 ACM计算机理论研讨会和IEEE计算机科学基础研讨会交替颁发。高德纳奖的获得者由颁奖委员会选出。颁奖委员会由六名选自ACM算法与计算理论特别兴趣组和IEEE计算机数学基础技术委员会的独立的教授组成。委员会将会特别注意一个持续高效的记录和为计算机科学基础做出的开创性的贡献。选择范围也可能部分包括教育方面的成就和贡献，例如编写基础方面的教科书和培养高质量的学生。但是奖项不是基于公众服务工作的，尽管一个获奖者可能涵盖了前文所述的服务工作。</zh-speak>
    </Feature>
    <Feature data="National Technical University of Athens" zh-data="国立雅典理工大学" id="584" uri="http://dbpedia.org/resource/National_Technical_University_of_Athens">
      <neighbors>
        <neighbor dest="581" relationship="city" weight="0"/>
      </neighbors>
      <speak>The National Technical University of Athens . Undergraduate studies have a duration of five years.</speak>
      <zh-speak>国立雅典理工大学（希腊语：Εθνικό Μετσόβιο Πολυτεχνείο，簡稱ΕΜΠ），通常称作雅典理工，希腊雅典的一所国立大学。成立于1837年。</zh-speak>
    </Feature>
    <Feature data="Paris Kanellakis" zh-data="" id="585" uri="http://dbpedia.org/resource/Paris_Kanellakis">
      <neighbors>
        <neighbor dest="581" relationship="birth place" weight="0"/>
        <neighbor dest="529" relationship="workplaces" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="79" relationship="citizenship" weight="0"/>
        <neighbor dest="584" relationship="alma mater" weight="0"/>
        <neighbor dest="517" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="728" relationship="award" weight="0"/>
      </neighbors>
      <speak>Paris Christos Kanellakis  was a computer scientist.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Joseph S. B. Mitchell" zh-data="" id="586" uri="http://dbpedia.org/resource/Joseph_S._B._Mitchell">
      <neighbors>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="569" relationship="workplaces" weight="0"/>
        <neighbor dest="79" relationship="residence" weight="0"/>
        <neighbor dest="517" relationship="doctoral advisor" weight="0"/>
      </neighbors>
      <speak>Joseph S. B. Mitchell is an American computer scientist and mathematician.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Aktiengesellschaft" zh-data="" id="587" uri="http://dbpedia.org/resource/Aktiengesellschaft">
      <neighbors/>
      <speak>Aktiengesellschaft , South Tyrol and for companies incorporated in the German-speaking region of Belgium.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Alexander L. Wolf" zh-data="" id="588" uri="http://dbpedia.org/resource/Alexander_L._Wolf">
      <neighbors>
        <neighbor dest="519" relationship="award" weight="0"/>
        <neighbor dest="472" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>Alexander Lee "Alex" Wolf  is a Professor in Computing at Imperial College London.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="I-Logix" zh-data="" id="589" uri="http://dbpedia.org/resource/I-Logix">
      <neighbors>
        <neighbor dest="519" relationship="sign" weight="0"/>
        <neighbor dest="4" relationship="industry" weight="0"/>
        <neighbor dest="728" relationship="parent company" weight="0"/>
      </neighbors>
      <speak>I-Logix was a leading provider of Collaborative Model driven development .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="SIGGRAPH" zh-data="SIGGRAPH" id="590" uri="http://dbpedia.org/resource/SIGGRAPH">
      <neighbors>
        <neighbor dest="519" relationship="organizer" weight="0"/>
      </neighbors>
      <speak>SIGGRAPH  convened by the ACM SIGGRAPH organization.</speak>
      <zh-speak>SIGGRAPH是由ACM SIGGRAPH（美国计算机协会计算机图形专业组）组织的计算机图形学顶级年度会议。第一届SIGGRAPH会议于1974年召开。该会议有上万名计算机从业者参加，最近一次在温哥华举行。过去的SIGGRAPH曾经在达拉斯，波士顿，西雅图，新奥尔良，圣地亚哥和美国的其他地点举办。SIGGRAPH 2011于2011年在温哥华举行，这是SIGGRAPH首次在美国以外的城市举行。</zh-speak>
    </Feature>
    <Feature data="Stuart Feldman" zh-data="斯圖亞特·費爾德曼" id="591" uri="http://dbpedia.org/resource/Stuart_Feldman">
      <neighbors>
        <neighbor dest="519" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Stuart Feldman is the creator of the computer software program make for UNIX systems.</speak>
      <zh-speak>斯圖亞特·費爾德曼（英语：Stuart Feldman），著名計算機科學家。他在UNIX系統上，開發出最早的 make 工具程式，以及第一個 FORTRAN 77編譯器。 曾服務於貝爾實驗室，擔任過IBM 軟體部門副總裁，現在 google工作。2006年至2008年間，擔任计算机协会主席。</zh-speak>
    </Feature>
    <Feature data="Alan Perlis" zh-data="艾伦·佩利" id="592" uri="http://dbpedia.org/resource/Alan_Perlis">
      <neighbors>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
        <neighbor dest="519" relationship="work institution" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="440" relationship="work institution" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="596" relationship="award" weight="0"/>
        <neighbor dest="731" relationship="award" weight="0"/>
        <neighbor dest="888" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Alan Jay Perlis  was an American computer scientist known for his pioneering work in programming languages and the first recipient of the Turing Award.</speak>
      <zh-speak>艾倫·傑·佩利（Alan Jay Perlis，1922年4月1日－1990年2月7日），生于美国宾夕法尼亚州匹兹堡，是美国计算机程序设计领域的科学家，首届图灵奖的获得者。</zh-speak>
    </Feature>
    <Feature data="Wendy Hall" zh-data="" id="593" uri="http://dbpedia.org/resource/Wendy_Hall">
      <neighbors>
        <neighbor dest="519" relationship="known for" weight="0"/>
        <neighbor dest="562" relationship="field" weight="0"/>
        <neighbor dest="561" relationship="award" weight="0"/>
      </neighbors>
      <speak>Dame Wendy Hall, DBE, FREng, FRS  is the Professor of Computer Science at the University of Southampton, England.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Adele Goldberg (computer scientist)" zh-data="" id="594" uri="http://dbpedia.org/resource/Adele_Goldberg_(computer_scientist)">
      <neighbors>
        <neighbor dest="519" relationship="work institution" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="77" relationship="work institution" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="83" relationship="alma mater" weight="0"/>
        <neighbor dest="902" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Adele Goldberg  from 1984 to 1986, and, together with Alan Kay and Dan Ingalls, received the ACM Software Systems Award in 1987 and was also included in Forbes's "Twenty Who Matter". She also received PC Magazine's Lifetime Achievement Award in 1996. In 1994 she was inducted as a Fellow of the Association for Computing Machinery.Many of the concepts developed by Goldberg and her team at PARC became the basis for graphically based user interfaces, replacing the earlier command line based systems.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Bill Curtis" zh-data="" id="595" uri="http://dbpedia.org/resource/Bill_Curtis">
      <neighbors>
        <neighbor dest="450" relationship="organization" weight="0"/>
        <neighbor dest="519" relationship="organization" weight="0"/>
      </neighbors>
      <speak>Bill Curtis is best known for leading the development of the Capability Maturity Model and the People CMM in the Software Engineering Institute at Carnegie Mellon University, and for championing the spread of software process improvement and software measurement globally.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Turing Award" zh-data="图灵奖" id="596" uri="http://dbpedia.org/resource/Turing_Award">
      <neighbors>
        <neighbor dest="519" relationship="presenter" weight="0"/>
        <neighbor dest="382" relationship="country" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>The ACM A.M. Turing Award is an annual prize given by the Association for Computing Machinery  to "an individual selected for contributions of a technical nature made to the computing community". It is stipulated that "The contributions should be of lasting and major technical importance to the computer field". The Turing Award is generally recognized as the highest distinction in computer science and the "Nobel Prize of computing".The award is named after Alan Turing, mathematician and reader in mathematics at the University of Manchester.</speak>
      <zh-speak>图灵奖（Turing Award，又譯杜林獎），是计算机协会（ACM）于1966年设立的，又稱“A.M.图灵奖”，专门奖励对计算机事业作出重要贡献的个人。其名称取自世界计算机科学的先驱、英国科学家，英国曼徹斯特大学教授艾伦·图灵（Professor Alan Turing），这个奖设立目的之一是纪念这位現代電腦、计算机奠基者。获奖者必须是在计算机领域具有持久而重大的先进性的技术贡献。大多数获奖者是计算机科学家。图灵奖是计算机界最负盛名的奖项，有“计算机界诺贝尔奖”之称。图灵奖对获奖者的要求极高，评奖程序也极严，一般每年只奖励一名计算机科学家，只有极少数年度有两名以上在同一方向上做出贡献的科学家同时获奖。2014年11月13日之前图灵奖由英特尔公司以及Google公司赞助，奖金为250,000美元。2014年11月13日，虽然英特尔退出赞助，Google反而将奖金提高到1,000,000美元，和诺贝尔奖金相近。每年，美国计算机协会将要求提名人推荐本年度的图灵奖候选人，并附加一份200到500字的文章，说明被提名者为什么应获此奖。任何人都可成为提名人。美国计算机协会将组成评选委员会对被提名者进行严格的评审，并最终确定当年的获奖者。</zh-speak>
    </Feature>
    <Feature data="Special Interest Group on Information Retrieval" zh-data="" id="597" uri="http://dbpedia.org/resource/Special_Interest_Group_on_Information_Retrieval">
      <neighbors>
        <neighbor dest="519" relationship="parent organisation" weight="0"/>
      </neighbors>
      <speak>SIGIR is the Association for Computing Machinery's Special Interest Group on Information Retrieval.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ACM Eugene L. Lawler Award" zh-data="" id="598" uri="http://dbpedia.org/resource/ACM_Eugene_L._Lawler_Award">
      <neighbors>
        <neighbor dest="519" relationship="presenter" weight="0"/>
        <neighbor dest="382" relationship="country" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>The ACM Eugene L. Lawler Award is awarded every two or three years by the Association for Computing Machinery to an individual or a group of individuals who have made a significant contribution to the use of information technology for humanitarian purposes in a wide range of social domains.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Association of Pacific Rim Universities" zh-data="环太平洋大学联盟" id="599" uri="http://dbpedia.org/resource/Association_of_Pacific_Rim_Universities">
      <neighbors/>
      <speak>The Association of Pacific Rim Universities , formed in 1997, is a consortium of leading research universities in the Pacific Rim.</speak>
      <zh-speak>环太平洋大学联盟（Association of Pacific Rim Universities；APRU）创立于1997年，是由环太平洋地区各国一流的研究型大学所组成的联盟。联盟的宗旨是“发展（会员学校间的）教育、研究和创新的合作，为亞太地區的经济、科技和文化的进步作贡献”。联盟目前共有37所会员学校。</zh-speak>
    </Feature>
    <Feature data="National Collegiate Athletic Association" zh-data="全美大學體育協會" id="600" uri="http://dbpedia.org/resource/National_Collegiate_Athletic_Association">
      <neighbors>
        <neighbor dest="334" relationship="region served" weight="0"/>
        <neighbor dest="79" relationship="headquarter" weight="0"/>
      </neighbors>
      <speak>The National Collegiate Athletic Association .</speak>
      <zh-speak>全国大学体育协会（英文：National Collegiate Athletic Association，縮寫：NCAA），是美国和加拿大拥有1281个体育协会或个人组成的全国性业余体育协会，非营利机构，总部位于印地安纳州印地安纳波利斯。1973年8月，在一场特别会议上，现在的联盟等级(Division I, Division II, and Division III)的设置被确立。在现在的规则下，Divison I和Division II的学校可以向运动员发放体育奖学金，而Division III的学校则不能。 通常情况下大型学校参加Division I而小一点的学校参加Division II和Division III。根据NCAA的最新报告，Division III的运动员拥有最高的成绩绩点。</zh-speak>
    </Feature>
    <Feature data="Pacific-12 Conference" zh-data="太平洋十二校聯盟" id="601" uri="http://dbpedia.org/resource/Pacific-12_Conference">
      <neighbors>
        <neighbor dest="600" relationship="Association" weight="0"/>
      </neighbors>
      <speak>The Pacific-12 Conference . With Arizona State's softball title in 2011, the conference won its 400th NCAA Championship.The current commissioner of the conference is Larry Scott who replaced Thomas C. Hansen, who retired in July 2009 after 26 years in that position.</speak>
      <zh-speak>太平洋十二校聯盟（Pacific-12 Conference）是一個美國西部的大學體育聯盟。</zh-speak>
    </Feature>
    <Feature data="Berkeley, California" zh-data="伯克利" id="602" uri="http://dbpedia.org/resource/Berkeley,_California">
      <neighbors>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="424" relationship="South" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
      </neighbors>
      <speak>Berkeley  is a city on the east shore of San Francisco Bay in northern Alameda County, California.</speak>
      <zh-speak>伯克利（英文：Berkeley）是美国加利福尼亞州阿拉米達縣內的一座城市，位於舊金山灣區東北部、奧克蘭以北，市政府建制於1878年4月4日。1853年，美國人从西班牙人手中买下，做为陆地观海点而建立。1866年，重新命名为伯克利。人口約102,743人（2000年數據）。为柏克萊加州大學（建于1868年）校址，而校園南邊則為該區著名街道電報街（Telegraph Avenue）的開頭。</zh-speak>
    </Feature>
    <Feature data="List of mathematical symbols" zh-data="" id="603" uri="http://dbpedia.org/resource/List_of_mathematical_symbols">
      <neighbors>
        <neighbor dest="535" relationship="category" weight="0"/>
        <neighbor dest="607" relationship="Name" weight="0"/>
        <neighbor dest="608" relationship="Name" weight="0"/>
        <neighbor dest="609" relationship="category" weight="0"/>
        <neighbor dest="610" relationship="Name" weight="0"/>
        <neighbor dest="611" relationship="Name" weight="0"/>
        <neighbor dest="612" relationship="symbol" weight="0"/>
        <neighbor dest="613" relationship="symbol" weight="0"/>
        <neighbor dest="614" relationship="Name" weight="0"/>
        <neighbor dest="615" relationship="Name" weight="0"/>
        <neighbor dest="616" relationship="Name" weight="0"/>
        <neighbor dest="617" relationship="readas" weight="0"/>
        <neighbor dest="618" relationship="symbol" weight="0"/>
        <neighbor dest="619" relationship="category" weight="0"/>
        <neighbor dest="620" relationship="symbol" weight="0"/>
        <neighbor dest="621" relationship="Name" weight="0"/>
        <neighbor dest="622" relationship="Name" weight="0"/>
        <neighbor dest="623" relationship="category" weight="0"/>
        <neighbor dest="624" relationship="category" weight="0"/>
        <neighbor dest="625" relationship="Name" weight="0"/>
        <neighbor dest="626" relationship="category" weight="0"/>
        <neighbor dest="627" relationship="category" weight="0"/>
        <neighbor dest="628" relationship="Name" weight="0"/>
        <neighbor dest="629" relationship="category" weight="0"/>
        <neighbor dest="630" relationship="Name" weight="0"/>
        <neighbor dest="631" relationship="Name" weight="0"/>
        <neighbor dest="632" relationship="Name" weight="0"/>
        <neighbor dest="633" relationship="Name" weight="0"/>
        <neighbor dest="634" relationship="Name" weight="0"/>
        <neighbor dest="635" relationship="Name" weight="0"/>
        <neighbor dest="636" relationship="Name" weight="0"/>
        <neighbor dest="637" relationship="Name" weight="0"/>
        <neighbor dest="638" relationship="Name" weight="0"/>
        <neighbor dest="639" relationship="Name" weight="0"/>
        <neighbor dest="640" relationship="Name" weight="0"/>
        <neighbor dest="641" relationship="category" weight="0"/>
        <neighbor dest="642" relationship="Name" weight="0"/>
        <neighbor dest="643" relationship="category" weight="0"/>
        <neighbor dest="644" relationship="Name" weight="0"/>
        <neighbor dest="645" relationship="Name" weight="0"/>
        <neighbor dest="646" relationship="Name" weight="0"/>
        <neighbor dest="647" relationship="Name" weight="0"/>
        <neighbor dest="648" relationship="Name" weight="0"/>
        <neighbor dest="649" relationship="Name" weight="0"/>
        <neighbor dest="650" relationship="Name" weight="0"/>
        <neighbor dest="651" relationship="category" weight="0"/>
        <neighbor dest="652" relationship="category" weight="0"/>
        <neighbor dest="653" relationship="Name" weight="0"/>
        <neighbor dest="654" relationship="Name" weight="0"/>
        <neighbor dest="655" relationship="category" weight="0"/>
        <neighbor dest="656" relationship="Name" weight="0"/>
        <neighbor dest="657" relationship="category" weight="0"/>
        <neighbor dest="658" relationship="symbol" weight="0"/>
        <neighbor dest="659" relationship="Name" weight="0"/>
        <neighbor dest="660" relationship="Name" weight="0"/>
        <neighbor dest="661" relationship="category" weight="0"/>
        <neighbor dest="662" relationship="category" weight="0"/>
        <neighbor dest="663" relationship="category" weight="0"/>
        <neighbor dest="664" relationship="category" weight="0"/>
        <neighbor dest="665" relationship="Name" weight="0"/>
        <neighbor dest="666" relationship="category" weight="0"/>
        <neighbor dest="667" relationship="category" weight="0"/>
        <neighbor dest="668" relationship="symbol" weight="0"/>
        <neighbor dest="669" relationship="Name" weight="0"/>
        <neighbor dest="670" relationship="Name" weight="0"/>
        <neighbor dest="671" relationship="readas" weight="0"/>
        <neighbor dest="672" relationship="Name" weight="0"/>
        <neighbor dest="673" relationship="category" weight="0"/>
        <neighbor dest="674" relationship="Name" weight="0"/>
        <neighbor dest="675" relationship="Name" weight="0"/>
        <neighbor dest="676" relationship="category" weight="0"/>
        <neighbor dest="677" relationship="Name" weight="0"/>
        <neighbor dest="678" relationship="Name" weight="0"/>
        <neighbor dest="679" relationship="symbol" weight="0"/>
        <neighbor dest="680" relationship="category" weight="0"/>
        <neighbor dest="681" relationship="symbol" weight="0"/>
        <neighbor dest="682" relationship="Name" weight="0"/>
      </neighbors>
      <speak>This is a list of symbols found within all branches of mathematics to express a formula or to represent a constant.When reading the list, it is important to recognize that a mathematical concept is independent of the symbol chosen to represent it.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ronald V. Book" zh-data="" id="604" uri="http://dbpedia.org/resource/Ronald_V._Book">
      <neighbors>
        <neighbor dest="535" relationship="known for" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="522" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Ronald Vernon Book His papers are of great impact for computational complexity theory and term rewriting.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Nikolai Sergeevich Bakhvalov" zh-data="" id="605" uri="http://dbpedia.org/resource/Nikolai_Sergeevich_Bakhvalov">
      <neighbors>
        <neighbor dest="535" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Nikolai Sergeevich Bakhvalov  was a Soviet and Russian mathematician.Born in Moscow into the family of Sergei Vladimirovich Bakhvalov, a geometer a Moscow State University, N.S. Bakhvalov was exposed to mathematics from a young age.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Miklós Ajtai" zh-data="" id="606" uri="http://dbpedia.org/resource/Mikl%C3%B3s_Ajtai">
      <neighbors>
        <neighbor dest="535" relationship="fields" weight="0"/>
        <neighbor dest="6" relationship="residence" weight="0"/>
        <neighbor dest="79" relationship="residence" weight="0"/>
        <neighbor dest="583" relationship="awards" weight="0"/>
        <neighbor dest="570" relationship="workplaces" weight="0"/>
        <neighbor dest="728" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>Miklós Ajtai , exponential lower bounds, superlinear time-space tradeoffs for branching programs, and other "unique and spectacular" results.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Existential quantification" zh-data="存在量化" id="607" uri="http://dbpedia.org/resource/Existential_quantification">
      <neighbors/>
      <speak>In predicate logic, an existential quantification is a type of quantifier, a logical constant which is interpreted as "there exists," "there is at least one," or "for some." It expresses that a propositional function can be satisfied by at least one member of a domain of discourse.</speak>
      <zh-speak>在谓词逻辑中，存在量化是对一个域的至少一个成员的性质或关系的论断。使用叫做存在量词逻辑算子符号∃来指示存在量化。它相对于声称某些事物对所有事物都为真的全称量化。</zh-speak>
    </Feature>
    <Feature data="Equality (mathematics)" zh-data="等于" id="608" uri="http://dbpedia.org/resource/Equality_(mathematics)">
      <neighbors/>
      <speak>In mathematics equality is a relationship between two quantities or, more generally two mathematical expressions, asserting that the quantities have the same value or that the expressions represent the same mathematical object.</speak>
      <zh-speak>数学上，两个数学对象是相等的，若他们在各个方面都相同。这就定义了一个二元谓词等于，写作“=”；x = y 当且仅当x 和y 相等。通常意义上，等于是通过两个元素间的等价关系来构造的。将两个表达式用等于符号连起来，就构成了等式。注意，有些时候“A = B”并不表示等式。例如，T（n）= O(n2)表示在数量级 n2上渐进。因為这裡的符号“=”不滿足若且唯若的定義，所以它不等於等于符号；实际上，O(n2) = T（n）是没有意义的。请参见大O符号了解这部分内容。集合A 上的等于关系是种二元关系，满足自反性，对称性，反对称性和传递性。实际上，这是A 上唯一满足所有这些性质的关系。去掉对反对称性的要求，就是等价关系。相应的，给定任意等价关系R，可以构造商集A/R，并且这个等价关系将‘下降为’A/R 上的等于。在任何条件下都成立的等式称为恒等式，包含未知数的等式称为方程式。</zh-speak>
    </Feature>
    <Feature data="Predicate logic" zh-data="谓词逻辑" id="609" uri="http://dbpedia.org/resource/Predicate_logic">
      <neighbors/>
      <speak>In mathematical logic, predicate logic is the generic term for symbolic formal systems like first-order logic, second-order logic, many-sorted logic, or infinitary logic.</speak>
      <zh-speak>在数理逻辑中，谓词逻辑（Predicate logic）是符号形式系统的通用术语，比如一阶逻辑，二阶逻辑，多类逻辑或无穷逻辑等等。</zh-speak>
    </Feature>
    <Feature data="Universal quantification" zh-data="全称量化" id="610" uri="http://dbpedia.org/resource/Universal_quantification">
      <neighbors/>
      <speak>In predicate logic, a universal quantification is a type of quantifier, a logical constant which is interpreted as "given any" or "for all". It expresses that a propositional function can be satisfied by every member of a domain of discourse.</speak>
      <zh-speak>在谓词逻辑中，全称量化是尝试形式化某个事物（逻辑谓词）对于所有事物或所有有关的事物都为真的概念。结果的陈述是全称量化后的陈述，我们在谓词上有了全称量化。在符号逻辑中，全称量词（典型的"∀"）是用来指示全称量化的符号。</zh-speak>
    </Feature>
    <Feature data="Addition" zh-data="加法" id="611" uri="http://dbpedia.org/resource/Addition">
      <neighbors/>
      <speak>Addition . Repeated addition of 1 is the same as counting; addition of 0 does not change a number.</speak>
      <zh-speak>加法是基本的算术運算。加法即是將二個以上的數，合成一個數，其結果称為和。加法與減、乘、除合稱「四則運算」。表達加法的符號為加號（+）。進行加法時以加號將各項連接起來。把和放在等號（=）之後。例:1、2和4之和是7，就寫成：1+2+4=7。</zh-speak>
    </Feature>
    <Feature data="Asterisk" zh-data="星號" id="612" uri="http://dbpedia.org/resource/Asterisk">
      <neighbors/>
      <speak>An asterisk , or, more informally, splat.</speak>
      <zh-speak>星號（英文：asterisk，拉丁文：asteriscum，意謂「小星星」，來自希臘文 ἀστερίσκος）是印刷符號或字形。之所以稱為星號是因為與一般人印象中的星星相似。電腦科學家與數學家常稱之為「star」（例如「A*搜尋演算法」和「C*-代數」）。星號起源於歐洲封建時代，族譜印製者要表示出生日期的符號。最初的形狀是六芒，每一芒都像是由中央散開的淚珠。因此，有些電腦界的圈子稱之為「splat」（狀聲詞，類似中文的「啪」），或許是因為許多早期的列式印表機（line printer）印出來的星號看起來像是被壓扁的蟲子。很多文化有自己獨特的星號。中国与日本用的是「※」，看起來像是漢字的「米」。阿拉伯式的星號是六芒星。於某些字體，星號是五芒，阿拉伯星號則為八芒。</zh-speak>
    </Feature>
    <Feature data="Dagger (typography)" zh-data="剑标" id="613" uri="http://dbpedia.org/resource/Dagger_(typography)">
      <neighbors/>
      <speak>A dagger, or obelisk, U+2020 † dagger , is a variant with two handles.</speak>
      <zh-speak>剑标（†），HTML字符編碼為“†”，U+2020，是在星标之后的第二种脚注标记。原來用於天主教典禮中，指示何時應該劃十字聖號。双剑标（‡），HTML字符編碼為“‡”，U+2021，則是在剑标之后的第三种脚注标记，用来删除文本中的无关内容。由于剑标与双剑标也是基督教十字架的另一种造型，这两个符号标在人名前后是象征那人已经过世。所以在当作脚注标记使用时，千万不可把它们标在一个在世人的名字前后。历史上主要用于标注出译文中的重复赘余成分或错漏之处。</zh-speak>
    </Feature>
    <Feature data="Inequality (mathematics)" zh-data="不等" id="614" uri="http://dbpedia.org/resource/Inequality_(mathematics)">
      <neighbors/>
      <speak>Not to be confused with Inequation.</speak>
      <zh-speak>数学上，不等是表明两个对象的大小或者顺序的二元关系（参见等于）。不等关系主要有四种： a ＜ b，即 a 小于 b a ＞ b，即 a 大于 b上述两个属于严格不等。 a ≦ b，即 a 小于等于 b a ≧ b，即 a 大于等于 b a≠b，即 a 不等于 b将两个表达式用不等符号连起来，就构成了不等式。若不等关系对变量的所有元素都成立，则称其为“绝对的”或“无条件的”。若不等关系只对变量的部分取值成立，而对另一部分将改变方向或失效，则称为条件不等。不等式两边同时加或减相同的数，或者两边同时乘以或除以同一个正数，不等关系不变。不等式两边同时乘以或除以同一个负数，不等关系改变方向。符号 a &gt;&gt; b 表示 a “远大于” b。其含义是不确定的，可以是 100 倍的差异，也可能是 10 个数量级的差异。和方程相联系，它被用来给出一个非常大的值而使方程的输出满足一个特定的结果。</zh-speak>
    </Feature>
    <Feature data="P-adic number" zh-data="" id="615" uri="http://dbpedia.org/resource/P-adic_number">
      <neighbors/>
      <speak>In mathematics the p-adic number system for any prime number p extends the ordinary arithmetic of the rational numbers in a way different from the extension of the rational number system to the real and complex number systems.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Cross product" zh-data="" id="616" uri="http://dbpedia.org/resource/Cross_product">
      <neighbors/>
      <speak>In mathematics, the cross product or vector product is a binary operation on two vectors in three-dimensional space and is denoted by the symbol  ×. The cross product a × b of two linearly independent vectors a and b is a vector that is perpendicular to both and therefore normal to the plane containing them.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Del" zh-data="" id="617" uri="http://dbpedia.org/resource/Del">
      <neighbors/>
      <speak>Del, or nabla, is an operator used in mathematics, in particular, in vector calculus, as a vector differential operator, usually represented by the nabla symbol ∇.  When applied to a function defined on a one-dimensional domain, it denotes its standard derivative as defined in calculus.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Pi (letter)" zh-data="" id="618" uri="http://dbpedia.org/resource/Pi_(letter)">
      <neighbors/>
      <speak>Pi .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Differential operator" zh-data="微分算子" id="619" uri="http://dbpedia.org/resource/Differential_operator">
      <neighbors/>
      <speak>In mathematics, a differential operator is an operator defined as a function of the differentiation operator.</speak>
      <zh-speak>在数学中，微分算子是定义为微分运算之函数的算子。首先在记号上，将微分考虑为一个抽象运算是有帮助的，它接受一个函数得到另一个函数（以计算机科学中高阶函数的方式）。当然有理由不单限制于线性算子；例如施瓦茨导数是一个熟知的非线性算子。不过这里只考虑线性的情形。</zh-speak>
    </Feature>
    <Feature data="Obelus" zh-data="除号" id="620" uri="http://dbpedia.org/resource/Obelus">
      <neighbors/>
      <speak>An obelus , or a slash.This symbol has also been used to represent subtraction in Northern Europe.</speak>
      <zh-speak>除号（符号：÷，英语：obelus，复数：obeli）是一个由一根短横线和横线两侧的两点构成的符号，其主要用来表示数学中的除法运算。</zh-speak>
    </Feature>
    <Feature data="Connected sum" zh-data="連通和" id="621" uri="http://dbpedia.org/resource/Connected_sum">
      <neighbors/>
      <speak>In mathematics, specifically in topology, the operation of connected sum is a geometric modification on manifolds.</speak>
      <zh-speak>在數學裡，尤其是在拓撲學裡，連通和的運算是指一於流形上的幾何改變。其效果為將兩個給定的流形於各個選定的點附近連接起來。此一建構在閉曲面分類上有著關鍵性的角色。更一般地，也可以將流形和其子流形連接起來；此一廣義化通常稱為纖維和。另外還有在結上之連通和的一相關概念，其稱為結和或結的複合。</zh-speak>
    </Feature>
    <Feature data="Algebraic closure" zh-data="" id="622" uri="http://dbpedia.org/resource/Algebraic_closure">
      <neighbors/>
      <speak>In mathematics, particularly abstract algebra, an algebraic closure of a field K is an algebraic extension of K that is algebraically closed.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Arithmetic" zh-data="算术" id="623" uri="http://dbpedia.org/resource/Arithmetic">
      <neighbors/>
      <speak>Arithmetic or arithmetics  is the oldest and most elementary branch of mathematics.</speak>
      <zh-speak>算術（arithmetics）是数学最古老且最簡單的一個分支，幾乎被每個人使用著，從日常上簡單的算數到高深的科学及工商业計算都會用到。一般而言，算術這一詞指的是記錄數字某些運算基本性質的数学分支。常用的运算有加法、減法、乘法、除法，有时候，更复杂的运算如指数和平方根，也包括在算术运算的范畴内。算术运算要按照特定规则来进行。 自然数、整数、有理数（以分數的形式）和实数（以十进制指数的形式）的运算主要是在小学和中学的时候学习。用百分比形式进行运算也主要是在这个时候学习。然而，在成人中，很多人使用计算器，计算机或者算盘来进行数学计算。專業数学家有時會使用高等算術來指数论，但這不應該和初等算術相搞混。另外，算術也是初等代數的重要部份之一。</zh-speak>
    </Feature>
    <Feature data="Calculus" zh-data="" id="624" uri="http://dbpedia.org/resource/Calculus">
      <neighbors/>
      <speak>Calculus is the mathematical study of change, in the same way that geometry is the study of shape and algebra is the study of operations and their application to solving equations.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Cardinality" zh-data="" id="625" uri="http://dbpedia.org/resource/Cardinality">
      <neighbors/>
      <speak>In mathematics, the cardinality of a set is a measure of the "number of elements of the set". For example, the set A = {2, 4, 6} contains 3 elements, and therefore A has a cardinality of 3. There are two approaches to cardinality – one which compares sets directly using bijections and injections, and another which uses cardinal numbers.The cardinality of a set is also called its size, when no confusion with other notions of size is possible.The cardinality of a set A is usually denoted | A |, with a vertical bar on each side; this is the same notation as absolute value and the meaning depends on context.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Category theory" zh-data="范畴论" id="626" uri="http://dbpedia.org/resource/Category_theory">
      <neighbors/>
      <speak>Category theory is used to formalize mathematics and its concepts as a collection of objects and arrows . Category theory can be used to formalize concepts of other high-level abstractions such as set theory, ring theory, and group theory.</speak>
      <zh-speak>範疇論是數學的一門學科，以抽象的方法來處理數學概念，將這些概念形式化成一組組的「物件」及「態射」。數學中許多重要的領域可以形式化成範疇，並且使用範疇論，令在這些領域中許多難理解、難捉摸的數學結論可以比沒有使用範疇還會更容易敘述及證明。範疇最容易理解的一個例子為集合範疇，其物件為集合，態射為集合間的函數。但需注意，範疇的物件不一定要是集合，態射也不一定要是函數；一個數學概念若可以找到一種方法，以符合物件及態射的定義，則可形成一個有效的範疇，且所有在範疇論中導出的結論都可應用在這個數學概念之上。範疇最簡單的例子之一為群胚，其態射皆為可逆的。群胚的概念在拓撲學中很重要。範疇現在在大部分的數學分支中都有出現，在理論電腦科學的某些領域中用于對應資料型別，而在數學物理中被用來描述向量空間。範疇論不只是對研究範疇論的人有意義，對其他數學家而言也有著其他的意思。一個可追溯至1940年代的述語「一般化的抽象廢話」，即被用來指範疇論那相對於其他傳統的數學分支更高階的抽象化。</zh-speak>
    </Feature>
    <Feature data="Combinatorics" zh-data="组合数学" id="627" uri="http://dbpedia.org/resource/Combinatorics">
      <neighbors/>
      <speak>Combinatorics is a branch of mathematics concerning the study of finite or countable discrete structures.</speak>
      <zh-speak>广义的组合数学就是离散数学，狭义的组合数学是组合计数、图论、代数结构、数理逻辑等的总称。但这只是不同学者在叫法上的区别。总之，组合数学是一门研究离散对象的科学。随着计算机科学的日益发展，组合数学的重要性也日渐凸显，因为计算机科学的核心内容是使用算法处理离散数据。狭义的组合数学主要研究满足一定条件的组态（也称组合模型）的存在、计数以及构造等方面的问题。组合数学的主要内容有组合计数、组合设计、组合矩阵、组合优化（最佳組合）等。</zh-speak>
    </Feature>
    <Feature data="Commutator" zh-data="交換子" id="628" uri="http://dbpedia.org/resource/Commutator">
      <neighbors/>
      <speak>In mathematics, the commutator gives an indication of the extent to which a certain binary operation fails to be commutative.</speak>
      <zh-speak>在抽象代数中，一个群的交換子（commutator）或换位子是一个二元運算子。设g及h  是 群G中的元素，他們的交換子是g −1 h −1 gh，常記為[ g, h ]。只有当g和h符合交换律（即gh = hg）时他们的交换子才是这个群的单位元。一个群G的全部交换子生成的子群叫做群G的导群，记作D(G)。</zh-speak>
    </Feature>
    <Feature data="Complex number" zh-data="" id="629" uri="http://dbpedia.org/resource/Complex_number">
      <neighbors/>
      <speak>A complex number is a number that can be expressed in the form a + bi, where a and b are real numbers and i is the imaginary unit, that satisfies the equation x2 = −1, that is, i2 = −1. In this expression, a is the real part and b is the imaginary part of the complex number.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Convolution" zh-data="" id="630" uri="http://dbpedia.org/resource/Convolution">
      <neighbors/>
      <speak>In mathematics and, in particular, functional analysis, convolution is a mathematical operation on two functions f and g, producing a third function that is typically viewed as a modified version of one of the original functions, giving the area overlap between the two functions as a function of the amount that one of the original functions is translated.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Curl (mathematics)" zh-data="" id="631" uri="http://dbpedia.org/resource/Curl_(mathematics)">
      <neighbors/>
      <speak>In vector calculus, the curl  is a vector operator that describes the infinitesimal rotation of a 3-dimensional vector field.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Definition" zh-data="定义" id="632" uri="http://dbpedia.org/resource/Definition">
      <neighbors/>
      <speak>To get the definition of another word, try using WiktionaryFor other uses of the word "definition" itself, see Definition .A dictionary definition typically contains additional details about a word, such as an etymology and the language or languages of its origin, or obsolete meanings.</speak>
      <zh-speak>定義（Definition）是透過列出一個事件或者一個物件的基本屬性來描述或規範一個詞或一個概念的意義；被定義的事務或者物件叫做被定義項，其定義叫做定義項。对于一种事物的本质特征或一个概念的内涵和外延所作的简要说明。相当于数学上的对未知数的设定赋值，比如“设某未知数为已知字母x以便于简化计算，”对某个命名的词汇赋与一定的意义或形象，则有利于交流中的识别及认同。命名和定义总是相伴而生，用已知的熟知的来解释和形容未知的陌生的事物并加以区别，这是一个理论界的真理。简单来说，定义是一种人为的广泛、通用的解释意义，如人名（绰号、姓名）、符号、成语…等等。命名和定义是理论的前提。命名和定义是展开理论的前提。命名可以是符号，命名可以是名字，定义则是对这个符号名字做的文字解释或图样解释或实物解释或影像解释。比如“酒瓶”定义，是装没有装有酒水的酒瓶都叫酒瓶（爱装不装装与不装的酒瓶都是酒瓶）。命名和定义是某个特定的文化圈子里面对未知的陌生的事物用约定俗称的东西来解释形容。出于格物致知的需要，出于沟通交流的需要，或者出于某种文化传承商业运作政治斗争的需要。命名和定义的对象是从一定的时空影像里面截取出来的信息片段。例如“一個單身漢是一個未婚男子”這個定義中“單身漢”是被定義項，“未婚男子”是定義項。定義中的“一個”和“是”均可以使用符號取代，比如使用：=或 =df這個符號，上面這個定義可以轉寫為：“單身漢：=未婚男子”或“單身漢=df未婚男子”。一般來說一個定義像上面這個例子一樣往往是表達被定義項與定義項之間的等同的句子。</zh-speak>
    </Feature>
    <Feature data="Delta (letter)" zh-data="" id="633" uri="http://dbpedia.org/resource/Delta_(letter)">
      <neighbors/>
      <speak>Delta . Despite a popular legend, this use of the word delta was not coined by Herodotus.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Derivative" zh-data="" id="634" uri="http://dbpedia.org/resource/Derivative">
      <neighbors/>
      <speak>The derivative of a function of a real variable measures the sensitivity to change of a quantity .  It is a fundamental tool of calculus.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Divergence" zh-data="" id="635" uri="http://dbpedia.org/resource/Divergence">
      <neighbors/>
      <speak>In vector calculus, divergence is a vector operator that measures the magnitude of a vector field's source or sink at a given point, in terms of a signed scalar.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ellipsis" zh-data="省略号" id="636" uri="http://dbpedia.org/resource/Ellipsis">
      <neighbors/>
      <speak>Ellipsis  can overlap the usage of the ellipsis, especially in dialogue.</speak>
      <zh-speak>省略号（……）又称刪節號，用于省略原文的符号，行文中占二格。文章內使用時機為：“引文的省略，用省略號標明。”“列舉的省略，用省略號標明。”“說話斷斷續續，可以用省略號標示。”“用在表示节省原文或语句未完、意思未尽等。”要注意的是在中文裡省略號和「等等」只可任用其一，如果使用了省略號，就不應再寫上「等等」，例如「中國傳統節日有端午節、中秋節、重陽節……等等」並不正確。中文省略號源自英文的 ellipsis；原為三點，但由於直排時易與冒號混淆，故改為六點，佔兩個字位。</zh-speak>
    </Feature>
    <Feature data="Empty set" zh-data="" id="637" uri="http://dbpedia.org/resource/Empty_set">
      <neighbors/>
      <speak>In mathematics, and more specifically set theory, the empty set is the unique set having no elements; its size or cardinality  is zero.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Equivalence class" zh-data="" id="638" uri="http://dbpedia.org/resource/Equivalence_class">
      <neighbors/>
      <speak>In mathematics, when a set has an equivalence relation defined on its elements, there is a natural grouping of elements that are related to one another, forming what are called equivalence classes.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Equivalence relation" zh-data="" id="639" uri="http://dbpedia.org/resource/Equivalence_relation">
      <neighbors/>
      <speak>In mathematics, an equivalence relation is the relation that holds between two elements if and only if they are members of the same cell within a set that has been partitioned into cells such that every element of the set is a member of one and only one cell of the partition.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Expected value" zh-data="" id="640" uri="http://dbpedia.org/resource/Expected_value">
      <neighbors/>
      <speak>In probability theory, the expected value of a random variable is intuitively the long-run average value of repetitions of the experiment it represents.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Field (mathematics)" zh-data="域 (數學)" id="641" uri="http://dbpedia.org/resource/Field_(mathematics)">
      <neighbors/>
      <speak>In abstract algebra, a field is a nonzero commutative ring that contains a multiplicative inverse for every nonzero element, or equivalently a ring whose nonzero elements form an abelian group under multiplication.</speak>
      <zh-speak>在抽象代数中，域（Field）是一种可進行加、減、乘和除（除了除以零之外）運算的代數結構。域的概念是数域以及四则运算的推广。域是环的一种。域和一般的环的区别在于域要求它的元素（除零元素之外）可以进行除法运算，这等价于说每个非零的元素都要有乘法逆元。同时，在现代的定义中，域中的元素关于乘法要是可交换的。简单来说，域是乘法可交换的除环。乘法非交换的除环则称为体（Körper, corps），或者反称域（skew field）。在比较旧的定义中，除环被称为“域”，而现代意义上的域被称为“交换域”。</zh-speak>
    </Feature>
    <Feature data="Field extension" zh-data="域扩张" id="642" uri="http://dbpedia.org/resource/Field_extension">
      <neighbors/>
      <speak>In abstract algebra, field extensions are the main object of study in field theory.</speak>
      <zh-speak>域扩张（field extensions）是数学分支抽象代数之域论中的主要研究对象，基本想法是从一个基域开始以某种方式构造包含它的“更大”的域。域扩张可以推广为环扩张。</zh-speak>
    </Feature>
    <Feature data="Functional analysis" zh-data="泛函分析" id="643" uri="http://dbpedia.org/resource/Functional_analysis">
      <neighbors/>
      <speak>Functional analysis is a branch of mathematical analysis, the core of which is formed by the study of vector spaces endowed with some kind of limit-related structure  and the linear operators acting upon these spaces and respecting these structures in a suitable sense.</speak>
      <zh-speak>泛函分析（英语：Functional Analysis）是现代数学分析的一个分支，隶属于分析学，其研究的主要对象是函数构成的函数空间。泛函分析历史根源是由对函数空间的研究和对函数的变换（如傅立叶变换等）的性质的研究。这种观点被证明是对微分方程和积分方程的研究中特别有用。使用泛函这个词作为表述源自变分法，代表作用于函数的函数，这意味着，一个函数的参数是函数。这个名词首次被阿达马在1910年使用于这个课题的书中。是泛函分析理论的主要奠基人之一。然而，泛函的一般概念以前曾在1887年是由意大利数学家和物理学家維多·沃爾泰拉（Vito Volterra）介绍。非线性泛函理论是由阿达马的学生继续研究，特别是弗雷歇(Maurice Fréchet)可和列维(Levy)。阿达马还创立线性泛函分析的现代学校，并由里斯和一批围绕着巴拿赫（Stefan Banach）的波兰数学家群体进一步发展。</zh-speak>
    </Feature>
    <Feature data="Gradient" zh-data="" id="644" uri="http://dbpedia.org/resource/Gradient">
      <neighbors/>
      <speak>In mathematics, the gradient is a generalization of the usual concept of derivative of a function in one dimension to a function in several dimensions.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Greatest common divisor" zh-data="" id="645" uri="http://dbpedia.org/resource/Greatest_common_divisor">
      <neighbors/>
      <speak>In mathematics, the greatest common divisor .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ideal (ring theory)" zh-data="理想 (环论)" id="646" uri="http://dbpedia.org/resource/Ideal_(ring_theory)">
      <neighbors/>
      <speak>In ring theory, a branch of abstract algebra, an ideal is a special subset of a ring.</speak>
      <zh-speak>理想（Ideal）是一个抽象代数中的概念。</zh-speak>
    </Feature>
    <Feature data="If and only if" zh-data="" id="647" uri="http://dbpedia.org/resource/If_and_only_if">
      <neighbors/>
      <speak>In logic and related fields such as mathematics and philosophy, if and only if  when Q, P exactly in case Q, and P just in case Q. Many authors regard "iff" as unsuitable in formal writing; others use it freely.In logic formulae, logical symbols are used instead of these phrases; see the discussion of notation.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Independence (probability theory)" zh-data="統計獨立性" id="648" uri="http://dbpedia.org/resource/Independence_(probability_theory)">
      <neighbors/>
      <speak>In probability theory, to say that two events are independent  means that the occurrence of one does not affect the probability of the other.</speak>
      <zh-speak>在機率論裡，說兩個事件是獨立的，直覺上是指一事件的發生不會影響到另一事件發生的機率。例如，骰子擲出「6」的事件和其在下一次也擲出「6」的事件是相互獨立的。類似地，兩個隨機變數是獨立的，若其在一事件給定觀測量的條件機率分佈和另一事件沒有被觀測的機率分佈是一樣的。例如，第一次擲骰子擲出的數目和第二次會出現的數目是相互獨立的。</zh-speak>
    </Feature>
    <Feature data="Inner product space" zh-data="" id="649" uri="http://dbpedia.org/resource/Inner_product_space">
      <neighbors/>
      <speak>In linear algebra, an inner product space is a vector space with an additional structure called an inner product.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Isomorphism" zh-data="同构" id="650" uri="http://dbpedia.org/resource/Isomorphism">
      <neighbors/>
      <speak>In mathematics, an isomorphism  that admits an inverse.</speak>
      <zh-speak>在抽象代数中，同构（isomorphism）指的是一个保持结构的双射。在更一般的范畴论语言中，同构指的是一个态射，且存在另一个态射，使得两者的复合是一个恒等态射。正式的表述是：同构是在数学对象之间定义的一类映射,它能揭示出在这些对象的属性或者操作之间存在的关系。若两个数学结构之间存在同构映射，那么这两个结构叫做是同构的。一般来说，如果忽略掉同构的对象的属性或操作的具体定义，单从结构上讲，同构的对象是完全等价的。</zh-speak>
    </Feature>
    <Feature data="Model theory" zh-data="模型论" id="651" uri="http://dbpedia.org/resource/Model_theory">
      <neighbors/>
      <speak>In mathematics, model theory is the study of classes of mathematical structures :model theory = algebraic geometry − fields,although model theorists are also interested in the study of fields.</speak>
      <zh-speak>数学上，模型论是从集合论的论述角度对数学概念表现（representation）的研究，或者说是对于作为数学系统基础的“模型”的研究。粗略地说，该学科假定有一些既存的数学“对象”，然后研究：当这些对象之间的一些运算或者一些关系乃至一组公理被给定时，可以相应证明出什么，以及如何证明。比如实数理论中一个模型论概念的例子是：我们从一个任意集合开始，作为集合元素的每个个体都是一个实数，其间有一些关系和（或）函数，例如{ ×, +, −, ., 0, 1 }。若我们在该语言中问"∃ y (y × y = 1 + 1)"这样一个问题，显然该陈述对实数而言成立 - 确实存在这样的一个实数y,即所谓2的平方根；对于有理数，该陈述却并不成立。一个类似的命题，"∃ y (y × y = 0 − 1)",在实数中不成立，却在复数中成立，因为i × i = 0 − 1。模型论研究什么是在给定的数学系统中可证的，以及这些系统相互间的关系。它特别注重研究当我们试图通过加入新公理和新语言构造时会发生什么。现在模型论（及其方法）已经广泛地应用于其它数学分支甚至理论计算机与工程计算中。例如Hrushovski用模型论方法证明了代数几何中的Mordell-Lang猜想。</zh-speak>
    </Feature>
    <Feature data="Naive set theory" zh-data="朴素集合论" id="652" uri="http://dbpedia.org/resource/Naive_set_theory">
      <neighbors/>
      <speak>Naive set theory is one of several theories of sets used in the discussion of the foundations of mathematics.</speak>
      <zh-speak>在纯数学中，朴素集合论是由德国数学家康托尔最早创立的第一个集合论，它后来被更加精確地构建为公理化集合论。朴素集合论和公理化集合论的區別在于，前者依赖於把集合作为叫做这个集合的“元素”或 “成员”的搜集（collection），未有形式化的理解。而公理化集合论只使用明确定义的公理列表，還有從中证明的关于集合和成员关系的種種事实（公理起源自我们对对象的搜集和它们的成员的理解，但为了各种目的而被謹慎地构建，例如是避免已知的各種悖论）。集合在数学中是极其重要的；事實上，採用现代的形式化定義，多種数学对象（数、关系、函数等等）都可以用集合来構建。</zh-speak>
    </Feature>
    <Feature data="Normal subgroup" zh-data="正规子群" id="653" uri="http://dbpedia.org/resource/Normal_subgroup">
      <neighbors/>
      <speak>In abstract algebra, a normal subgroup is a subgroup which is invariant under conjugation by members of the group of which it is a part.</speak>
      <zh-speak>在抽象代数中，正规子群或不变子群指一类特殊的子群。由正规子群，可以引导出商群的概念。埃瓦里斯特·伽罗瓦是最早认识到正规子群的重要性的人。</zh-speak>
    </Feature>
    <Feature data="Pi" zh-data="" id="654" uri="http://dbpedia.org/resource/Pi">
      <neighbors/>
      <speak>The number π is a mathematical constant, the ratio of a circle's circumference to its diameter, commonly approximated as 3.14159. It has been represented by the Greek letter "π" since the mid-18th century, though it is also sometimes spelled out as "pi"  digits.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Probability theory" zh-data="" id="655" uri="http://dbpedia.org/resource/Probability_theory">
      <neighbors/>
      <speak>Probability theory is the branch of mathematics concerned with probability, the analysis of random phenomena.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Quotient group" zh-data="商群" id="656" uri="http://dbpedia.org/resource/Quotient_group">
      <neighbors/>
      <speak>In mathematics, specifically group theory, a quotient group , and quotient set.</speak>
      <zh-speak>在數學中，給定一個群G和G的正規子群N，G在N上的商群或因子群，在直覺上是把正規子群N“萎縮”為單位元的群。商群寫為G/N并念作G mod N（mod是模的簡寫）。如果N不是正規子群，商仍可得到，但結果將不是群，而是齊次空間。</zh-speak>
    </Feature>
    <Feature data="Approximation theory" zh-data="逼近理论" id="657" uri="http://dbpedia.org/resource/Approximation_theory">
      <neighbors/>
      <speak>In mathematics, approximation theory is concerned with how functions can best be approximated with simpler functions, and with quantitatively characterizing the errors introduced thereby.</speak>
      <zh-speak>數學中的逼近理论是如何將一函數用較簡單的函數來找到最佳逼近，且所產生的误差可以有量化的表征，以上提及的「最佳」及「較簡單」的實際意義都會隨著應用而不同。數學中有一個相關性很高的主題，是用廣義傅立葉級數進行函數逼近，也就是用以正交多項式為基礎的級數來進行逼近。計算機科學中有一個問題和逼近理论有關，就是在數學函式庫中如何用計算機或計算器可以執行的功能（例如乘法和加法）儘可能的逼近某一數學函數，一般會用多項式或有理函數（二多項式的商）來進行。逼近理论的目標是儘可能的逼近實際的函數，一般精度會接近電腦浮點運算的精度，一般會用高次的多項式，以及（或者）縮小多項式逼近函數的區間。縮小區間可以針對要逼近的函數，利用許多不同的係數及增益來達到。現在的數學函式庫會將區間劃分為許多的小區間，每個區間搭配一個次數不高的多項式。</zh-speak>
    </Feature>
    <Feature data="Triple bar" zh-data="" id="658" uri="http://dbpedia.org/resource/Triple_bar">
      <neighbors/>
      <speak>The triple bar, ≡, is a symbol with multiple, context-dependent meanings.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Big O notation" zh-data="大O符号" id="659" uri="http://dbpedia.org/resource/Big_O_notation">
      <neighbors/>
      <speak>In mathematics, big O notation describes the limiting behavior of a function when the argument tends towards a particular value or infinity, usually in terms of simpler functions.</speak>
      <zh-speak>注：“order”在全文中被译为“阶”，也可以另译为“数量级”。大O符号（Big O notation）是用于描述函数渐近行为的数学符号。更确切地说，它是用另一个（通常更简单的）函数来描述一个函数数量级的渐近上界。在数学中，它一般用来刻画被截断的无穷级数尤其是渐近级数的剩余项；在计算机科学中，它在分析算法复杂性的方面非常有用。大O符号是由德国数论学家保罗·巴赫曼（Paul Bachmann）在其1892年的著作《解析数论》（Analytische Zahlentheorie）首先引入的。而这个记号则是在另一位德国数论学家艾德蒙·朗道（Edmund Landau）的著作中才推广的，因此它有时又称为朗道符号（Landau symbols）。代表“order of ...”（……阶）的大O，最初是一个大写的希腊字母'Ο'（Omicron），现今用的是大写拉丁字母‘O’，但从来不是阿拉伯数字‘0’。</zh-speak>
    </Feature>
    <Feature data="Congruence (geometry)" zh-data="全等 (幾何)" id="660" uri="http://dbpedia.org/resource/Congruence_(geometry)">
      <neighbors/>
      <speak>In geometry, two figures or objects are congruent if they have the same shape and size, or if one has the same shape and size as the mirror image of the other.</speak>
      <zh-speak>在幾何中，全等是幾何圖形之間的一種合同，亦即幾何圖形之間的一種等價關係。若两个几何图形的形状、大小完全相同，则称这两个图形是全等的图形。全等是相似的一种特例，当相似比为1时，两图形全等。</zh-speak>
    </Feature>
    <Feature data="Group theory" zh-data="群论" id="661" uri="http://dbpedia.org/resource/Group_theory">
      <neighbors/>
      <speak>In mathematics and abstract algebra, group theory studies the algebraic structures known as groups.</speak>
      <zh-speak>在数学和抽象代数中，群论研究名为群的代数结构。[群]在抽象代数中具有基本的重要地位：许多代数结构，包括环、域和向量空间等可以看作是在群的基础上添加新的运算和公理而形成的。群的概念在数学的许多分支都有出现，而且群论的研究方法也对抽象代数的其它分支有重要影响。线性代数群（linear algebraic groups）和李群（Lie groups）作为群论的分支，在经历了重大的发展之后，已经形成相对独立的研究领域。群论的重要性还体现在物理学和化学的研究中，因为许多不同的物理结构，如晶体结构和氢原子结构可以用群论方法来进行建模。于是群论和相关的群表示论在物理学和化学中有大量的应用。群论中的重要结果，有限单群分类（classification of finite simple groups）是20世纪数学最重要的结果之一。该定理的证明是集体努力的结果，它的证明出现在1960年和1980年之间出版的超过10,000页的期刊上。</zh-speak>
    </Feature>
    <Feature data="Linear algebra" zh-data="" id="662" uri="http://dbpedia.org/resource/Linear_algebra">
      <neighbors/>
      <speak>Linear algebra is the branch of mathematics concerning vector spaces and linear mappings between such spaces.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mathematical constant" zh-data="数学常数" id="663" uri="http://dbpedia.org/resource/Mathematical_constant">
      <neighbors/>
      <speak>A mathematical constant is a special number, usually a real number, that is "significantly interesting in some way". Constants arise in many areas of mathematics, with constants such as e and π occurring in such diverse contexts as geometry, number theory, and calculus.What it means for a constant to arise "naturally", and what makes a constant "interesting", is ultimately a matter of taste, and some mathematical constants are notable more for historical reasons than for their intrinsic mathematical interest.</speak>
      <zh-speak>一个数学常数是指一个数值不变的常量，与之相反的是变量。跟大多数物理常数不一样的地方是，数学常数的定义是独立于所有物理测量的。数学常数通常是实数或复数域的元素。数学常数可以被称为是可定义的数字（通常都是可计算的）。其他可选的表示方法可以在数学常数 (以连分数表示排列)中找到。</zh-speak>
    </Feature>
    <Feature data="Measurement" zh-data="量度" id="664" uri="http://dbpedia.org/resource/Measurement">
      <neighbors/>
      <speak>Measurement  terms such as "green" and "blue" which are often interpreted differently by different people.</speak>
      <zh-speak>量度是對一物理量（如長度、尺寸或容量等）的估計或測定，通常以一標準或度量衡。量度以數字單位的標準來表示，如距離即以多少哩或多少公里來表示。量度的過程為估計一數量的多寡和相同類型（如長度、時間、重量等）一單位的多寡之間的比例。量度即為此過程的結果，表示為數字加上一個單位，其中實數為估計的比例。如9公尺，其便為物體長度和長度單位，即公尺之間的比例。不像計數和整數個數個物體一般地可精確知道，每一個量度都是個存在些許不確定性的估計。有關量度的科學稱為度量衡學。</zh-speak>
    </Feature>
    <Feature data="Modular arithmetic" zh-data="" id="665" uri="http://dbpedia.org/resource/Modular_arithmetic">
      <neighbors/>
      <speak>In mathematics, modular arithmetic is a system of arithmetic for integers, where numbers "wrap around" upon reaching a certain value—the modulus.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Non-standard analysis" zh-data="非标准分析" id="666" uri="http://dbpedia.org/resource/Non-standard_analysis">
      <neighbors/>
      <speak>The history of calculus is fraught with philosophical debates about the meaning and logical validity of fluxions or infinitesimal numbers.</speak>
      <zh-speak>非標準分析（概念上又可稱為實無限分析）是一個數學分支，它用嚴格定義的無限小的數（infinitesimal number）的概念來構建分析學。</zh-speak>
    </Feature>
    <Feature data="Number theory" zh-data="数论" id="667" uri="http://dbpedia.org/resource/Number_theory">
      <neighbors/>
      <speak>Number theory  The use of the term arithmetic for number theory regained some ground in the second half of the 20th century, arguably in part due to French influence.</speak>
      <zh-speak>數論是纯粹数学的分支之一，主要研究整数的性質。被譽為「最純」的數學領域。正整数按乘法性质划分，可以分成質数，合数，1，質数產生了很多一般人也能理解而又懸而未解的問題，如哥德巴赫猜想，孿生質數猜想等，即。很多問題虽然形式上十分初等，事实上却要用到许多艰深的数学知识。这一领域的研究从某种意义上推动了数学的发展，催生了大量的新思想和新方法。數論除了研究整數及質數外，也研究一些由整數衍生的數（如有理數）或是一些廣義的整數（如代數整數）。整数可以是方程式的解（丟番圖方程）。有些解析函數（像黎曼ζ函數）中包括了一些整數、質數的性質，透過這些函數也可以了解一些數論的問題。透過數論也可以建立實數和有理數之間的關係，並且用有理數來逼近實數（丟番圖逼近）。數論早期稱為算術。到20世紀初，才開始使用數論的名稱，而算術一詞則表示「基本運算」，不過在20世紀的後半，有部份數學家仍會用「算術」一詞來表示數論。1952年時數學家Harold Davenport仍用「高等算術」一詞來表示數論，戈弗雷·哈羅德·哈代和愛德華·梅特蘭·賴特在1938年寫《數論介紹》簡介時曾提到「我們曾考慮過將書名改為《算術介紹》，某方面而言是更合適的書名，但也容易讓讀者誤會其中的內容」。卡尔·弗里德里希·高斯曾說：「數學是科學的皇后，數論是數學的皇后。」</zh-speak>
    </Feature>
    <Feature data="O" zh-data="O" id="668" uri="http://dbpedia.org/resource/O">
      <neighbors/>
      <speak>O  is the 15th letter and a vowel in the ISO basic Latin alphabet.</speak>
      <zh-speak>O, o 是拉丁字母中的第15个字母。在希腊语 Ο (Omicron)、伊特鲁里亚语和拉丁语中，O表示元音／o／。虽然闪族语字母ʿAyin在一些字母表中被用来作为转写[o]，但是它的通常都作为辅音[/ʔ/]使用（类似于阿拉伯语字母ع 叫做'ʿAyn'）。在北约音标字母中，O被稱為Oscar。</zh-speak>
    </Feature>
    <Feature data="Probability distribution" zh-data="" id="669" uri="http://dbpedia.org/resource/Probability_distribution">
      <neighbors/>
      <speak>In probability and statistics, a probability distribution assigns a probability to each measurable subset of the possible outcomes of a random experiment, survey, or procedure of statistical inference.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Projective plane" zh-data="" id="670" uri="http://dbpedia.org/resource/Projective_plane">
      <neighbors/>
      <speak>In mathematics, a projective plane is a geometric structure that extends the concept of a plane.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Q.E.D." zh-data="證明完畢" id="671" uri="http://dbpedia.org/resource/Q.E.D.">
      <neighbors/>
      <speak>Q.E.D. is an initialism of the Latin phrase quod erat demonstrandum, originating from the Ancient Greek analogous hóper édei deîxai , meaning "which had to be proven". The phrase is traditionally placed in its abbreviated form at the end of a mathematical proof or philosophical argument when what was specified in the enunciation—and in the setting-out—has been exactly restated as the conclusion of the demonstration.</speak>
      <zh-speak>证明完毕/证讫，又写作Q.E.D.。這是拉丁片語「quod erat demonstrandum」（這就是所要证明的）的縮寫，譯自希臘語「ὅπερ ἔδει δεῖξαι」（hoper edei deixai），很多早期數學家用過，包括歐幾里得和阿基米德。「Q.E.D.」可以在證明的尾段寫出，以顯示證明所需的結論已經完整了。現在的證明完畢符號，通常是■（實心黑色正方形），稱之為「墓碑」或「哈爾莫斯（Halmos symbol）」（因保羅·哈爾莫斯最先採用此做法）。墓碑有時是空心的□。另一個簡單方法是寫「proven」、「shown」或「證畢」之類的文字，或寫上兩個斜劃（//），或三角形內畫三點。Unicode提供了字元U+220E（∎ 窄長方形），亦有U+25A0（■ 實心正方形）和U+2023（‣ 實心三角形）。</zh-speak>
    </Feature>
    <Feature data="Sequence" zh-data="序列" id="672" uri="http://dbpedia.org/resource/Sequence">
      <neighbors/>
      <speak>In mathematics, a sequence is an ordered list.</speak>
      <zh-speak>数学上，序列是被排成一列的对象（或事件）；这样，每个元素不是在其他元素之前，就是在其他元素之后。这里，元素之间的顺序非常重要。</zh-speak>
    </Feature>
    <Feature data="Set theory" zh-data="集合论" id="673" uri="http://dbpedia.org/resource/Set_theory">
      <neighbors/>
      <speak>Set theory is the branch of mathematical logic that studies sets, which are collections of objects.</speak>
      <zh-speak>集合論（英文：Set theory）或稱集論，是研究集合（由一堆抽象对象構成的整體）的數學理論，包含集合和元素（或稱為成員）、關係等最基本數學概念。在大多數現代數學的公式化中，都是在集合論的語言下談論各種数学对象。集合論、命題邏輯與謂詞邏輯共同構成了數學的公理化基礎，以未定義的「集合」與「集合成員」等術語來形式化地建構數學物件。現代集合論的研究是在1870年代由俄国数学家康托爾及德國数学家理察·戴德金的樸素集合論開始。在樸素集合論中，集合是當做一堆物件構成的整體之類的自證概念，沒有有關集合的形式化定義。在發現樸素集合論會產生一些悖論後，二十世紀初期提出了許多公理化集合論，其中最著名的是包括選擇公理的策梅洛-弗蘭克爾集合論，簡稱ZFC。公理化集合論不直接定義集合和集合成員，而是先規範可以描述其性質的一些公理。集合論常被視為數學基礎之一，特別是 ZFC 集合論。除了其基礎的作用外，集合論也是數學理論中的一部份，當代的集合論研究有許多離散的主題，從實數線的結構到大基数的一致性等。</zh-speak>
    </Feature>
    <Feature data="Similarity (geometry)" zh-data="" id="674" uri="http://dbpedia.org/resource/Similarity_(geometry)">
      <neighbors/>
      <speak>Two geometrical objects are called similar if they both have the same shape, or one has the same shape as the mirror image of the other.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Square root" zh-data="" id="675" uri="http://dbpedia.org/resource/Square_root">
      <neighbors/>
      <speak>In mathematics, a square root of a number a is a number y such that y2 = a, in other words, a number y whose square </speak>
      <zh-speak/>
    </Feature>
    <Feature data="Statistics" zh-data="统计学" id="676" uri="http://dbpedia.org/resource/Statistics">
      <neighbors/>
      <speak>Statistics is the study of the collection, analysis, interpretation, presentation, and organization of data.</speak>
      <zh-speak>统计学是在统计实践的基础上，自17世纪中叶产生并逐步发展起来的一门社会学科。它是研究如何测定、收集、整理、归纳和分析反映客观现象总体数量的数据，以便给出正确认识的方法论科学，被廣泛的應用在各門學科之上，從自然科学和社會科學到人文科學，甚至被用來工商業及政府的情報決策之上。譬如自一組數據中，可以摘要並且描述這份數據的集中和離散情形，這個用法稱作為描述統計學。另外，觀察者以數據的形態，建立出一個用以解釋其隨機性和不確定性的數學模型，以之來推論研究中的步驟及母體，這種用法被稱做推論統計學。這兩種用法都可以被稱作為應用統計學。數理統計學则是討論背後的理論基礎的學科。</zh-speak>
    </Feature>
    <Feature data="Subgroup" zh-data="" id="677" uri="http://dbpedia.org/resource/Subgroup">
      <neighbors/>
      <speak>In mathematics, given a group G under a binary operation ∗, a subset H of G is called a subgroup of G if H also forms a group under the operation ∗. More precisely, H is a subgroup of G if the restriction of ∗ to H × H is a group operation on H. This is usually represented notationally by H ≤ G, read as "H is a subgroup of G".A proper subgroup of a group G is a subgroup H which is a proper subset of G , usually to emphasize the operation ∗ when G carries multiple algebraic or other structures.This article will write ab for a ∗ b, as is usual.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Subset" zh-data="子集" id="678" uri="http://dbpedia.org/resource/Subset">
      <neighbors/>
      <speak>In mathematics, especially in set theory, a set A is a subset of a set B, or equivalently B is a superset of A, if A is "contained" inside B, that is, all elements of A are also elements of B. A and B may coincide.</speak>
      <zh-speak>子集，為某個集合中一部分的集合，故亦稱部分集合。若X和Y为集合，且X的所有元素都是Y的元素，则有： X是Y的子集（或称包含于Y）； X ⊆ Y; Y是X的父集/超集（或称包含X）； Y ⊇ X.所有集合Y都是其本身的子集。不等于Y的Y的子集称为真子集。若X是Y的真子集，则写作X ⊊ Y。"是……的子集"的关系称为包含。</zh-speak>
    </Feature>
    <Feature data="T" zh-data="T" id="679" uri="http://dbpedia.org/resource/T">
      <neighbors/>
      <speak>T  is the 20th letter in the ISO basic Latin alphabet.</speak>
      <zh-speak>T, t 是拉丁字母中的第20个字母。Tâw 是西方闪族语字母表和希伯来字母的最后一个字母。闪族语的Taw的音值、希腊字母Ταυ（Tau）以及伊特鲁里亚字母和拉丁字母的T都曾发作／t／。北约音标字母以Tango来表示字母T。</zh-speak>
    </Feature>
    <Feature data="Topology" zh-data="拓扑学" id="680" uri="http://dbpedia.org/resource/Topology">
      <neighbors/>
      <speak>Topology  in other manifolds.</speak>
      <zh-speak>拓扑学，或意譯位相幾何學是近代发展起来的一个研究连续性现象的数学分支。中文名称起源于希腊语「Τοπολογία」的音译。Topology原意为地貌，於19世纪中期由科学家引入，当时主要研究的是出於数学分析的需要而产生的一些几何问题。发展至今，拓扑学主要研究拓扑空间在拓扑变换下的不变性质和不变量。</zh-speak>
    </Feature>
    <Feature data="Interpunct" zh-data="间隔号" id="681" uri="http://dbpedia.org/resource/Interpunct">
      <neighbors/>
      <speak>An interpunct .</speak>
      <zh-speak>间隔号（“·”、“‧”）是一種標點符號，用于某些非汉族人名内部，或书目当中。間隔號由音界號（又叫分读号）演變而來；除了原有音界號的功用外，還加入了間隔書名與篇章的新功用。間隔號用於：台灣原住民族與中國少數民族文化傳統姓名漢字音譯之各部分的分界。外國人名（除了東亞傳統上以漢字書寫的民族之外）漢字音譯之各部分的分界。書名與篇（章、卷）名之間。套書與單本書名之間。此外，某些作品名稱亦會將個別字眼排列起來，例如小說《流星·蝴蝶·劍》、電影《如果·愛》等。</zh-speak>
    </Feature>
    <Feature data="Laplace operator" zh-data="" id="682" uri="http://dbpedia.org/resource/Laplace_operator">
      <neighbors/>
      <speak>In mathematics, the Laplace operator or Laplacian is a differential operator given by the divergence of the gradient of a function on Euclidean space.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Anthony James Barr" zh-data="" id="683" uri="http://dbpedia.org/resource/Anthony_James_Barr">
      <neighbors>
        <neighbor dest="296" relationship="occupation" weight="0"/>
        <neighbor dest="382" relationship="birth place" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="700" relationship="alma mater" weight="0"/>
        <neighbor dest="701" relationship="occupation" weight="0"/>
        <neighbor dest="702" relationship="occupation" weight="0"/>
        <neighbor dest="703" relationship="occupation" weight="0"/>
      </neighbors>
      <speak>Anthony James Barr, aka Tony Barr or Jim Barr .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Barbara G. Ryder" zh-data="" id="684" uri="http://dbpedia.org/resource/Barbara_G._Ryder">
      <neighbors>
        <neighbor dest="519" relationship="award" weight="0"/>
        <neighbor dest="529" relationship="alma mater" weight="0"/>
        <neighbor dest="352" relationship="fields" weight="0"/>
        <neighbor dest="296" relationship="known for" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="705" relationship="alma mater" weight="0"/>
        <neighbor dest="706" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>Barbara G. Ryder is an American Computer Scientist noted for her research on programming languages and more specifically, the theoretical foundations and empirical investigation of interprocedural compile-time analysis.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="European Symposium on Programming" zh-data="" id="685" uri="http://dbpedia.org/resource/European_Symposium_on_Programming">
      <neighbors>
        <neighbor dest="296" relationship="discipline" weight="0"/>
        <neighbor dest="540" relationship="publisher" weight="0"/>
      </neighbors>
      <speak>The European Symposium on Programming .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Philip Wadler" zh-data="" id="686" uri="http://dbpedia.org/resource/Philip_Wadler">
      <neighbors>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
        <neighbor dest="519" relationship="award" weight="0"/>
        <neighbor dest="296" relationship="field" weight="0"/>
        <neighbor dest="77" relationship="alma mater" weight="0"/>
        <neighbor dest="707" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="708" relationship="award" weight="0"/>
      </neighbors>
      <speak>Philip Lee "Phil" Wadler .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Guy L. Steele, Jr." zh-data="" id="687" uri="http://dbpedia.org/resource/Guy_L._Steele,_Jr.">
      <neighbors>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="296" relationship="known for" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
        <neighbor dest="522" relationship="alma mater" weight="0"/>
        <neighbor dest="712" relationship="work institutions" weight="0"/>
        <neighbor dest="713" relationship="work institutions" weight="0"/>
        <neighbor dest="714" relationship="work institutions" weight="0"/>
        <neighbor dest="715" relationship="birth place" weight="0"/>
        <neighbor dest="716" relationship="award" weight="0"/>
        <neighbor dest="717" relationship="award" weight="0"/>
      </neighbors>
      <speak>Guy Lewis Steele Jr. /ˈstiːl/, also known as "The Great Quux", and GLS /ˈɡlɪs/, is an American computer scientist who has played an important role in designing and documenting several computer programming languages.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Kenneth E. Iverson" zh-data="肯尼斯·艾佛森" id="688" uri="http://dbpedia.org/resource/Kenneth_E._Iverson">
      <neighbors>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="296" relationship="known for" weight="0"/>
        <neighbor dest="334" relationship="death place" weight="0"/>
        <neighbor dest="522" relationship="alma mater" weight="0"/>
        <neighbor dest="596" relationship="award" weight="0"/>
        <neighbor dest="717" relationship="award" weight="0"/>
        <neighbor dest="722" relationship="birth place" weight="0"/>
        <neighbor dest="723" relationship="birth place" weight="0"/>
        <neighbor dest="724" relationship="death place" weight="0"/>
        <neighbor dest="725" relationship="death place" weight="0"/>
        <neighbor dest="726" relationship="citizenship" weight="0"/>
        <neighbor dest="727" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="728" relationship="work institution" weight="0"/>
        <neighbor dest="729" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="730" relationship="alma mater" weight="0"/>
        <neighbor dest="731" relationship="award" weight="0"/>
        <neighbor dest="732" relationship="award" weight="0"/>
        <neighbor dest="733" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Kenneth Eugene Iverson  was a Canadian computer scientist noted for the development of the APL programming language in 1962. He was honored with the Turing Award in 1979 for his contributions to mathematical notation and programming language theory.</speak>
      <zh-speak>肯尼斯·艾佛森（Kenneth E. Iverson，1920年12月17日-2004年10月19日）是一位计算机科学家，最重要的貢獻是開發了APL。1979年他因對數學表達式和編程語言理論的貢獻而得到图灵奖。在哈佛大学當助理教授時，他發展了一套數學表達式來操作陣列，以便教授學生。1960年，他開始在IBM跟Adin Falkoff工作，按他開發的數學表達式建立了APL。其後他和許國華(Roger Hui)（出生于香港后去加拿大）發明了J语言。</zh-speak>
    </Feature>
    <Feature data="Martin Richards (computer scientist)" zh-data="馬丁·理察德" id="689" uri="http://dbpedia.org/resource/Martin_Richards_(computer_scientist)">
      <neighbors>
        <neighbor dest="296" relationship="field" weight="0"/>
        <neighbor dest="293" relationship="alma mater" weight="0"/>
        <neighbor dest="735" relationship="known for" weight="0"/>
        <neighbor dest="736" relationship="workplaces" weight="0"/>
        <neighbor dest="737" relationship="doctoral students" weight="0"/>
      </neighbors>
      <speak>Martin Richards  is a British computer scientist known for his development of the BCPL programming language which is both part of early research into portable software, and the ancestor of the B programming language invented by Ken Thompson in early versions of Unix and which Dennis Ritchie in turn used as the basis of his widely used C programming language.</speak>
      <zh-speak>馬丁·理察德（英语：Martin Richards，1940年7月21日－），生於英國，計算機科學家，為BCPL程式語言的發明者，發展了TRIPOS作業系統。</zh-speak>
    </Feature>
    <Feature data="Carl Sassenrath" zh-data="" id="690" uri="http://dbpedia.org/resource/Carl_Sassenrath">
      <neighbors>
        <neighbor dest="296" relationship="field" weight="0"/>
        <neighbor dest="6" relationship="birth place" weight="0"/>
        <neighbor dest="738" relationship="known for" weight="0"/>
        <neighbor dest="739" relationship="work institution" weight="0"/>
        <neighbor dest="740" relationship="field" weight="0"/>
        <neighbor dest="741" relationship="known for" weight="0"/>
        <neighbor dest="742" relationship="alma mater" weight="0"/>
        <neighbor dest="743" relationship="known for" weight="0"/>
        <neighbor dest="744" relationship="residence" weight="0"/>
      </neighbors>
      <speak>Carl Sassenrath  is an architect of operating systems and computer languages.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Susan B. Horwitz" zh-data="" id="691" uri="http://dbpedia.org/resource/Susan_B._Horwitz">
      <neighbors>
        <neighbor dest="602" relationship="birth place" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="296" relationship="known for" weight="0"/>
        <neighbor dest="569" relationship="alma mater" weight="0"/>
        <neighbor dest="745" relationship="death place" weight="0"/>
        <neighbor dest="746" relationship="known for" weight="0"/>
        <neighbor dest="747" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="748" relationship="workplaces" weight="0"/>
        <neighbor dest="749" relationship="workplaces" weight="0"/>
        <neighbor dest="750" relationship="workplaces" weight="0"/>
        <neighbor dest="751" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Susan Beth Horwitz  program.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Siebel Systems" zh-data="" id="692" uri="http://dbpedia.org/resource/Siebel_Systems">
      <neighbors>
        <neighbor dest="4" relationship="industry" weight="0"/>
        <neighbor dest="296" relationship="industry" weight="0"/>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="714" relationship="successor" weight="0"/>
        <neighbor dest="752" relationship="product" weight="0"/>
        <neighbor dest="753" relationship="key person" weight="0"/>
        <neighbor dest="754" relationship="location" weight="0"/>
        <neighbor dest="755" relationship="key person" weight="0"/>
      </neighbors>
      <speak>Siebel CRM Systems, Inc. was a software company principally engaged in the design, development, marketing, and support of customer relationship management  applications.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Martin Odersky" zh-data="" id="693" uri="http://dbpedia.org/resource/Martin_Odersky">
      <neighbors>
        <neighbor dest="296" relationship="field" weight="0"/>
        <neighbor dest="711" relationship="known for" weight="0"/>
        <neighbor dest="756" relationship="residence" weight="0"/>
        <neighbor dest="757" relationship="known for" weight="0"/>
        <neighbor dest="758" relationship="nationality" weight="0"/>
        <neighbor dest="759" relationship="residence" weight="0"/>
        <neighbor dest="760" relationship="known for" weight="0"/>
        <neighbor dest="761" relationship="alma mater" weight="0"/>
        <neighbor dest="762" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Martin Odersky . He did postdoctoral work at IBM and Yale.In 2011, he founded Typesafe Inc., a company to support and promote Scala, and he currently serves as the chairman and chief architect.He teaches two courses on the massive open online course provider, Coursera, namely Functional Programming Principles in Scala and Principles of Reactive Programming.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Robert Watson (computer scientist)" zh-data="" id="694" uri="http://dbpedia.org/resource/Robert_Watson_(computer_scientist)">
      <neighbors>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
        <neighbor dest="530" relationship="field" weight="0"/>
        <neighbor dest="296" relationship="field" weight="0"/>
        <neighbor dest="293" relationship="work institution" weight="0"/>
        <neighbor dest="580" relationship="field" weight="0"/>
        <neighbor dest="736" relationship="work institution" weight="0"/>
        <neighbor dest="740" relationship="field" weight="0"/>
        <neighbor dest="764" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="765" relationship="work institution" weight="0"/>
        <neighbor dest="766" relationship="field" weight="0"/>
        <neighbor dest="767" relationship="birth place" weight="0"/>
        <neighbor dest="768" relationship="known for" weight="0"/>
        <neighbor dest="769" relationship="known for" weight="0"/>
        <neighbor dest="770" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Robert Nicholas Maxwell Watson  is a FreeBSD developer, and founder of the TrustedBSD Project.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mike Lesk" zh-data="迈克·莱斯克" id="695" uri="http://dbpedia.org/resource/Mike_Lesk">
      <neighbors>
        <neighbor dest="519" relationship="award" weight="0"/>
        <neighbor dest="296" relationship="field" weight="0"/>
        <neighbor dest="522" relationship="alma mater" weight="0"/>
        <neighbor dest="705" relationship="work institution" weight="0"/>
        <neighbor dest="771" relationship="field" weight="0"/>
        <neighbor dest="772" relationship="field" weight="0"/>
        <neighbor dest="773" relationship="award" weight="0"/>
        <neighbor dest="774" relationship="known for" weight="0"/>
        <neighbor dest="775" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Michael E.  Lesk is a computer scientist.</speak>
      <zh-speak>迈克尔 E.（迈克）莱斯克是一个计算机科学家。</zh-speak>
    </Feature>
    <Feature data="ACM Transactions on Programming Languages and Systems" zh-data="" id="696" uri="http://dbpedia.org/resource/ACM_Transactions_on_Programming_Languages_and_Systems">
      <neighbors>
        <neighbor dest="519" relationship="publisher" weight="0"/>
        <neighbor dest="296" relationship="academic discipline" weight="0"/>
      </neighbors>
      <speak>The ACM Transactions on Programming Languages and Systems  is a bimonthly peer-reviewed scientific journal on programming languages published by the Association for Computing Machinery since 1979. The current editor-in-chief is Jens Palsberg.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="YAP (Prolog)" zh-data="" id="697" uri="http://dbpedia.org/resource/YAP_(Prolog)">
      <neighbors>
        <neighbor dest="296" relationship="platform" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="776" relationship="operating system" weight="0"/>
        <neighbor dest="777" relationship="license" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>YAP is an open source, high-performance implementation of the Prolog  programming language developed at LIACC/Universidade do Porto and at COPPE Sistemas/UFRJ. Its Prolog engine is based in the WAM , with several optimizations for better performance.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Essentials of Programming Languages" zh-data="" id="698" uri="http://dbpedia.org/resource/Essentials_of_Programming_Languages">
      <neighbors>
        <neighbor dest="296" relationship="non-fiction subject" weight="0"/>
        <neighbor dest="780" relationship="literary genre" weight="0"/>
      </neighbors>
      <speak>Essentials of Programming Languages , SNOBOL, Lisp, and Prolog.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Terence Parr" zh-data="" id="699" uri="http://dbpedia.org/resource/Terence_Parr">
      <neighbors>
        <neighbor dest="296" relationship="fields" weight="0"/>
        <neighbor dest="440" relationship="alma mater" weight="0"/>
        <neighbor dest="6" relationship="birth place" weight="0"/>
        <neighbor dest="126" relationship="birth place" weight="0"/>
        <neighbor dest="383" relationship="residence" weight="0"/>
      </neighbors>
      <speak>Terence John Parr  is a professor of computer science at the University of San Francisco.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="North Carolina State University" zh-data="北卡罗来纳州立大学" id="700" uri="http://dbpedia.org/resource/North_Carolina_State_University">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
        <neighbor dest="490" relationship="State" weight="0"/>
      </neighbors>
      <speak>North Carolina State University, officially North Carolina State University at Raleigh, is a public, coeducational, research university located in Raleigh, North Carolina, United States.</speak>
      <zh-speak>北卡羅來納州立大學（英语：North Carolina State University）是位於美國北卡羅來納州羅里的一所公立大學，始建於1887年，現有超過33,000學生，是北卡羅來納州最大的大學。在農業、設計、工程和紡織為傑出科目，提供了100多個學士學位，研究生院提供超過100個碩士和博士學位。学校师资力量雄厚，有19位教授被选为美国科学院（National Academy of Sciences）或工程院（National Academy of Engineering）院士。</zh-speak>
    </Feature>
    <Feature data="Software engineer" zh-data="软件工程师" id="701" uri="http://dbpedia.org/resource/Software_engineer">
      <neighbors/>
      <speak>Software engineers apply the principles of software engineering to the  design, development, maintenance, testing, and evaluation of the software and systems that make computers or anything containing software work.</speak>
      <zh-speak>软件工程师一般指从事软件开发职业的人。软件工程师跟一般程序员的分別，在于一个程序员的工作是按照指定的规格进行编码，而软件工程师的工作则需要设计和规划。不过，由于现时社会的分工愈來愈模糊，软件工程师跟程序员的分工也愈不明顯。但对于嚴格執行CMM的機構來說，各人的工作分也比較清晰，這有助于了解软件工程师跟一般程序员的分別。</zh-speak>
    </Feature>
    <Feature data="Invention" zh-data="发明" id="702" uri="http://dbpedia.org/resource/Invention">
      <neighbors/>
      <speak>→An invention is a unique or novel device, method, composition or process.</speak>
      <zh-speak>發明是指一種新事物或技術的首度出現。發明可以分為物件的發明及方法的發明；而物件的發明亦不限於有形的物件，無形的物件，如電腦程序、虛擬創作等亦包括在內。發明與發現不同；發現是指一些被遺忘的事物或方法被重新發現，即使那被發現的已在世上存在過千年，甚至在人類出現以前。發明又與創新不同；創新可以是把一些舊的事物重新演譯或包裝而變成新的事物；</zh-speak>
    </Feature>
    <Feature data="Designer" zh-data="設計師" id="703" uri="http://dbpedia.org/resource/Designer">
      <neighbors/>
      <speak>A designer is a person who designs.</speak>
      <zh-speak>設計師是對事物設計物者的一種專稱，古今可稱工匠。設計師是從人與事物分析再以有道理的構造，現今沒辦法解讀設計統稱為藝術家。他們通常在專門領域創造或提供創意，並利用各種視與道理方式傳達的方式，表現法的功力作品，即設計師的實力。設計師必須要有態度方可完成重任，除建築師需考取認證外，其他需通過表現能力發揮長短。設計師工作，除建築設計師需對所有設計有一定了解，方能與其他設計者溝通。平面設計者統稱為美工師（商業設計師）非統稱設計師設計類型設計的類型相當多，下面列出歷史較久、較廣為人知的設計類型。更多的設計類型請參看設計下面的目錄。大系統類型環境設計（Environmental Design）建築設計（Architecture Design）室內設計（Interior &amp; Space Design）展示設計（Display Design）公共藝術設計（Public Art Design）景觀設計（Landscape Design）舞台設計（Stage Design）工業設計（Industrial Design）計算機自動設計（Computer-Automated Design，CAutoD）傢具設計（Furniture Design）交通工具設計（Transportation Design）產品設計（Product Design）軟體設計（Software design）文具禮品設計（Stationery Design）玩具設計（Toy Design）系統設計（System Design）視覺傳達設計（Visual Design）廣告設計（Advertisement Design）經常只以廣告代稱。包裝設計（Package Design）插畫設計（Illustration Design）動畫設計（Animation Design）網頁設計（Web Design）流行時尚設計（Trend Design）劇裝設計（Cosmetics Design）服裝設計（fashion Design）珠寶設計（Jewelry Design）設計理論（Design Theory）</zh-speak>
    </Feature>
    <Feature data="SAS Institute" zh-data="赛仕软件" id="704" uri="http://dbpedia.org/resource/SAS_Institute">
      <neighbors>
        <neighbor dest="683" relationship="founded by" weight="0"/>
        <neighbor dest="82" relationship="key person" weight="0"/>
      </neighbors>
      <speak>SAS Institute , which helps manage, access, analyze and report on data to aid in decision-making.</speak>
      <zh-speak>赛仕软件是美国 SAS Institue Inc. 中文译名SAS 软件研究所的简称；其在中国大陆由负责市场营销的 "赛仕中国＂和负责研发的＂赛仕软件研究开发北京有限公司＂组成。</zh-speak>
    </Feature>
    <Feature data="Rutgers University" zh-data="罗格斯大学" id="705" uri="http://dbpedia.org/resource/Rutgers_University">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>Rutgers, The State University of New Jersey, /ˈrʌtɡərz/, commonly referred to as Rutgers University, Rutgers, or RU, is an American public research university and the largest institution for higher education in New Jersey.Originally chartered as Queen's College on November 10, 1766, Rutgers is the eighth-oldest college in the United States and one of the nine "Colonial Colleges" founded before the American Revolution.</speak>
      <zh-speak>羅格斯大學，全稱紐澤西州立羅格斯大學，簡稱羅大（Rutgers, The State University of New Jersey）是美國紐澤西州的最大高等学府。羅格斯大學的主要校園位於新布朗斯维克和皮斯卡特維，另有兩個分校在紐瓦克和肯頓。羅格斯大學由29個大學學院構成，其中16個學院並另提供大學以上之研究所或專業學位。羅格斯大學提供超過100個學士學位、100個硕士學位以及80個博士或專業學位。羅格斯大學是在美国第八個成立的高等學府，原本於1766年成立时称为皇后学院，起初是一个荷兰改革派教会学校，但现在學校本身並沒有與任何宗教有附屬關係而校方也对学生没有任何宗教上的要求。紐澤西州州議會分別於1945年和1956年通過法案将罗格斯大学指定为州立大学。1946年罗格斯大学将纽瓦克大学并入，从此有了纽瓦克分校。1950年罗格斯大学将南泽西学院并入，从此就有了肯頓分校。罗格斯曾经一度被广泛认为是哥伦比亚大学的姊妹学校，因為羅格斯大學本名為皇后學院而哥倫比亞大學本名為國王學院，而當初兩校創校時就是為了表現此種姊妹學校之關係而命名的。直到后来哥伦比亚大学成为著名的常春藤盟校成员之一的同時，羅格斯大學成為著名的美國公立大學後，二者之间之此種關係就漸漸地疏遠了。值得一提的是，羅格斯大學於哲學領域卓越異常。根據2011年權威性的The Philosophical Gourmet Report中對全美及全英語系國家大學哲學系的評鑑，羅格斯大學的哲學系在全美排名第2(僅次於紐約大學)，在全英語系國家排名第3(僅次於紐約大學及牛津大學)，尤其形上學、知識論及語言哲學等研究領域排名第1。(http://www.philosophicalgourmet.com/overall.asp)羅格斯大學的食品科學學系(Food Scince)、人力資源與勞工關係學院(School of Management and Labor Relations) 在美國大學相關領域排行亦是排列前十名至今羅格斯大學新布朗維克分校(New Brunswick)被認為是世界一流學院之一。根據ARWU 2010世界大學排名，羅格斯大學新布朗維克分校被列入世界第54名(http://www.arwu.org/ARWU2010.jsp )。羅格斯大學新布朗維克分校校風良好且設備優良。</zh-speak>
    </Feature>
    <Feature data="Virginia Tech" zh-data="弗吉尼亚理工学院暨州立大学" id="706" uri="http://dbpedia.org/resource/Virginia_Tech">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Virginia Polytechnic Institute and State University, popularly known as Virginia Tech, is a public land-grant university with a main campus in Blacksburg, Virginia, educational facilities in six regions statewide, and a study-abroad site in Switzerland.</speak>
      <zh-speak>維珍尼亞理工學院暨州立大學（英语：Virginia Polytechnic Institute and State University，官方缩写為Virginia Tech，即弗吉尼亚工大），是一所以工科為主的綜合性公立大學。主校区位于維珍尼亞州蒙哥马利县的黑堡，另于維珍尼亞州、美国首都圈、瑞士、多米尼加共和国、印度和埃及设有研究和教育中心。学校於1872年创建，时为以农业和理工为主的赠地大学。现时維珍尼亞理工为維珍尼亞州全职学生数量最多的研究性大学，亦是美国公共大学中少有的保留士官团的非专职军事院校（另一个为德州农工大学）。維珍尼亞理工提供的学位为弗吉尼亚州所有大学中最多，拥有125栋校园建筑，2600英亩的校园，分布于六个国家和地区的校外教育设施，瑞士的出国留学站及主校区附近另设1700英亩的研究性农场。学校的主校区位于新河谷（New River Valley）和阿巴拉契亚山脉于西南弗吉尼亚的脊谷处，距离乔治华盛顿-杰弗逊国家森林公园和蒙哥马利县只有几英里。学校的监管主体为校监事会。监事会共有14位成员，其中的十三位由弗吉尼亚州州长指派，而第十四位成员为弗吉尼亚州农业及消费者理事会的主席。每年均有一位本科生和一位研究生亦会经过选拔成为监事会的非投票成员。維珍尼亞理工大學以美式足球而聞名，校吉祥物为一只被称作“Hokies”的拟人化火鸡，而“Hokies”亦常作为学校和学生的代称。計算機系的System X曾經是全球排名第七位、全球大學系統排名第一位的超級計算機。</zh-speak>
    </Feature>
    <Feature data="Nico Habermann" zh-data="" id="707" uri="http://dbpedia.org/resource/Nico_Habermann">
      <neighbors/>
      <speak>Arie Nicolaas Habermann .</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Royal Society of Edinburgh" zh-data="" id="708" uri="http://dbpedia.org/resource/Royal_Society_of_Edinburgh">
      <neighbors/>
      <speak>The Royal Society of Edinburgh is Scotland's national academy of science and letters.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Haskell (programming language)" zh-data="Haskell" id="709" uri="http://dbpedia.org/resource/Haskell_(programming_language)">
      <neighbors>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="686" relationship="designer" weight="0"/>
        <neighbor dest="710" relationship="influenced by" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="760" relationship="influenced" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="814" relationship="influenced" weight="0"/>
        <neighbor dest="833" relationship="influenced by" weight="0"/>
        <neighbor dest="836" relationship="influenced" weight="0"/>
        <neighbor dest="906" relationship="designer" weight="0"/>
        <neighbor dest="920" relationship="influenced" weight="0"/>
        <neighbor dest="958" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Haskell /ˈhæskəl/ is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.</speak>
      <zh-speak>Haskell（发音为/ˈhæskəl/）是一种标准化的，通用的纯函數程式語言，有非限定性语义和强静态类型。它的命名源自美国逻辑学家哈斯凱爾·加里，他在数学逻辑方面上的工作使得函数式编程语言有了广泛的基础。在Haskell中，“函数是第一類物件”。作为一门函數程式語言，主要控制结构是函数。Haskell语言是1990年在编程语言Miranda的基础上标准化的，并且以λ演算为基础发展而来。这也是为什么Haskell语言以希腊字母「λ」（Lambda）作为自己的标志。Haskell具有“证明即程序、命题为类型”的特征。</zh-speak>
    </Feature>
    <Feature data="Orwell (programming language)" zh-data="" id="710" uri="http://dbpedia.org/resource/Orwell_(programming_language)">
      <neighbors>
        <neighbor dest="686" relationship="designer" weight="0"/>
        <neighbor dest="709" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Orwell is a small lazy functional programming language first released in 1984 by Philip Wadler.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Generic Java" zh-data="" id="711" uri="http://dbpedia.org/resource/Generic_Java">
      <neighbors>
        <neighbor dest="686" relationship="designer" weight="0"/>
        <neighbor dest="693" relationship="designer" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="930" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Generic Java  is a programming language that is a superset of Java which adds support for generic programming.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Thinking Machines Corporation" zh-data="" id="712" uri="http://dbpedia.org/resource/Thinking_Machines_Corporation">
      <neighbors>
        <neighbor dest="384" relationship="type" weight="0"/>
      </neighbors>
      <speak>Thinking Machines Corporation was a supercomputer manufacturer founded in Waltham, Massachusetts, in 1983 by W. Daniel "Danny" Hillis and Sheryl Handler to turn Hillis's doctoral work at MIT on massively parallel computing architectures into a commercial product known as the Connection Machine.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Sun Microsystems" zh-data="昇陽電腦" id="713" uri="http://dbpedia.org/resource/Sun_Microsystems">
      <neighbors>
        <neighbor dest="26" relationship="founded by" weight="0"/>
        <neighbor dest="714" relationship="owning company" weight="0"/>
      </neighbors>
      <speak>Sun Microsystems, Inc. was a company that sold computers, computer components, computer software, and information technology services and that created the Java programming language and the Network File System , on the former west campus of the Agnews Developmental Center.On January 27, 2010, Sun was acquired by Oracle Corporation for US $7.4 billion, based on an agreement signed on April 20, 2009. The following month, Sun Microsystems, Inc. was merged with Oracle USA, Inc. to become Oracle America, Inc.Sun products included computer servers and workstations built on its own RISC-based SPARC processor architecture as well as on x86-based AMD's Opteron and Intel's Xeon processors; storage systems; and a suite of software products including the Solaris operating system, developer tools, Web infrastructure software, and identity management applications.</speak>
      <zh-speak>Sun Microsystems（中国大陆分公司原称作“太阳计算机系统（中国）有限公司”，现为“甲骨文（中国）软件系统有限公司”；台湾分公司原称作“昇陽電腦股份有限公司”，现为“美商甲骨文有限公司台灣分公司”）创建于1982年2月24日，1986年在美国那斯達克上市。主要产品是工作站、服务器和UNIX 作業系統。1992年升阳推出了市场上第一台多处理器工作站SPARCstation 10，并于次年进入财富500强。SUN公司的名字是由Stanford University Network缩写而来。主要作業系統為Solaris，具有32位和64位两个版本，并同时支持SPARC系列和x86/x64系列处理器。Solaris可以相容於Sun全系列的工作站與伺服器，并可为用户掩盖底层平台差别，给用户在不同平台上提供一致的使用感受。1995年昇陽开发了Java技术，这是第一个通用软件平台。在1997年升阳开始推出其新的64位元服务器家族Sun Enterprise 10000。同年又开发出Java 2。近年Sun在设计制造基于CMT技术的UltraSPARC T1，UltraSPARC T2和Rock微处理器。升阳在行业中被认为是最具创造性的企业之一，它想尝试新的软件方式和定价模式等等。目前它是极少数几个自己生产微处理器，电脑系统以及作業系統的公司之一。1995年以來，x86市场成長迅速。目前Sun除设计制造基于SPARC处理器的機器設備外，也与Intel &amp; AMD合作生產x86/x64伺服器。其作業系統Solaris也開始採用開放原始碼，称为OpenSolaris项目。2009年4月20日，太阳计算机系统公司宣布以每股9.50美元、总额74亿美金被甲骨文公司收购。</zh-speak>
    </Feature>
    <Feature data="Oracle Corporation" zh-data="甲骨文公司" id="714" uri="http://dbpedia.org/resource/Oracle_Corporation">
      <neighbors>
        <neighbor dest="714" relationship="product" weight="0"/>
        <neighbor dest="6" relationship="foundation place" weight="0"/>
        <neighbor dest="79" relationship="foundation place" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="13" relationship="traded as" weight="0"/>
      </neighbors>
      <speak>The Oracle Corporation is an American multinational computer technology corporation headquartered in Redwood City, California, United States.</speak>
      <zh-speak>甲骨文股份有限公司（NASDAQ：ORCL，Oracle）是全球大型數據庫軟件公司。总部位于美国加州红木城的紅木岸（Redwood Shores），現時行政總裁為公司創辦人劳伦斯·埃里森（Lawrence J. Ellison）。在2013年，甲骨文是繼Microsoft後，全球收入第二多的軟件公司。</zh-speak>
    </Feature>
    <Feature data="Missouri" zh-data="密蘇里州" id="715" uri="http://dbpedia.org/resource/Missouri">
      <neighbors>
        <neighbor dest="119" relationship="Dance" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="139" relationship="title" weight="0"/>
      </neighbors>
      <speak>Missouri , with the Missouri River dividing both regions.</speak>
      <zh-speak>密蘇里州（英语：Missouri）是美國第24個州，一般被劃分在中西部地區之內。州鸟是蓝鸟，州歌“密苏里华尔兹”，州花为山楂花。</zh-speak>
    </Feature>
    <Feature data="Grace Murray Hopper Award" zh-data="" id="716" uri="http://dbpedia.org/resource/Grace_Murray_Hopper_Award">
      <neighbors/>
      <speak>The Grace Murray Hopper Awards  since 1971. The award goes to a computer professional who makes a single, significant technical or service contribution at or before age 35.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Harry H. Goode Memorial Award" zh-data="" id="717" uri="http://dbpedia.org/resource/Harry_H._Goode_Memorial_Award">
      <neighbors/>
      <speak>The Harry H. Goode Memorial Award is an IEEE Computer Society annual awards in honor of Harry H. Goode for achievements in the information processing field which are considered either a single contribution of theory, design, or technique of outstanding significance, or the accumulation of important contributions on theory or practice over an extended time period, the total of which represent an outstanding contribution.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="GNU Emacs" zh-data="" id="718" uri="http://dbpedia.org/resource/GNU_Emacs">
      <neighbors>
        <neighbor dest="687" relationship="author" weight="0"/>
        <neighbor dest="783" relationship="programming language" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>GNU Emacs is the most popular and most ported Emacs text editor.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Common Lisp" zh-data="Common Lisp" id="719" uri="http://dbpedia.org/resource/Common_Lisp">
      <neighbors>
        <neighbor dest="719" relationship="implementations" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="687" relationship="designer" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="784" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="794" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="837" relationship="paradigm" weight="0"/>
        <neighbor dest="898" relationship="influenced" weight="0"/>
        <neighbor dest="920" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Common Lisp .</speak>
      <zh-speak>Common Lisp，缩写为CL（不要和缩写同为CL的組合邏輯混淆），作为Lisp的众多方言之一，由ANSI X3.226-1994(R1999)定义标准。它是为了标准化此前众多的Lisp分支而开发的，其本身并不是一个具体的实现，而是语言规范。市面上既有自由软件开源软件的实现，也有专有软件的实现。相对于各种嵌入在特定产品中的语言Emacs Lisp和AutoLISP，Common Lisp是一个通用用途的编程语言。不像很多早期的Lisp，Common Lisp同Scheme一样，其中的变量是有作用域的。Common Lisp是一种多重范式编程语言，这表现在： 支持各种编程技术：过程编程，函数编程和 面向对象的编程。 动态数据类型，但是可以使用可选的类型声明来提高效率和增强安全性。 可以通过一些标准特性来扩展，例如Lisp宏（程序自我进行的编译时代码重排（compile-time code rearrangement accomplished by the program itself））和阅读器宏（赋予用户自定义的保留字以特殊意义的符号扩展（extension of syntax to give special meaning to characters reserved for users for this purpose））。</zh-speak>
    </Feature>
    <Feature data="Scheme (programming language)" zh-data="Scheme" id="720" uri="http://dbpedia.org/resource/Scheme_(programming_language)">
      <neighbors>
        <neighbor dest="719" relationship="influenced" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="687" relationship="designers" weight="0"/>
        <neighbor dest="709" relationship="influenced" weight="0"/>
        <neighbor dest="760" relationship="influenced" weight="0"/>
        <neighbor dest="784" relationship="influenced" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="794" relationship="influenced" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="829" relationship="influenced" weight="0"/>
        <neighbor dest="888" relationship="influenced by" weight="0"/>
        <neighbor dest="898" relationship="influenced" weight="0"/>
        <neighbor dest="920" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Scheme and Common Lisp are the two principal dialects of the computer programming language Lisp.</speak>
      <zh-speak>Scheme是一种函数式编程语言，是Lisp的两种主要方言之一（另一种为Common Lisp）。不同于Common Lisp，Scheme遵循極簡主義哲学，以一个小型语言核心作为标准，加上各种强力语言工具（语法糖）来扩展语言本身。麻省理工學院與其他院校曾采用Scheme教授入門課程，並且著名的入門教材《计算机程序的构造和解释》（SICP，或稱「魔法書」）就是利用Scheme來解釋程式設計。Scheme的廣泛受眾被視為一個主要優勢，然而不同實現之間的差異成為了它的一個劣勢。Scheme最早由麻省理工學院的蓋伊·史提爾二世與傑拉德·傑伊·薩斯曼在1970年代發展出來，並由兩人發表的「λ論文集」推廣開來。Scheme語言與λ演算關係十分密切。小寫字母「λ」是Scheme語言的標誌。Scheme的哲学是：设计计算机语言不应该进行功能的堆砌，而应该尽可能减少弱点和限制，使剩下的功能显得必要。Scheme是第一個使用靜態作用域的Lisp方言，也是第一个引入“干净宏”和第一类续延的编程语言。</zh-speak>
    </Feature>
    <Feature data="NIL (programming language)" zh-data="" id="721" uri="http://dbpedia.org/resource/NIL_(programming_language)">
      <neighbors>
        <neighbor dest="687" relationship="developer" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
      </neighbors>
      <speak>NIL was a 32-bit implementation of Lisp developed at MIT and intended to be the successor to Maclisp.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Alberta" zh-data="艾伯塔" id="722" uri="http://dbpedia.org/resource/Alberta">
      <neighbors/>
      <speak>Alberta  south of the capital is Calgary, Alberta's largest city.</speak>
      <zh-speak>艾伯塔，也作阿尔伯塔省（英语：Alberta），简稱艾省或阿省；當地華人全稱亚伯达省，簡稱亞省；台湾译亚伯达省，香港译名与中国大陆相同。</zh-speak>
    </Feature>
    <Feature data="Camrose, Alberta" zh-data="卡姆罗斯" id="723" uri="http://dbpedia.org/resource/Camrose,_Alberta">
      <neighbors>
        <neighbor dest="722" relationship="is part of" weight="0"/>
        <neighbor dest="334" relationship="country" weight="0"/>
      </neighbors>
      <speak>Camrose /ˈkæmroʊz/ is a city in central Alberta, Canada, amid some of the richest farmland in the prairies.</speak>
      <zh-speak>卡姆罗斯（Camrose），加拿大艾伯塔省中部城市，距离省会埃德蒙顿90公里。总人口17,286（2011年）。卡姆罗斯市内有众多的公园，被誉为“玫瑰城”。</zh-speak>
    </Feature>
    <Feature data="Ontario" zh-data="安大略" id="724" uri="http://dbpedia.org/resource/Ontario">
      <neighbors>
        <neighbor dest="334" relationship="country" weight="0"/>
        <neighbor dest="725" relationship="Capital" weight="0"/>
      </neighbors>
      <speak>Ontario /ɒnˈtɛərioʊ/ is one of the ten provinces of Canada, located in east-central Canada.</speak>
      <zh-speak>安大略省（英语/法语：Ontario），簡稱安省，位于加拿大的東部，面積約100萬平方公里，加拿大的首都渥太华也在安大略省。安大略是加拿大人口最多的省份，根據2010年統計，安大略人口大約有1420萬。</zh-speak>
    </Feature>
    <Feature data="Toronto" zh-data="多伦多" id="725" uri="http://dbpedia.org/resource/Toronto">
      <neighbors>
        <neighbor dest="724" relationship="is part of" weight="0"/>
        <neighbor dest="334" relationship="country" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
      </neighbors>
      <speak>Toronto , which comprises the majority of the Greater Toronto Area, had a population of 5,583,064.The history of Toronto began in the late 18th century when the British Crown purchased its land from the Mississaugas of the New Credit.</speak>
      <zh-speak>多伦多（英语／法语：Toronto），是北美洲国家加拿大安大略省首府，加拿大的最大城市。多伦多坐落在安大略湖西北岸的南安大略地区。根据2012年七月的加拿大人口普查，多伦市人口达2,790,060，为加拿大最大城市，亦超越芝加哥成為北美第4大城市。多伦多市是大多伦多地区的心脏地区，也是安大略省南部人口稠密区（称作“金馬蹄地區”）的一部分。城市区有5,132,794名居民。 在2011年人口普查中，多倫多人口普查區有5,583,064名居民，而覆蓋範圍較廣的大多倫多地區則有6,054,191名居民。作為加拿大的经济中心，多伦多是一個世界级城市， 也是世界上最大的金融中心之一。 多伦多在经济上的领先地位在于金融、商业服务、电信、宇航、交通运输、媒体、艺术、电影、电视製作、出版、软件、医药研究、教育、旅游、体育等产业。多伦多证券交易所是世界第七大交易所，总部设于市内，有多数加拿大公司在这里上市。多伦多的国际性人口 体现出它是前往加拿大移民的重要落腳點。 而市内49%的人口是在加拿大以外誕生，也造就多倫多成為世上種族最多樣化的城市之一。目前多伦多的低犯罪率、潔淨的環境、高生活水准、以及对多樣文化的包容性，令該市被多個经济学智囊团列为世界上最宜居的城市之一。 另一方面，多伦多於2006年被列為加拿大生活成本最高的城市。大约1/3的加拿大人居住在距多伦多两小时车程的郊区。加拿大大约1/6的就业机会在该市。多伦多当地的華僑及華裔人口多达四十萬，相當於加拿大全國約百分之一的人口。</zh-speak>
    </Feature>
    <Feature data="Canadians" zh-data="" id="726" uri="http://dbpedia.org/resource/Canadians">
      <neighbors>
        <neighbor dest="290" relationship="population place" weight="0"/>
        <neighbor dest="79" relationship="population place" weight="0"/>
        <neighbor dest="758" relationship="population place" weight="0"/>
        <neighbor dest="759" relationship="region" weight="0"/>
      </neighbors>
      <speak>Canadians  of immigration and settlement of non-aboriginal peoples took place over the course of nearly two centuries and continue today.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Howard H. Aiken" zh-data="霍華德·艾肯" id="727" uri="http://dbpedia.org/resource/Howard_H._Aiken">
      <neighbors>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="688" relationship="doctoral student" weight="0"/>
        <neighbor dest="448" relationship="field" weight="0"/>
        <neighbor dest="522" relationship="alma mater" weight="0"/>
        <neighbor dest="717" relationship="award" weight="0"/>
        <neighbor dest="748" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>"The desire to economize time and mental effort in arithmetical computations, and to eliminate human liability to error is probably as old as the science of arithmetic itself.”Howard Hathaway Aiken  was a pioneer in computing, being the original conceptual designer behind IBM's Harvard Mark I computer.</speak>
      <zh-speak>霍華德·海撒威·艾肯（英语：Howard Hathaway Aiken，1900年3月8日－1973年5月14日），生於美國新澤西州霍博肯，計算機科學先驅，為IBM Harvard Mark I的設計者。</zh-speak>
    </Feature>
    <Feature data="IBM" zh-data="IBM" id="728" uri="http://dbpedia.org/resource/IBM">
      <neighbors>
        <neighbor dest="4" relationship="division" weight="0"/>
        <neighbor dest="382" relationship="foundation place" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
        <neighbor dest="13" relationship="traded as" weight="0"/>
      </neighbors>
      <speak>The International Business Machines Corporation .  In 2014 IBM announced that it would "offload" IBM Micro Electronics semiconductor manufacturing to Global Foundries.</speak>
      <zh-speak>国际商业机器股份有限公司（英语：International Business Machines Corporation，首字母縮略字：IBM，曾译万国商用机器公司）是一家提供資訊服務的跨國公司。IBM生产并销售计算机硬件及软件，并且为系统架构和网络托管提供咨询服务。IBM公司总部設在美國纽约州阿蒙克市。截止2013年，IBM已在全球拥有12个研究实验室和大量的软件开发基地。IBM在材料、化学、物理等科学领域有很高的成就，发明了很多产品。比较有名的IBM发明的产品包括硬盘，ATM，通用产品代码，SQL，关系数据库管理系统，DRAM，沃森。</zh-speak>
    </Feature>
    <Feature data="Wassily Leontief" zh-data="瓦西里·列昂季耶夫" id="729" uri="http://dbpedia.org/resource/Wassily_Leontief">
      <neighbors>
        <neighbor dest="92" relationship="citizenship" weight="0"/>
        <neighbor dest="79" relationship="citizenship" weight="0"/>
        <neighbor dest="688" relationship="doctoral student" weight="0"/>
        <neighbor dest="522" relationship="work institution" weight="0"/>
      </neighbors>
      <speak>Wassily Wassilyovich Leontief .</speak>
      <zh-speak>瓦西里·瓦西里耶维奇·列昂季耶夫（俄語：Василий Васильевич Леонтьев；英語：Wassily Leontief，1905年8月5日－1999年2月5日）是一位俄裔美國經濟學家，後移居美國任教於哈佛大學。他以「投入產出理論」對於經濟學的貢獻获得了1973年諾貝爾經濟學獎。他曾于1928年至1929年在中國住過一年。</zh-speak>
    </Feature>
    <Feature data="Queen's University" zh-data="皇后大學 (加拿大)" id="730" uri="http://dbpedia.org/resource/Queen's_University">
      <neighbors>
        <neighbor dest="724" relationship="province" weight="0"/>
      </neighbors>
      <speak>Queen's University at Kingston  of land throughout Ontario and owns Herstmonceux Castle in East Sussex, England.</speak>
      <zh-speak>女王大學（Queen's University，又譯皇后大學）創始于加拿大建國前二十六年，西元1841年十月十六日，以英國維多利亞女王命名，位於加拿大安大略省京士頓市，是一所加拿大的頂尖公立大學。女王大學在安大略省擁有超過十四平方公里的土地面積，並在英國英格蘭東南部東薩塞克郡校區擁有Herstmonceux城堡，該城堡自西元1957年到1988年曾是格林尼治皇家天文臺的所在地。女王大學每年約有兩萬三千名的在校生。在全世界各地以及全加拿大各處都有皇后大學校友的蹤跡。每年亦可在加拿大安大略省大專體育競賽中看見由皇后大學派出的校隊爭取榮譽，並以「黃金蓋爾人」著稱。</zh-speak>
    </Feature>
    <Feature data="Computer Pioneer Award" zh-data="" id="731" uri="http://dbpedia.org/resource/Computer_Pioneer_Award">
      <neighbors/>
      <speak>The Computer Pioneer Award was established in 1981 by the Board of Governors of the IEEE Computer Society to recognize and honor the vision of those people whose efforts resulted in the creation and continued vitality of the computer industry.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="IBM Fellow" zh-data="IBM院士" id="732" uri="http://dbpedia.org/resource/IBM_Fellow">
      <neighbors/>
      <speak>An IBM Fellow is an appointed position at IBM made by IBM’s CEO. Typically only four to nine  IBM Fellows are appointed each year, in May or June.</speak>
      <zh-speak>IBM院士（英语：IBM Fellow），自1962年開始，由IBM公司總裁小湯瑪士·華生（Thomas Watson, Jr.）設立的公司內頭銜，是IBM公司內的工程師、科學家、程式員所能獲得的最高榮譽。每年由IBM公司執行長，選出四到九名，授與這項榮銜。成為IBM院士之後，IBM公司通常會給與他們更大的空間，讓他們可以追求與實踐在他們自身專業領域內所提出的研究方向與研究計劃。IBM公司全部員工約433,000位，屬於技術性質的成員超過 200,000位，其中約有超過 600個人被授與IBM傑出工程師職位，而自1962年至今，共有246個人被授與IBM院士頭銜，其中85位現今仍是IBM員工。史上第一位獲得IBM院士頭銜的，一般認為是法蘭西斯·漢米爾頓（Francis E. Hamilton），他在1963年獲得這個頭銜。</zh-speak>
    </Feature>
    <Feature data="J (programming language)" zh-data="J语言" id="733" uri="http://dbpedia.org/resource/J_(programming_language)">
      <neighbors>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="688" relationship="designer" weight="0"/>
        <neighbor dest="734" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>The J programming language, developed in the early 1990s by Kenneth E. Iverson and Roger Hui, is a synthesis of APL  can be effectively used as a framework for both class-based and prototype-based object-oriented programming.J is not a von Neumann programming language; however, it is possible to use the von Neumann programming style.Since March 2011, J is free and open source software under the GPLv3 license.</speak>
      <zh-speak>J，是图灵奖获得者肯尼斯·艾佛森和許國華(Roger Hui)（出生于香港后去加拿大）於九十年代初發明的一种程序设计语言，是APL语言（亦是由艾佛森所創）、FP、FL函數編程語言的繼承者。為了避免APL使用特別的字集而遇到的問題，J只需基本的ASCII字集，多用點號和冒號來擴展現有基本字元的意義。作為一個陣列編程語言，J非常簡潔和強大，在數學和统计学程式設計上十分有效，特別是矩陣分析的能力。如同原本的FP/FL程式語言，J透過它編程的特色，支援函數級別編程。J並非馮諾曼程式語言，卻能容許程式員使用馮諾曼編程風格。</zh-speak>
    </Feature>
    <Feature data="APL (programming language)" zh-data="APL語言" id="734" uri="http://dbpedia.org/resource/APL_(programming_language)">
      <neighbors>
        <neighbor dest="688" relationship="designer" weight="0"/>
        <neighbor dest="733" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>APL  is a programming language developed in the 1960s by Kenneth E. Iverson.</speak>
      <zh-speak>APL 是 A Programming Language 或 Array Processing Language 的缩写。肯尼斯·艾佛森在1962年设计这个语言时他正在哈佛大学工作，1979年他因对数学表达式和编程语言理论的贡献而得到图灵奖。在过去数十年的使用历史中，APL 从它的原始版本开始不断改变和发展，今天的版本与1963年发表时的版本已经非常不一样了。但它始终是一种解释执行的计算机语言。现代的 APL 版本支持其初始版本不支持的结构和模式编程。APL 至今依然使用一种非标准化的字母表，这一直是他人对 APL 的批评。</zh-speak>
    </Feature>
    <Feature data="BCPL" zh-data="BCPL" id="735" uri="http://dbpedia.org/resource/BCPL">
      <neighbors>
        <neighbor dest="689" relationship="designer" weight="0"/>
        <neighbor dest="783" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="867" relationship="influenced" weight="0"/>
        <neighbor dest="875" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>BCPL  is a procedural, imperative, and structured computer programming language designed by Martin Richards of the University of Cambridge in 1966.</speak>
      <zh-speak>BCPL（Basic Combined Programming Language），是一種電腦程式設計語言，源自更早的CPL語言，1966年由劍橋大學的馬丁·理察德（Martin Richards）所發展出來的。Richards試著移除了CPL中最複雜的組成，第一支BCPL compiler在IBM 7094電腦中完成。身為早期程式語言的BCPL，如今已不再廣泛使用，但它的影響卻是深遠的，今日流行的C語言即是參考BCPL所設計。BCPL是第一支使用括弧語言，括弧特徵在C語言中隨處可見，例如BCPLLET FUNC foo(a) =  VALOF{ b := a + 1  RESULTIS b }C語言改良自BCPLfor (int i =  0; i &lt; 10; i++){    printf("%d", i);    doTask(i);}</zh-speak>
    </Feature>
    <Feature data="Computer Laboratory, University of Cambridge" zh-data="" id="736" uri="http://dbpedia.org/resource/Computer_Laboratory,_University_of_Cambridge">
      <neighbors/>
      <speak>The Computer Laboratory is the computer science department of the University of Cambridge.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Eben Upton" zh-data="" id="737" uri="http://dbpedia.org/resource/Eben_Upton">
      <neighbors>
        <neighbor dest="438" relationship="award" weight="0"/>
        <neighbor dest="736" relationship="alma mater" weight="0"/>
        <neighbor dest="689" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="293" relationship="alma mater" weight="0"/>
      </neighbors>
      <speak>Eben Christopher Upton is a Technical Director and ASIC architect for Broadcom.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Amiga" zh-data="Amiga" id="738" uri="http://dbpedia.org/resource/Amiga">
      <neighbors/>
      <speak>The Amiga is a family of personal computers sold by Commodore in the 1980s and 1990s. The first model was launched in 1985 as a high-end home computer and became popular for its graphical, audio and multi-tasking abilities.</speak>
      <zh-speak>Amiga（非正式譯名為阿米加）是Amiga公司開發的個人電腦產品系列。在1982年，主要的硬件設計師杰·邁納開始了Amiga的開發工作。Commodore International收購了Amiga公司後，在1985年將Amiga引入到市場裡。「Amiga」這個名詞在西班牙語裡意為女性朋友。</zh-speak>
    </Feature>
    <Feature data="Commodore International" zh-data="" id="739" uri="http://dbpedia.org/resource/Commodore_International">
      <neighbors>
        <neighbor dest="724" relationship="foundation" weight="0"/>
        <neighbor dest="725" relationship="foundation" weight="0"/>
        <neighbor dest="334" relationship="foundation" weight="0"/>
        <neighbor dest="79" relationship="location" weight="0"/>
        <neighbor dest="8" relationship="Former type" weight="0"/>
      </neighbors>
      <speak>Commodore International  and released its Amiga computer line in 1985.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Operating system" zh-data="操作系统" id="740" uri="http://dbpedia.org/resource/Operating_system">
      <neighbors/>
      <speak>An operating system  is software that manages computer hardware and software resources and provides common services for computer programs.</speak>
      <zh-speak>操作系统（英文：Operating System，縮寫：OS）是管理计算机硬件與软件資源的计算机程序，同时也是计算机系统的核心与基石。操作系统需要处理如管理與配置内存、決定系統資源供需的優先次序、控制輸入與輸出裝置、操作网络與管理文件系统等基本事務。操作系统也提供一個讓使用者與系統互動的操作界面。操作系统的型態非常多樣，不同機器安裝的操作系统可從簡單到複雜，可從非智慧型手機的嵌入式系统到超級電腦的大型操作系統。許多操作系统製造者對它涵盖范畴的定义也不尽一致，例如有些操作系统整合了图形用户界面，而有些僅使用命令行界面，而將图形用户界面視為一種非必要的應用程式。操作系统理论在计算机科学中，為歷史悠久而又活跃的分支；而操作系统的设计与实现则是软件工业的基础与核心。</zh-speak>
    </Feature>
    <Feature data="Rebol" zh-data="REBOL" id="741" uri="http://dbpedia.org/resource/Rebol">
      <neighbors>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="690" relationship="designer" weight="0"/>
        <neighbor dest="564" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Rebol , database applications, utilities, and multimedia applications.</speak>
      <zh-speak>REBOL（發音reb-ol ['reb-ol]，英文Relative Expression Based Object Language的缩写），程序设计语言，结合了编程语言和元数据语言的特点，具有方言化的功能。针对分布式计算而设计。REBOL由Carl Sassenrath设计，他是AmigaOS的系统架构师。</zh-speak>
    </Feature>
    <Feature data="University of California, Davis" zh-data="加利福尼亞大學戴維斯分校" id="742" uri="http://dbpedia.org/resource/University_of_California,_Davis">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
        <neighbor dest="6" relationship="state" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>The University of California, Davis  and the Mountain Pacific Sports Federation.</speak>
      <zh-speak>戴維斯加利福尼亞大學 (University of California, Davis；縮寫為 UC Davis、UCD；簡稱戴维斯加大；又常被譯做加利福尼亞大學戴維斯分校)，毗鄰美國加州戴維斯市，是一所公立大學，亦是加州大學系統的十所學校之一。在加州大学系統下的各校中，戴维斯加大校园面积最大，占有超過7156英亩的土地。戴維斯加大作为美国和世界顶尖大学，在美國公立大學中全國排行第八名，美国大学综合排名第38，加大系统内与聖地牙哥加大 (UC San Diego) 并列第三。该校是 Tier-1(最高级别) 全美最顶尖大学之一，与加州大学伯克利分校(UC Berkeley)、加州大学洛杉矶分校(UCLA)、加州大学圣地亚哥分校(UC San Diego) 齐名。戴维斯加大被誉为美国“公立常春藤”之一。在校大学生、硕士生與博士生三万多。戴維斯加大是一所公立综合性研究大学。学校设10个学院， 以管理、经济、法律、健康科学、社会科学、人文及艺术等科系著称，同时也是世界环境科学、农业和可持续发展的研究和教育中心。</zh-speak>
    </Feature>
    <Feature data="Commodore CDTV" zh-data="" id="743" uri="http://dbpedia.org/resource/Commodore_CDTV">
      <neighbors>
        <neighbor dest="739" relationship="manufacturer" weight="0"/>
      </neighbors>
      <speak>The CDTV  was a multimedia platform developed by Commodore International and launched in March 1991.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ukiah, California" zh-data="尤奇亚" id="744" uri="http://dbpedia.org/resource/Ukiah,_California">
      <neighbors>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="248" relationship="area code type" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
      </neighbors>
      <speak>Ukiah , Ukiah serves as the city center for Mendocino County and much of neighboring Lake County.</speak>
      <zh-speak>尤奇亚（英文：Ukiah），是美国加利福尼亚州门多西诺县下属的一座城市。建市于1876年3月8日，面积大约为4.67平方英里 (12.1平方公里)。根据2010年美国人口普查，该市有人口16,075人。</zh-speak>
    </Feature>
    <Feature data="Madison, Wisconsin" zh-data="麦迪逊" id="745" uri="http://dbpedia.org/resource/Madison,_Wisconsin">
      <neighbors>
        <neighbor dest="206" relationship="subdivision type" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
      </neighbors>
      <speak>Madison is the capital of the State of Wisconsin and the county seat of Dane County.</speak>
      <zh-speak>麦迪逊（Madison）是美国是威斯康辛州的首府和戴恩县的县治，亦為威斯康辛大學主校區之所在地。2006年時人口數為223,389人，是威斯康辛州第二大城，僅次於密爾瓦基。同時也是全美第82大城。麥迪遜市是美國人口普查局的麥迪遜都會區的主要成員，該都會區還包含了整個戴恩縣以及鄰近的Iowa及Columbia縣。整個麥迪遜都會區在2006年人口估計為543,022人，也是人口成長最快速的幾個都會區之一。州议会大楼和其他政府机关多位于市中心Mendota湖及Monona湖之間的狹長陸橋上。</zh-speak>
    </Feature>
    <Feature data="Software engineering" zh-data="软件工程" id="746" uri="http://dbpedia.org/resource/Software_engineering">
      <neighbors/>
      <speak>Software engineering  is the study and an application of engineering to the design, development, and maintenance of software.Typical formal definitions of software engineering are: "the application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software"; "an engineering discipline that is concerned with all aspects of software production"; and "the establishment and use of sound engineering principles in order to economically obtain software that is reliable and works efficiently on real machines."↑ ↑ ↑ ↑ ↑ ↑</speak>
      <zh-speak>软件工程是研究和应用如何以系统性的、规范化的、可定量的过程化方法去开发和维护软件，以及如何把经过时间考验而证明正确的管理技术和当前能够得到的最好的技术方法结合起来的学科。它涉及到程序设计语言、数据库、软件开发工具、系统平台、标准、设计模式等方面。在现代社会中，软件应用于多个方面。典型的软件比如有电子邮件、嵌入式系统、人机界面、办公套件、操作系统、编译器、数据库、游戏等。同时，各个行业几乎都有计算机软件的应用，比如工业、农业、银行、航空、政府部门等。这些应用促进了经济和社会的发展，提高人们的工作效率，同时提升了生活质量。软件工程师是对应用软件创造软件的人们的统称，软件工程师按照所处的领域不同可以分为系统分析师、系统架构师、软件设计师、程序员、测试工程师、界面与交互设计师等等。人们也常常用程序员来泛指各种软件工程师。</zh-speak>
    </Feature>
    <Feature data="Tim Teitelbaum" zh-data="" id="747" uri="http://dbpedia.org/resource/Tim_Teitelbaum">
      <neighbors>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
        <neighbor dest="438" relationship="alma mater" weight="0"/>
        <neighbor dest="569" relationship="workplaces" weight="0"/>
        <neighbor dest="707" relationship="doctoral advisor" weight="0"/>
        <neighbor dest="691" relationship="doctoral student" weight="0"/>
      </neighbors>
      <speak>Tim Teitelbaum  for his 1984 paper co-authored with Thomas Reps on the Synthesizer Generator.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="University of Wisconsin–Madison" zh-data="威斯康星大学麦迪逊分校" id="748" uri="http://dbpedia.org/resource/University_of_Wisconsin%E2%80%93Madison">
      <neighbors>
        <neighbor dest="745" relationship="city" weight="0"/>
        <neighbor dest="600" relationship="athletics" weight="0"/>
        <neighbor dest="79" relationship="country" weight="0"/>
      </neighbors>
      <speak>The University of Wisconsin–Madison  in the Carnegie Classification of Institutions of Higher Education.</speak>
      <zh-speak>威斯康辛大学麦迪逊分校（University of Wisconsin-Madison），位于美国威斯康辛州首府麦迪逊市，是威斯康辛大学系统的旗帜性学校。它是美国最著名的研究性公立大学之一，在2010年上海交通大學大學學術排名評比為全球第17名，學校亦有「公立常春藤」之稱，是美國知名的十大联盟的創始成员。威斯康辛大学麦迪逊分校是北美洲規模最大的大學之一，在政治學,經濟學,社会學，自然科学以及工程学等各大领域皆享負盛名。</zh-speak>
    </Feature>
    <Feature data="Paris Diderot University" zh-data="巴黎第七大学" id="749" uri="http://dbpedia.org/resource/Paris_Diderot_University">
      <neighbors/>
      <speak>Paris Diderot University - Paris 7, also known as Université Paris Diderot - Paris 7, is a leading French University located in Paris, France.</speak>
      <zh-speak>巴黎第七大学（法语：Université Paris Diderot - Paris VII），又称巴黎狄德罗大学，位于法国巴黎市中心，是法国及欧洲顶级的研究型大学之一，在医学、理学、人文科学与社会科学等领域享有国际性的声誉和影响力。同时，该校也是法国学科涉及面最广的大学之一，是巴黎地区唯一集医学、人文与理工于一体的一所综合性高等院校。该校成立于1971年，是创建于1253年的前巴黎大学的主要继承者之一，是索邦巴黎西岱盟校成员之一。目前该校有在校学生两万六千人，博士生两千多人，教师约两千人，行政技术人员一千多人。并设有研究中心一百多个，绝大部分都与法国国家科学研究中心等大型研究机构合作。自2007年起，除了位于巴黎北部的七所附属医院，该校大部分行政管理部门及院系已逐渐从朱西厄校区迁至毗邻法国国家图书馆的巴黎左岸新校区。同时，该校还将在新校址上修建巴黎规模最大的新图书馆。巴黎第七大学的历届毕业生和教师中共有两名诺贝尔奖得奖者，多名法兰西科学院院士、国家元首及部长。</zh-speak>
    </Feature>
    <Feature data="University of Copenhagen" zh-data="哥本哈根大学" id="750" uri="http://dbpedia.org/resource/University_of_Copenhagen">
      <neighbors/>
      <speak>The University of Copenhagen , along with University of Cambridge, University of Oxford, Yale University, The Australian National University, and UC Berkeley, amongst others.</speak>
      <zh-speak>哥本哈根大学（丹麦语:Københavns Universitet），位于丹麦王国的首都哥本哈根，是丹麦最历史最悠久、规模最大的综合性大学。在读学生总数约33000人，超过半数为女性。此外，还有逾六千教职员工。哥本哈根大学的校园散落在市区里和城市周边，最古老的部分则位于哥本哈根古城区。哥本哈根大学是斯堪的纳维亚地区第二古老的大学，它和位于日德兰半岛的奥胡斯大学同是丹麦国内享有国际声誉的教育和科研机构。在哥本哈根大学，多数课程是用丹麦语来教授的，但为了吸引国际学生，也有若干专业以英文和德文来授课。</zh-speak>
    </Feature>
    <Feature data="Wesleyan University" zh-data="衛斯理大學" id="751" uri="http://dbpedia.org/resource/Wesleyan_University">
      <neighbors>
        <neighbor dest="600" relationship="athletics" weight="0"/>
      </neighbors>
      <speak>Wesleyan University is a private liberal arts college in Middletown, Connecticut, United States, founded in 1831. Wesleyan is a Baccalaureate College that emphasizes undergraduate instruction in the arts and sciences, provides graduate research in many academic disciplines, and grants PhD degrees primarily in the sciences and mathematics.</speak>
      <zh-speak>衛斯連大學（英文︰Wesleyan University），又译维思大学，位於美國东北部康乃狄克州的米德尔敦，創立於1831年，是一所私立四年制文理學院。衛斯連大學與同位於新英格蘭安默斯特学院(Amherst College) 及威廉姆斯學院(Williams College)組成"小三强(Little Three)"。衛斯連大學也是"小長春藤盟校(Little Ivies)"的创始成员。</zh-speak>
    </Feature>
    <Feature data="Customer relationship management" zh-data="客户关系管理" id="752" uri="http://dbpedia.org/resource/Customer_relationship_management">
      <neighbors/>
      <speak>Customer relationship management  is a system for managing a company’s interactions with current and future customers.</speak>
      <zh-speak>客户关系管理（Customer relationship management，縮寫 CRM），企业活动面向长期的客户关系，以求提升企业成功的管理方式，其目的之一是要協助企業管理銷售循環：新客戶的招徠、保留舊客戶、提供客戶服務及進一步提升企業和客戶的關係，並运用市场营销工具，提供创新式的个性化的客户商谈和服务，辅以相应的資訊系統或信息技术如数据挖掘和数据库营销來協調所有公司與顧客間在銷售、行銷以及服務上的互動。</zh-speak>
    </Feature>
    <Feature data="Patricia House" zh-data="" id="753" uri="http://dbpedia.org/resource/Patricia_House">
      <neighbors/>
      <speak>Patricia A.  House is co-founder, vice chairman, and senior vice president of strategy of C3, a provider of energy and emissions management software.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="San Mateo, California" zh-data="聖馬刁 (加利福尼亞州)" id="754" uri="http://dbpedia.org/resource/San_Mateo,_California">
      <neighbors>
        <neighbor dest="205" relationship="subdivision type" weight="0"/>
        <neighbor dest="207" relationship="blank name" weight="0"/>
        <neighbor dest="6" relationship="is part of" weight="0"/>
        <neighbor dest="208" relationship="is part of" weight="0"/>
        <neighbor dest="209" relationship="type" weight="0"/>
        <neighbor dest="210" relationship="leader title" weight="0"/>
        <neighbor dest="211" relationship="established title" weight="0"/>
        <neighbor dest="143" relationship="time zone" weight="0"/>
      </neighbors>
      <speak>San Mateo  is a city in San Mateo County, California in the high-tech enclave of Silicon Valley in the San Francisco Bay Area.</speak>
      <zh-speak>圣马特奥 (San Mateo；当地多译为圣马刁；Saint Matthew“圣瑪竇”的西班牙语)，是一个位于美国加利福尼亞州聖馬刁郡的城市，在临近旧金山的海湾地区。聖馬刁在2010年人口普查時的人口為9萬7207人，是旧金山半岛較大的一个郊区城市，位于貝爾蒙特 (Belmont) 南邊、伯靈格姆 (Burlingame) 北邊、福斯特城 (Foster City) 東邊、高地-贝伍德公园 (Highlands-Baywood Park) 以及希爾斯伯勒 (Hillsborough) 西邊。聖馬刁市政府建制於1894年9月3日。</zh-speak>
    </Feature>
    <Feature data="Thomas Siebel" zh-data="" id="755" uri="http://dbpedia.org/resource/Thomas_Siebel">
      <neighbors/>
      <speak>Thomas Siebel  is an American business executive.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Lausanne" zh-data="洛桑" id="756" uri="http://dbpedia.org/resource/Lausanne">
      <neighbors>
        <neighbor dest="759" relationship="country" weight="0"/>
      </neighbors>
      <speak>Lausanne  is located in Lausanne – the IOC officially recognizes the city as the Olympic Capital – as is the headquarters of the Court of Arbitration for Sport.</speak>
      <zh-speak>洛桑（法語：Lausanne，国际音标：[loˈzan]）是瑞士法语区城市，位于日内瓦湖（法语：Lac Léman）北岸，与法国城市埃维昂莱班隔湖相望，北面是侏罗纪山脉。洛桑位于日内瓦东北约50公里处。它是瑞士联邦沃州和洛桑區首府，同時也是大洛桑都會區的核心城市，是瑞士的第五大城市。洛桑與鄰近的日內瓦一樣，是许多著名的國際組織例如國際奧委會等的總部所在地，因此也被称为“奥林匹克首都”。洛桑境內的洛桑管理學院亦是世界一流的著名學府與研究機構。洛桑也位于瑞士酿酒区的中心位置。另外，位于洛桑的洛桑联邦理工學院是瑞士两所联邦理工學院之一。</zh-speak>
    </Feature>
    <Feature data="Massive open online course" zh-data="大规模开放在线课堂" id="757" uri="http://dbpedia.org/resource/Massive_open_online_course">
      <neighbors/>
      <speak>A massive open online course . MOOCs are a recent development in distance education which was first introduced in 2008 and emerged as a popular mode of learning in 2012.Early MOOCs often emphasized open-access features, such as open licensing of content, structure and learning goals, to promote the reuse and remixing of resources.</speak>
      <zh-speak>大规模开放在线课堂（课程）（英语：Massive Open Online Course/MOOC)是一种针对于大众人群的在线课堂，人们可以通过网络来学习在线课堂。MOOC是远程教育的最新发展，它是一种通过开放教育资源形式而发展来的。MOOC的设计和课堂参与类似于学院和大学课堂，但MOOC一般不会像在校付费的学生那样要求学分。尽管如此，学习的奖励可能通过证书来证明。MOOC起源於開放教育資源運動和學習連接主義的思潮。最近，大量MOOC類似的計劃已經獨立地浮出水面，例如Coursera, Udacity, edX和Marginal Revolution University ；華文MOOC自2012年開始佈局，至2014年較知名的MOOC網站包括ewant育網、Share Course、Proera等。还有像MOOC学院这样的选课平台和社区，MOOC学院是中文互联网内最大的MOOC学习社区。這些引人注目的計劃的創始者投資機構和金融投資，幫助MOOC在2012年取得了顯著的公眾關注。MOOC没有完全既定的定义，但有两个显著的特点： Open access/开放共享：MOOC参与者不必是在校的注册学生，也不要求学费。它是让大家共享的。 Scalability/可擴張性：許多傳統課堂針對於一小群學生對應一位老師，但MOOC裡的「大規模」課堂是針對於不確定的參與者而言來設計的。早期MOOC的其它特點，例如內容的開放授權，開放結構和學習目標，以社群為中心等的特點。它們也不是在所有MOOC計劃裡都出現。</zh-speak>
    </Feature>
    <Feature data="Germany" zh-data="德国" id="758" uri="http://dbpedia.org/resource/Germany">
      <neighbors/>
      <speak>Germany  with a largely temperate seasonal climate.</speak>
      <zh-speak>德意志聯邦共和國（德语：Bundesrepublik Deutschland，发音 [ˈbʊndəsʁepuˌbliːk ˈdɔʏtʃlant]（13px 发音），簡稱：德國）是一個中歐联邦议会共和制國家，由16个联邦州组成，首都與最大城市為柏林。德國領土面積為357,021平方公里，氣候以溫帶氣候為主，人口約8,180萬人，是欧洲联盟中人口最多的國家。德國亦是歐洲大陸主要的經濟與政治实体之一，按國際匯率計算為世界第4大經濟體，以购买力平价計算則為世界第5大經濟體，同時還是世界第3大出口國及第3大進口國。德國國民生活水平在世界各国中名列前位，並具備完整的社会保障制度。僅次於美國，德国是世界上第二个最流行的迁移目的地。德國源自於古代居住在中歐的日耳曼族村落，並於百年間發展成數個遍及歐洲的世襲王國。自第10世紀起，日耳曼地區為神圣罗马帝国版圖核心。北日耳曼地區於16世紀成為宗教改革的中心，但南部及西部地區仍以信仰羅馬公教為主，兩教派間的衝突引發了三十年戰爭，標誌著羅馬公教與新教在日耳曼社會中維持並立。日耳曼地區在拿破崙戰爭时期為拿破崙所控制。隨著德意志邦聯內泛日耳曼主義興起，在普魯士王國的主導下，令大多數日耳曼邦國於1871年統一為德意志帝國。德意志帝國於1914年參加了第一次世界大戰，後於1918年國內爆發革命而被迫停戰，帝國解體、成為共和制的魏瑪共和國。由於德國在停戰協定——《凡爾賽條約》中深受不公正待遇、經濟崩潰、政局混亂，促使激進派政黨抬頭，最終於1930年代的經濟大恐慌時，由阿道夫·希特勒領導的納粹黨取得政權、建立納粹德國，从此之后進入了法西斯專政時期。1939年，德國入侵波蘭，最终引爆了第二次世界大战。最終德國於1945年戰敗，國土被分區佔領，後分裂形成了東德及西德兩個國家，一直到1990年重新統一。德國為欧洲各共同体於1957年設立時的創始國之一，該組織後於1993年統合於欧洲联盟之下；德國為申根区的一部份，並於1999年成為欧元区成員國。德國參與联合国、北大西洋公约组织、八大工業國組織、20國集團、经济合作与发展组织等國際組織，並任联合国安全理事会2011年至2012年間的非常任理事國。</zh-speak>
    </Feature>
    <Feature data="Switzerland" zh-data="瑞士" id="759" uri="http://dbpedia.org/resource/Switzerland">
      <neighbors/>
      <speak>Switzerland .</speak>
      <zh-speak>瑞士联邦（德语：Schweizerische Eidgenossenschaft；法语：Confédération suisse；意大利语：Confederazione Svizzera；羅曼什語：Confederaziun svizra；正式称呼采用拉丁语：Confœderatio Helvetica，因此瑞士的ISO 3166双拉丁字母国家代号是“CH”）通稱瑞士（德语：Schweiz；法语：Suisse；意大利语：Svizzera；羅曼什語：Svizra），為西欧國家之一，劃分為26個州。瑞士為聯邦制國家，伯尔尼是联邦政府所在地。瑞士北接德国，西邻法国，南接意大利，东临奥地利和列支敦士登。瑞士屬内陆山地國家，地理上分為阿爾卑斯山、瑞士高原及侏羅山脈三部分，面积41,285平方公里，阿爾卑斯山佔國土大部分面積，而800萬人口中，大多分布於瑞士高原，瑞士高原也是瑞士主要城市如經濟中心蘇黎世及日內瓦的所在地。瑞士因自然風光及氣候條件而有「世界公園」的美譽。瑞士武裝中立的歷史相當悠久，自1815年後從未捲入过國際战争，瑞士自2002年起才成為聯合國正式會員國，但瑞士實行積極外交政策且頻繁參與世界各地的重建和平活動；瑞士為红十字国际委员会的發源地且為许多国际性组织总部所在地，如联合国日内瓦办事处。在歐洲區域組織方面，瑞士為欧洲自由贸易联盟的創始國及申根区成員國，但並非欧盟及歐洲經濟區成員國。依照人均国民生产总值，瑞士是世界最富裕的国家之一，同時瑞士人均財富（在不统计摩纳哥的情况下）也居世界首位。依國際匯率計算，瑞士為世界第19大經濟體；以购买力平价計算則為世界36大經濟體；出口額及進口額分別居世界第20位及第18位。瑞士由3個主要語言及文化區所組成，分別為德语區、法语區及意大利语區，而後加入了罗曼什语區。雖然瑞士人中德語人口居多數，但瑞士並未形成單一民族及語言的國家。對國家強烈的歸屬感則來自於共同的歷史背景及價值觀，如联邦主义及直接民主制等。傳統上以瑞士永久同盟於1291年8月初締結為建國之初始，而8月1日是瑞士國慶日。</zh-speak>
    </Feature>
    <Feature data="Scala (programming language)" zh-data="Scala" id="760" uri="http://dbpedia.org/resource/Scala_(programming_language)">
      <neighbors>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="693" relationship="designer" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="899" relationship="influenced" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
        <neighbor dest="914" relationship="influenced by" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
        <neighbor dest="922" relationship="influenced" weight="0"/>
        <neighbor dest="930" relationship="influenced by" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>Scala  is an object-functional programming language for general software applications.</speak>
      <zh-speak>Scala（发音为/ˈskɑːlə, ˈskeɪlə/）是一门多范式的编程语言，设计初衷是要整合面向对象编程和函数式编程的各种特性。</zh-speak>
    </Feature>
    <Feature data="ETH Zurich" zh-data="苏黎世联邦理工学院" id="761" uri="http://dbpedia.org/resource/ETH_Zurich">
      <neighbors>
        <neighbor dest="759" relationship="country" weight="0"/>
      </neighbors>
      <speak>ETH Zürich  and a member of the CESAER network.The school was founded by the Swiss Federal Government in 1854 with the stated mission to educate engineers and scientists, serve as a national center of excellence in science and technology and provide a hub for interaction between the scientific community and industry.</speak>
      <zh-speak>苏黎世联邦理工学院（德语：Eidgenössische Technische Hochschule Zürich，简称ETH Zürich或ETHZ，是瑞士的两所联邦理工学院之一，位于德语区的苏黎世，另一所是位于法语区的洛桑联邦理工学院。苏黎世联邦理工学院是世界最著名的理工大学之一，享有“欧陆第一名校”的美誉。该校创立于1855年，现有来自于一百多个国家的两万六千名师生分布于16个系，教研领域涵盖建筑、工程学、数学、自然科学、社会科学和管理科学，诞生了包括爱因斯坦在内的21位诺贝尔奖得主。该校还是国际研究型大学联盟、IDEA联盟等国际高校合作组织的成员。苏黎世联邦理工学院在2014/2015QS世界大学排名中，名列综合排名全球第12，其中工程和技术领域第3，自然科学第4；在泰晤士高等教育世界大学排名名列综合排名全球第13，工程和技术第8，自然科学第11；在世界大学学术排名名列综合排名全球第19。</zh-speak>
    </Feature>
    <Feature data="Ludwig Maximilian University of Munich" zh-data="慕尼黑大学" id="762" uri="http://dbpedia.org/resource/Ludwig_Maximilian_University_of_Munich">
      <neighbors>
        <neighbor dest="758" relationship="country" weight="0"/>
      </neighbors>
      <speak>Ludwig Maximilian University of Munich  is a public research university located in Munich, Germany.The University of Munich is among Germany's oldest universities.</speak>
      <zh-speak>路德维希-马克西米利安-慕尼黑大学（德语：Ludwig-Maximilians-Universität München），簡稱為「慕尼黑大學」或「LMU」，是一所位於德國巴伐利亞州首府的綜合性大學。西元1472年，由巴伐利亚－蘭茨胡特公国的路德维希公爵所创建，為欧洲历史最為悠久的大学之一。西元1802年为纪念创建人路德维希公爵和選帝侯马克西米利安一世，將校名變更为Universitas Ludovico-Maximilianea Monacensis（拉丁文），並賦予今日的德语名稱Ludwig-Maximilians Universität。慕尼黑大學為歐洲最著名的大學之一，以其雄厚的學術研究實力享譽國際，曾經培養造就過34位諾貝爾獎得主。2006年10月，慕尼黑大學成為德國為提升大學研究質量的「德國大學卓越計畫」中的「精英大學」之一，並且為首輪第一批入選的三所學校之一。在2012年6月揭曉的第二輪卓越計劃評選中，依舊維持其精英大學的地位，並獲得德國聯邦政府的研究資助。在《泰晤士報高等教育副刊》於2014年10月所發布的世界大學排名中，慕尼黑大學除了持續保有德國最優秀大學的地位外，並首度邁入世界最佳大學的前30名之列，為第29名。而在同年發表的上海交通大學《世界大學學術排名》中，則與海德堡大學並列為德國最佳大學。</zh-speak>
    </Feature>
    <Feature data="Typesafe Inc." zh-data="" id="763" uri="http://dbpedia.org/resource/Typesafe_Inc.">
      <neighbors>
        <neighbor dest="4" relationship="industry" weight="0"/>
        <neighbor dest="383" relationship="location" weight="0"/>
        <neighbor dest="693" relationship="founded by" weight="0"/>
      </neighbors>
      <speak>Typesafe is a company founded by Martin Odersky, the creator of the Scala programming language, and Jonas Bonér, the creator of the Akka middleware in 2011. It provides an Open source platform for building Reactive applications for the JVM, consisting of the Play Framework, Akka middleware and Scala programming language—with additional supporting products and development tools such as the Scala IDE for Eclipse, the Slick database query and access library for Scala and the sbt build tool.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ross J. Anderson" zh-data="" id="764" uri="http://dbpedia.org/resource/Ross_J._Anderson">
      <neighbors>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="533" relationship="field" weight="0"/>
        <neighbor dest="694" relationship="doctoral student" weight="0"/>
        <neighbor dest="561" relationship="award" weight="0"/>
      </neighbors>
      <speak>Ross John Anderson, FRS, FREng  is a researcher, writer, and industry consultant in security engineering.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="St John's College, Cambridge" zh-data="剑桥大学圣约翰学院" id="765" uri="http://dbpedia.org/resource/St_John's_College,_Cambridge">
      <neighbors/>
      <speak>St John's College is a constituent college of the University of Cambridge.</speak>
      <zh-speak>剑桥大学圣约翰学院（英语：St John's College, Cambridge）是剑桥大学的一所学院。</zh-speak>
    </Feature>
    <Feature data="Protocol stack" zh-data="协议栈" id="766" uri="http://dbpedia.org/resource/Protocol_stack">
      <neighbors/>
      <speak>The protocol stack is an implementation of a computer networking protocol suite.</speak>
      <zh-speak>协议栈（英语：Protocol stack），又稱協議堆疊，是计算机网络协议套件的一个具体的软件实现。协议套件中的一个协议通常是只为一个目的而设计的，这样可以使得设计更容易。因为每个协议模块通常都要和其他两个通信，它们通常可以想象成是协议栈中的层。最低级的协议总是描述与硬件的物理交互。每个高级的层次增加更多的特性。用户应用程序只是处理最上层的协议。（参见OSI模型）在实际中，协议栈通常分为三个主要部分：媒体，传输和应用。一个特定的操作系统或平台往往有两个定义良好的软件接口：一个在媒体层与传输层之间，另一个在传输层和应用程序之间。媒体到传输接口定义了传输协议的软件怎样使用特定的媒体和硬件（“驱动程序”）。例如，此接口定义的TCP/IP传输软件怎么与以太网硬件对话。这些接口的例子包括Windows和DOS环境下的ODI和NDIS。应用到传输接口定义了应用程序如何利用传输层。例如，此接口定义一个网页浏览器程序怎样和TCP/IP传输软件对话。这些接口的例子包括Unix世界中的伯克利套接字和微软的Winsock。</zh-speak>
    </Feature>
    <Feature data="Harrow, London" zh-data="哈羅 (倫敦)" id="767" uri="http://dbpedia.org/resource/Harrow,_London">
      <neighbors>
        <neighbor dest="298" relationship="region" weight="0"/>
        <neighbor dest="290" relationship="country" weight="0"/>
      </neighbors>
      <speak>Harrow /ˈhæroʊ/ is a large suburban town in the London Borough of Harrow, northwest London, England.</speak>
      <zh-speak>哈羅（Harrow 英语发音：/ˈhæroʊ/）是倫敦哈羅區的一個大鎮，位於倫敦西北郊，在查令十字西北10.5英里（16.9公里）處。這一地區有大量的喬治亞時代的保護建築，也是哈羅區的行政中心。2011年英國人口普查時有 33,928人。哈羅（Harrow）一名在古英語中意思是“異教徒的神廟”，這座神廟的位置所大概和現在的聖瑪麗教堂（St. Mary's Church）一致。哈羅是地區內的文化中心，威斯敏斯特大學分校區和哈羅公學、哈羅高中都位於此地。而經濟上主要依靠皇家國立整形外科醫院和總部位於當地的立博公司。</zh-speak>
    </Feature>
    <Feature data="FreeBSD" zh-data="FreeBSD" id="768" uri="http://dbpedia.org/resource/FreeBSD">
      <neighbors>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>FreeBSD is a free Unix-like operating system descended from Research Unix via the Berkeley Software Distribution . Although for legal reasons FreeBSD cannot use the Unix trademark, it is a direct descendant of BSD, which was historically also called "BSD Unix" or "Berkeley Unix." The first version of FreeBSD was released in 1993, and today FreeBSD is the most widely used open-source BSD distribution, accounting for more than three-quarters of all installed systems running open-source BSD derivatives.FreeBSD has similarities with Linux, with two major differences in scope and licensing: FreeBSD maintains a complete operating system, i.e. the project delivers kernel, device drivers, userland utilities and documentation, as opposed to a kernel only; and FreeBSD source code is generally released under a permissive BSD license as opposed to the copyleft GPL.The FreeBSD project includes a security team overseeing all software shipped in the base distribution.</speak>
      <zh-speak>FreeBSD是一种自由的類Unix操作系统，它起源于AT&amp;T Unix，是经过BSD、386BSD和4.4BSD发展而来的類Unix的一个重要分支。虽然出于法律原因FreeBSD不能称为Unix，但它是BSD的直接后裔，而BSD历史上被称为BSD Unix或Berkeley Unix。FreeBSD拥有超过200名活跃开发者和上千名贡献者。FreeBSD被认为是自由操作系统中的不知名的巨人。它不是Unix，但如Unix一样运行，兼容POSIX。作為一個作業系統，FreeBSD被認為相當穩健可靠。FreeBSD是以一個完善的作業系統的定位來做開發。其核心、驅動程式以及所有的使用者層（Userland）應用程式（比方說是Shell）均由同一原始碼版本控制系統保存（目前使用Subversion）。相較於另一知名的的作業系統Linux，其核心為一組開發人員設計，而使用者應用程式則交由他人開發（例如GNU計劃），最後再由其他團體整合並包裝成Linux套件。FreeBSD預設是无桌面環境的命令行界面，想要使用桌面環境必須自行安裝，或是使用PC-BSD之類的桌面發行版。</zh-speak>
    </Feature>
    <Feature data="OpenBSM" zh-data="" id="769" uri="http://dbpedia.org/resource/OpenBSM">
      <neighbors>
        <neighbor dest="530" relationship="genre" weight="0"/>
        <neighbor dest="768" relationship="operating system" weight="0"/>
        <neighbor dest="783" relationship="language" weight="0"/>
        <neighbor dest="896" relationship="developer" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>OpenBSM is an open source implementation of Sun's Basic Security Module  Audit API and file format.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Wolfson College, Cambridge" zh-data="剑桥大学沃尔森学院" id="770" uri="http://dbpedia.org/resource/Wolfson_College,_Cambridge">
      <neighbors/>
      <speak>Wolfson College is a constituent college of the University of Cambridge in Cambridge, England.</speak>
      <zh-speak>剑桥大学沃尔森学院（英语：Wolfson College, Cambridge) 是剑桥大学的一个学院。沃尔森学院不大，只招收年龄超过21岁的学生，主要是研究生，只有15%的本科生。学院创办于1965年，当时的名称为“大学学院”，1973年因为接受沃尔森基金会的赞助，改为现有的名称 。学院位于剑桥市西部，和剑桥大学图书馆相邻。沃尔森学院是一座相当现代化的学院，所以没有遵照老学院的那些传统，没有为研究员们在食堂设置贵宾席，研究员们和学生们混在一起用餐，有同等的权利使用学院的各种设施。学院是剑桥大学里第一座男女混招的学院，学生来自70多个国家，所以也是最国际化的学院 。学院接受了新加坡富商李成智博士的赞助，建设了李成智图书馆和李成智楼。</zh-speak>
    </Feature>
    <Feature data="Information retrieval" zh-data="信息檢索" id="771" uri="http://dbpedia.org/resource/Information_retrieval">
      <neighbors/>
      <speak>Information retrieval  indexing.Automated information retrieval systems are used to reduce what has been called "information overload". Many universities and public libraries use IR systems to provide access to books, journals and other documents.</speak>
      <zh-speak>資訊檢索（英语：Information Retrieval）是指搜尋資訊的科學，如在文件中搜尋資訊、搜尋文件本身、搜尋描述文件的metadata或是在資料庫中進行搜尋，無論是在相關的獨立資料庫或是超文本的網路資料庫（如万维网）。資訊檢索也是指依照使用者的資訊需求提供查詢的方法以及查詢的過程。然而這裡會出現一個使人混亂的情況，就是資料檢索、文件檢索、資訊檢索、文字檢索之間常令人混淆，上述的每一個詞彙都有各自的發展理論、實踐和技術。目前，文本信息检索是发展最成熟的信息检索技术之一。資訊檢索像是剛開始存在的、跨學科的，其建立於電腦科學、數學、圖書館學、資訊科學、認知心理學、語言學、統計學、物理學等。自動化的資訊檢索系統被用來減少資訊超載（Information overload），很多大學和公共圖書館使用資訊檢索系統提供檢索書目、期刊和其他的文件，資訊檢索系統通常與物件和檢索需求有關，檢索需求會被使用者用正式的陳述來描述其資訊需求放置於資訊檢索系統當中，而物件是一個實體被儲存於資料庫當中，一個文件就是一個資料物件，通常文件本身不會被直接儲存於資料庫中，但是會在系統中使用文件代理者來代替文件本身。</zh-speak>
    </Feature>
    <Feature data="Natural language processing" zh-data="自然语言处理" id="772" uri="http://dbpedia.org/resource/Natural_language_processing">
      <neighbors/>
      <speak>Natural language processing  languages.</speak>
      <zh-speak>自然語言處理（英语：Natural Language Processing，簡稱NLP）是人工智慧和語言學領域的分支學科。在這此領域中探討如何處理及運用自然語言；自然語言認知則是指讓電腦「懂」人類的語言。自然語言生成系統把計算機數據轉化為自然語言。自然語言理解系統把自然語言轉化為計算機程序更易于處理的形式。</zh-speak>
    </Feature>
    <Feature data="National Academy of Engineering" zh-data="美国国家工程院" id="773" uri="http://dbpedia.org/resource/National_Academy_of_Engineering">
      <neighbors/>
      <speak>The National Academy of Engineering Formally, "members" of the NAE must be U.S. Citizens.</speak>
      <zh-speak>美国国家工程院（英语：National Academy of Engineering），为美国工程学界的最高学术团体。美国工程学界的最高三大奖项均由美国国家工程院评选。现任院士每年选举产生新的院士。</zh-speak>
    </Feature>
    <Feature data="Lesk algorithm" zh-data="" id="774" uri="http://dbpedia.org/resource/Lesk_algorithm">
      <neighbors/>
      <speak>The Lesk algorithm is a classical algorithm for word sense disambiguation introduced by Michael E. Lesk in 1986.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Lex (software)" zh-data="Lex" id="775" uri="http://dbpedia.org/resource/Lex_(software)">
      <neighbors/>
      <speak>Lex is a computer program that generates lexical analyzers .Lex is commonly used with the yacc parser generator.</speak>
      <zh-speak>在電腦科學裡面，lex是一個產生詞法分析器（lexical analyzer，"掃描器"（scanners）或者"lexers"）的程式。 Lex常常與yacc 語法分析器產生程式（parser generator）一起使用。Lex(最早是埃里克·施密特和迈克·莱斯克製作）是許多UNIX系統的標準詞法分析器（lexical analyzer）產生程式，而且這個工具所作的行為被詳列為POSIX標準的一部分。Lex讀進一個代表詞法分析器規則的輸入字串流，然後輸出以C語言實做的詞法分析器原始碼。雖然傳統上是商業軟體，但是有些根據原本AT&amp;T程式碼這些版本的Lex可以以公開原始碼的形式獲得，並被視為某些系統的一部份，例如說OpenSolaris和貝爾實驗室九號計畫。另一個有名的Lex公開原始碼版本是flex，代表"快速的詞法分析器"（fast lexical analyzer）</zh-speak>
    </Feature>
    <Feature data="Solaris (operating system)" zh-data="Solaris" id="776" uri="http://dbpedia.org/resource/Solaris_(operating_system)">
      <neighbors>
        <neighbor dest="714" relationship="developer" weight="0"/>
        <neighbor dest="782" relationship="programmed in" weight="0"/>
        <neighbor dest="783" relationship="programmed in" weight="0"/>
      </neighbors>
      <speak>Solaris is a Unix operating system originally developed by Sun Microsystems.</speak>
      <zh-speak>Solaris原先是太阳微系统公司研制的类Unix操作系统，在Sun公司被Oracle併購後，稱作 Oracle Solaris。目前最新版为Solaris 11。早期的Solaris是由BSDUnix发展而来。这是因为昇陽公司的创始人之一，比爾·喬伊（Bill Joy）来自柏克萊加州大學（U.C.Berkeley）。但是随着时间的推移，Solaris现在在接口上正在逐渐向System V靠拢。2005年6月14日，Sun公司将正在开发中的Solaris 11的源代码以CDDL许可开放，这一开放版本就是OpenSolaris。2010年8月23日，OpenSolaris項目被Oracle中止。2011年11月9日，發佈 Solaris 11。Sun的操作系统最初叫做SunOS，SunOS 5.0开始，SUN的操作系统开发开始转向System V 4，并且有了新的名字叫做Solaris 2.0；Solaris 2.6以后，SUN删除了版本号中的「2」，因此，SunOS 5.10就叫做Solaris 10。 Solaris的早期版本后来又被重新命名为Solaris 1.x. 所以"SunOS"这个词被用做专指Solaris操作系统的内核，因此Solaris被认为是由SunOS，图形化的桌面计算环境，以及它网络增强部分组成。</zh-speak>
    </Feature>
    <Feature data="Artistic License" zh-data="艺术许可协议" id="777" uri="http://dbpedia.org/resource/Artistic_License">
      <neighbors/>
      <speak>The Artistic License .  However, this left undisturbed the finding that a free and open source license nonetheless has economic value.</speak>
      <zh-speak>Artistic License，又称艺术许可协议（英语：Artistic License），通常指最初的艺术许可协议（1.0版），是一个自由軟體授權條款，主要用在官方发布的Perl解释器和大部分CPAN模块的授权。原始的艺术许可协议是由Perl的创始人Larry Wall编写发布的。</zh-speak>
    </Feature>
    <Feature data="Microsoft Windows" zh-data="Microsoft Windows" id="778" uri="http://dbpedia.org/resource/Microsoft_Windows">
      <neighbors>
        <neighbor dest="782" relationship="programmed in" weight="0"/>
        <neighbor dest="783" relationship="programmed in" weight="0"/>
        <neighbor dest="866" relationship="programmed in" weight="0"/>
      </neighbors>
      <speak>Microsoft Windows or Windows is a metafamily of graphical operating systems developed, marketed, and sold by Microsoft.</speak>
      <zh-speak>Microsoft Windows，中文有译作微软视窗或微软窗口，或不译，是微软公司推出的一系列操作系统。它问世于1985年，起初仅是MS-DOS之下的桌面环境，而后其后续版本逐渐发展成为个人电脑和服务器用户设计的操作系统，并最终获得了世界个人电脑操作系统软件的垄断地位。视窗操作系统可以在几种不同类型的平台上运行，如个人电脑、服务器和嵌入式系統等等，其中在个人电脑的领域應用内最为普遍。在2004年，國際數據資訊公司中一次有关未来发展趋势的会议上，副董事长Avneesh Saxena宣布Windows拥有终端操作系统大约90％的市场份额。当前，最新的个人电脑版本Windows是Windows 8.1；最新的服务器版本Windows是Windows Server 2012 R2。</zh-speak>
    </Feature>
    <Feature data="OS X" zh-data="OS X" id="779" uri="http://dbpedia.org/resource/OS_X">
      <neighbors>
        <neighbor dest="782" relationship="programmed in" weight="0"/>
        <neighbor dest="783" relationship="programmed in" weight="0"/>
        <neighbor dest="878" relationship="programmed in" weight="0"/>
        <neighbor dest="896" relationship="developer" weight="0"/>
      </neighbors>
      <speak>OS X /ˌoʊ ɛs ˈtɛn/, formerly known as Mac OS X, is a series of Unix-based graphical interface  operating systems developed and marketed by Apple Inc.</speak>
      <zh-speak>OS X（前稱Mac OS X）是蘋果公司為麥金塔電腦開發的專屬作業系統。Mac OS X於1998年首次推出，并從2002年起隨麥金塔電腦發售。它是一套Unix基礎的作業系統，包含兩個主要的部份：核心名為Darwin，是以FreeBSD原始碼和Mach微核心為基礎，由蘋果公司和獨立開發者社群協力開發；及一個由蘋果電腦開發，名為Aqua之專有版權的圖形使用者介面。OS X Server亦同時於2001年發售，架構上來說與工作站（客戶端）版本相同，只有在包含的工作群組管理和管理軟體工具上有所差異，提供對於關鍵網路服務的簡化存取，像是郵件傳輸伺服器，Samba軟體，輕型目錄訪問協議伺服器以及網域名稱系統。同時它也有不同的授權型態。</zh-speak>
    </Feature>
    <Feature data="Textbook" zh-data="教科書" id="780" uri="http://dbpedia.org/resource/Textbook">
      <neighbors/>
      <speak>A textbook or coursebook  is a manual of instruction in any branch of study.</speak>
      <zh-speak>教科書或課本即是學校指定最官方的讀本書籍，它根據學校課程內容編寫，通常在小學及中學低年級，學生只要熟讀教科書內容，便可以應付測驗及考試。教科書也是教師重要的教學工具，美國有90%以上的老師，在90%的教學時間中，都是運用教科書來實施教學。在成長知識中，教科書的公信力是具有一定的權威。至少考試試題的答案是以考科書為標準。世界各國教科書選定方式不一，美國以認可制、自由制雙軌並行，選用又分「州選」和「學區直接選用」兩種方式。法國採認可制，流程為民間編寫後，通過篩檢，再登錄在「選定教科書目錄」，才成為供選用的教科書。英國的教科書產生無需經過官方審查，為自由制。德國与日本通过檢定后自由選用制。採用審定制的國家或地区還有韓國、中國、台灣、新加坡等。</zh-speak>
    </Feature>
    <Feature data="Python (programming language)" zh-data="Python" id="781" uri="http://dbpedia.org/resource/Python_(programming_language)">
      <neighbors>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="784" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="786" relationship="influenced by" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="791" relationship="typing" weight="0"/>
        <neighbor dest="792" relationship="influenced" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="794" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="800" relationship="dialects" weight="0"/>
        <neighbor dest="801" relationship="influenced" weight="0"/>
        <neighbor dest="802" relationship="developer" weight="0"/>
        <neighbor dest="803" relationship="license" weight="0"/>
        <neighbor dest="804" relationship="influenced by" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="807" relationship="influenced" weight="0"/>
        <neighbor dest="808" relationship="implementations" weight="0"/>
        <neighbor dest="809" relationship="dialects" weight="0"/>
        <neighbor dest="810" relationship="dialects" weight="0"/>
        <neighbor dest="811" relationship="influenced" weight="0"/>
        <neighbor dest="812" relationship="influenced by" weight="0"/>
        <neighbor dest="813" relationship="influenced" weight="0"/>
        <neighbor dest="814" relationship="influenced" weight="0"/>
        <neighbor dest="815" relationship="influenced" weight="0"/>
        <neighbor dest="816" relationship="designer" weight="0"/>
        <neighbor dest="817" relationship="implementations" weight="0"/>
        <neighbor dest="818" relationship="influenced by" weight="0"/>
        <neighbor dest="819" relationship="implementations" weight="0"/>
      </neighbors>
      <speak>Python is a general-purpose, high-level programming language whose design philosophy emphasizes code readability, remarkable power and very clear syntax, and its standard library is large and comprehensive.</speak>
      <zh-speak>Python（英國發音：/ˈpaɪθən/ 美國發音：/ˈpaɪθɑːn/），是一种面向对象、直譯式的電腦程式語言，具有近二十年的發展歷史。它包含了一組功能完备的標準庫，能夠輕鬆完成很多常見的任務。它的語法简单，與其它大多數程式設計語言使用大括号不一樣，它使用縮进來定義语句块。與Scheme、Ruby、Perl、Tcl等動態語言一樣，Python具備垃圾回收功能，能夠自動管理内存使用。它經常被當作腳本語言用於處理系统管理任務和網路程式編寫，然而它也非常適合完成各種高階任務。Python虛擬機本身幾乎可以在所有的作業系统中運行。使用一些諸如py2exe、PyPy、PyInstaller之類的工具可以將Python原始碼轉換成可以脫離Python解釋器執行的程式。Python的官方解释器是CPython，该解释器用C语言编写，是一個由社群驅動的自由軟體，目前由Python软件基金会管理。Python支援命令式程式設計、面向对象程序设计、函數式編程、面向侧面的程序设计、泛型編程多種編程范式。</zh-speak>
    </Feature>
    <Feature data="C++" zh-data="C++" id="782" uri="http://dbpedia.org/resource/C++">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="788" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="801" relationship="influenced" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="812" relationship="influenced by" weight="0"/>
        <neighbor dest="813" relationship="influenced" weight="0"/>
        <neighbor dest="829" relationship="influenced" weight="0"/>
        <neighbor dest="830" relationship="influenced" weight="0"/>
        <neighbor dest="831" relationship="designer" weight="0"/>
        <neighbor dest="832" relationship="influenced by" weight="0"/>
        <neighbor dest="833" relationship="influenced by" weight="0"/>
        <neighbor dest="834" relationship="influenced by" weight="0"/>
        <neighbor dest="835" relationship="influenced" weight="0"/>
        <neighbor dest="836" relationship="influenced" weight="0"/>
        <neighbor dest="837" relationship="paradigm" weight="0"/>
        <neighbor dest="838" relationship="influenced" weight="0"/>
        <neighbor dest="839" relationship="typing" weight="0"/>
        <neighbor dest="840" relationship="influenced" weight="0"/>
        <neighbor dest="841" relationship="influenced" weight="0"/>
        <neighbor dest="842" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>C++ .</speak>
      <zh-speak>C++是一種使用非常廣泛的電腦程式設計語言。它是一種靜態資料類型檢查的，支援多範型的通用程式設計語言。C++支援程序化程式設計、資料抽象化、物件導向程式設計、泛型程式設計、基於原則設計等多種程式設計風格。貝爾實驗室的比雅尼·斯特勞斯特魯普博士在20世紀80年代發明並實現了C++。起初，這種語言被稱作“C with Classes”（“包含類別的C語言”），作為C語言的增強版出現。随后，C++不斷增加新特性。虚函数（virtual function）、運算子多載（operator overloading）、多重繼承（multiple inheritance）、模板（template）、异常处理（exception）、RTTI（Runtime type information）、命名空間（namespace）逐漸納入標準。1998年，國際標準組織（ISO）頒布了C++程式設計語言的第一個國際標準ISO/IEC 14882:1998，目前最新标准为 ISO/IEC 14882:2014。根據《C++編程思想》（Thinking in C++）一書所評述的，C++與C的效率往往相差在±5%之間。C++語言發展大概可以分為三個階段：第一階段從80年代到1995年。這一階段C++語言基本上是傳統類型上的面向对象語言，並且憑藉着接近C語言的效率，在工業界使用的開發語言中佔據了相當大份額；第二階段從1995年到2000年，這一階段由於標準模板庫（STL）和後來的Boost等程式庫的出現，泛型程式設計在C++中佔據了越來越多的比重性。當然，同時由於Java、C#等語言的出現和硬體價格的大規模下降，C++受到了一定的衝擊；第三階段從2000年至今，由於以Loki、MPL等程式庫為代表的產生式編程和模板元編程的出現，C++出現了發展歷史上又一個新的高峰，這些新技術的出現以及和原有技術的融合，使C++已經成為當今主流程式設計語言中最複雜的一員。</zh-speak>
    </Feature>
    <Feature data="C (programming language)" zh-data="C语言" id="783" uri="http://dbpedia.org/resource/C_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced" weight="0"/>
        <neighbor dest="472" relationship="developer" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="788" relationship="influenced" weight="0"/>
        <neighbor dest="792" relationship="influenced" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="812" relationship="influenced by" weight="0"/>
        <neighbor dest="813" relationship="influenced" weight="0"/>
        <neighbor dest="835" relationship="influenced" weight="0"/>
        <neighbor dest="836" relationship="influenced" weight="0"/>
        <neighbor dest="838" relationship="influenced" weight="0"/>
        <neighbor dest="839" relationship="typing" weight="0"/>
        <neighbor dest="840" relationship="influenced" weight="0"/>
        <neighbor dest="842" relationship="influenced" weight="0"/>
        <neighbor dest="864" relationship="developer" weight="0"/>
        <neighbor dest="865" relationship="influenced" weight="0"/>
        <neighbor dest="866" relationship="influenced by" weight="0"/>
        <neighbor dest="867" relationship="influenced by" weight="0"/>
        <neighbor dest="868" relationship="dialects" weight="0"/>
        <neighbor dest="869" relationship="influenced by" weight="0"/>
        <neighbor dest="870" relationship="developer" weight="0"/>
        <neighbor dest="871" relationship="influenced by" weight="0"/>
        <neighbor dest="872" relationship="designer" weight="0"/>
        <neighbor dest="873" relationship="dialects" weight="0"/>
        <neighbor dest="874" relationship="influenced" weight="0"/>
        <neighbor dest="875" relationship="influenced by" weight="0"/>
        <neighbor dest="876" relationship="influenced" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="878" relationship="influenced" weight="0"/>
        <neighbor dest="879" relationship="influenced" weight="0"/>
        <neighbor dest="880" relationship="dialects" weight="0"/>
        <neighbor dest="881" relationship="influenced" weight="0"/>
        <neighbor dest="882" relationship="influenced" weight="0"/>
        <neighbor dest="883" relationship="influenced" weight="0"/>
        <neighbor dest="884" relationship="dialects" weight="0"/>
        <neighbor dest="885" relationship="dialects" weight="0"/>
        <neighbor dest="886" relationship="influenced" weight="0"/>
        <neighbor dest="887" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>C , and Unix's C shell.</speak>
      <zh-speak>C是一种通用的程式語言，广泛用于系统软件与应用软件的开发。于1969年至1973年間，為了移植與開發UNIX作業系統，由丹尼斯·里奇與肯·汤普逊，以B语言为基础，在贝尔实验室設計、开发出來。C语言具有高效、灵活、功能丰富、表达力强和較高的可移植性等特点，在程序员中备受青睐，成为最近25年使用最为广泛的编程语言。目前，C语言編譯器普遍存在於各種不同的操作系统中，例如Microsoft Windows, Mac OS X, Linux, Unix等。C語言的設計影響了众多後來的程式語言，例如C++、Objective-C、Java、C#等。二十世纪八十年代，為了避免各開發廠商用的C語言語法產生差異，由美國國家標準局為C語言訂定了一套完整的國際標準語法，稱為ANSI C，作為C語言的標準。二十世纪八十年代至今的有关程式開發工具，一般都支持符合ANSI C的語法。</zh-speak>
    </Feature>
    <Feature data="Dylan (programming language)" zh-data="" id="784" uri="http://dbpedia.org/resource/Dylan_(programming_language)">
      <neighbors>
        <neighbor dest="568" relationship="developer" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="888" relationship="influenced by" weight="0"/>
        <neighbor dest="896" relationship="developer" weight="0"/>
        <neighbor dest="897" relationship="influenced by" weight="0"/>
        <neighbor dest="898" relationship="influenced by" weight="0"/>
        <neighbor dest="899" relationship="influenced" weight="0"/>
        <neighbor dest="900" relationship="influenced" weight="0"/>
        <neighbor dest="901" relationship="developer" weight="0"/>
      </neighbors>
      <speak>Dylan /ˈdɪlən/ is a multi-paradigm programming language that includes support for functional and object-oriented programming, and is dynamic and reflective while providing a programming model designed to support efficient machine code generation, including fine-grained control over dynamic and static behaviors.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Functional programming" zh-data="函數程式語言" id="785" uri="http://dbpedia.org/resource/Functional_programming">
      <neighbors/>
      <speak>In computer science, functional programming is a programming paradigm, a style of building the structure and elements of computer programs, that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.</speak>
      <zh-speak>函數式編程（英语：Functional programming）或者函数程序设计，又稱泛函編程，是一種編程典範，它將電腦運算視為數學上的函數計算，並且避免使用程序状态以及易变物件。函數程式語言最重要的基礎是λ演算（lambda calculus）。而且λ演算的函數可以接受函數當作輸入（引數）和輸出（傳出值）。和指令式編程相比，函數式編程強調程序的执行结果比执行过程更重要，倡导利用若干简单的执行单元让计算结果不断渐进，逐层推导复杂的运算，而不是设计一个复杂的执行过程。</zh-speak>
    </Feature>
    <Feature data="Icon (programming language)" zh-data="" id="786" uri="http://dbpedia.org/resource/Icon_(programming_language)">
      <neighbors>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="888" relationship="influenced by" weight="0"/>
        <neighbor dest="909" relationship="influenced by" weight="0"/>
        <neighbor dest="910" relationship="designer" weight="0"/>
        <neighbor dest="911" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Icon is a very high-level programming language featuring goal directed execution and many facilities for managing strings and textual patterns.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Java (programming language)" zh-data="Java" id="787" uri="http://dbpedia.org/resource/Java_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="713" relationship="designer" weight="0"/>
        <neighbor dest="714" relationship="developer" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="760" relationship="influenced" weight="0"/>
        <neighbor dest="711" relationship="influenced by" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="813" relationship="influenced" weight="0"/>
        <neighbor dest="815" relationship="influenced" weight="0"/>
        <neighbor dest="818" relationship="influenced by" weight="0"/>
        <neighbor dest="830" relationship="influenced" weight="0"/>
        <neighbor dest="835" relationship="influenced" weight="0"/>
        <neighbor dest="836" relationship="influenced" weight="0"/>
        <neighbor dest="837" relationship="paradigm" weight="0"/>
        <neighbor dest="839" relationship="typing" weight="0"/>
        <neighbor dest="840" relationship="influenced" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="878" relationship="influenced by" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
        <neighbor dest="914" relationship="influenced by" weight="0"/>
        <neighbor dest="915" relationship="influenced by" weight="0"/>
        <neighbor dest="916" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="918" relationship="influenced by" weight="0"/>
        <neighbor dest="919" relationship="designer" weight="0"/>
        <neighbor dest="920" relationship="influenced" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
        <neighbor dest="922" relationship="influenced" weight="0"/>
        <neighbor dest="923" relationship="implementations" weight="0"/>
        <neighbor dest="924" relationship="influenced" weight="0"/>
        <neighbor dest="925" relationship="influenced" weight="0"/>
        <neighbor dest="926" relationship="influenced" weight="0"/>
        <neighbor dest="927" relationship="influenced" weight="0"/>
        <neighbor dest="928" relationship="implementations" weight="0"/>
        <neighbor dest="929" relationship="influenced" weight="0"/>
        <neighbor dest="930" relationship="dialects" weight="0"/>
        <neighbor dest="931" relationship="license" weight="0"/>
      </neighbors>
      <speak>Java is a general-purpose computer programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible.</speak>
      <zh-speak>Java是一種计算机程式設計語言，擁有跨平台、物件導向、泛型程式設計的特性，广泛应用于企业级Web应用开发和移动应用开发。任職於昇陽電腦的詹姆斯·高斯林等人于1990年代初开发Java語言的雛形，最初被命名为Oak，目標設定在家用电器等小型系統的程式语言，應用在电视机、电话、闹钟、烤面包机等家用电器的控制和通訊。由于这些智能化家电的市场需求没有预期的高，Sun公司放弃了该项计划。随着1990年代網際網路的发展，Sun公司看見Oak在網際網路上应用的前景，于是改造了Oak，於1995年5月以Java的名称正式发布。Java伴随着互联网的迅猛发展而发展，逐渐成为重要的网络编程语言。Java编程语言的风格十分接近C++语言。继承了C++语言面向对象技术的核心，Java舍弃了C++语言中容易引起错误的指針，改以引用取代，同時移除原C++與原來运算符重载，也移除多重继承特性，改用接口取代，增加垃圾回收器功能。在Java SE 1.5版本中引入了泛型编程、类型安全的枚举、不定长参数和自动装/拆箱特性。昇陽電腦对Java语言的解释是：「Java编程语言是个简单、面向对象、分布式、解释性、健壮、安全与系统无关、可移植、高性能、多线程和动态的语言」Java不同於一般的编译語言和直譯語言。它首先将源代码编译成字节码，然后依赖各种不同平台上的虚拟机来解释执行字节码，从而实现了“一次编写，到处运行”的跨平台特性。在早期JVM中，这在一定程度上降低了Java程序的运行效率。但在J2SE1.4.2发布后，Java的執行速度有了大幅提升。与传统型態不同，Sun公司在推出Java時就将其作为开放的技术。全球数以万计的Java开发公司被要求所设计的Java软件必须相互兼容。“Java语言靠群体的力量而非公司的力量”是Sun公司的口号之一，并获得了广大软件开发商的认同。这与微软公司所倡导的注重精英和封闭式的模式完全不同，此外，微软公司後來推出了与之竞争的.NET平台以及模仿Java的C#语言。後來Sun公司被甲骨文公司併購，Java也隨之成為甲骨文公司的產品。</zh-speak>
    </Feature>
    <Feature data="Perl" zh-data="Perl" id="788" uri="http://dbpedia.org/resource/Perl">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="777" relationship="license" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="794" relationship="influenced" weight="0"/>
        <neighbor dest="801" relationship="influenced" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="835" relationship="influenced" weight="0"/>
        <neighbor dest="838" relationship="influenced" weight="0"/>
        <neighbor dest="865" relationship="influenced by" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
        <neighbor dest="924" relationship="influenced" weight="0"/>
        <neighbor dest="953" relationship="influenced by" weight="0"/>
        <neighbor dest="954" relationship="influenced by" weight="0"/>
        <neighbor dest="955" relationship="designer" weight="0"/>
        <neighbor dest="956" relationship="influenced by" weight="0"/>
        <neighbor dest="957" relationship="influenced" weight="0"/>
        <neighbor dest="958" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Perl is a family of high-level, general-purpose, interpreted, dynamic programming languages.</speak>
      <zh-speak>Perl是高階、通用、直譯式、動態的程式语言。最初设计者拉里·沃尔（Larry Wall）為了讓在UNIX上進行報表處理的工作變得更方便，決定開發一個通用的腳本語言，而在1987年12月18日發表。目前，版本中包含Perl 5以及Perl 6（开发中）。Perl借用了C、sed、awk、shell脚本以及很多其他程式語言的特性。其中最重要的特性是Perl内部集成了正则表达式的功能，以及巨大的第三方代码库CPAN。2000年开始，目前拉里·沃尔开始開發Perl 6，來作為Perl的後繼；不過，Perl 6語言的語法有很多轉變，所以Perl 6被視為Perl家族中的另一個語言。Perl语言的应用范围很广，除CGI以外，Perl被用于图形编程、系统管理、网络编程、金融、生物以及其他领域。由于其灵活性，Perl被称为脚本语言中的瑞士军刀。</zh-speak>
    </Feature>
    <Feature data="Procedural programming" zh-data="过程式编程" id="789" uri="http://dbpedia.org/resource/Procedural_programming">
      <neighbors/>
      <speak>Procedural programming is a programming paradigm, derived from structured programming, based upon the concept of the procedure call.</speak>
      <zh-speak>过程式程序设计（英语：Procedural programming），又稱程序式編程、过程式编程、程序化編程、過程化編程，一種編程典範，有時會被視為是指令式編程的同義語。衍生自結構化編程（Structured programming），主要採取程序呼叫（procedure call）或函式呼叫（function call）的方式來進行流程控制。流程則由包涵一系列運算步驟的程序（Procedures），常式（routines），子程序（subroutines）, 方法（methods），或函式（functions）來控制。在程式執行的任何一個時間點，都可以呼叫某個特定的程序。任何一個特定的程序，也能被任意一個程序或是它自己本身呼叫。著名的例子有Linux內核，git，以及Apache HTTP Server等。</zh-speak>
    </Feature>
    <Feature data="Ruby (programming language)" zh-data="Ruby" id="790" uri="http://dbpedia.org/resource/Ruby_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="784" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="791" relationship="typing" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="794" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="801" relationship="influenced" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="813" relationship="influenced" weight="0"/>
        <neighbor dest="815" relationship="influenced" weight="0"/>
        <neighbor dest="829" relationship="influenced by" weight="0"/>
        <neighbor dest="830" relationship="influenced by" weight="0"/>
        <neighbor dest="832" relationship="influenced by" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
        <neighbor dest="914" relationship="influenced by" weight="0"/>
        <neighbor dest="920" relationship="influenced" weight="0"/>
        <neighbor dest="975" relationship="designer" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
        <neighbor dest="977" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Ruby is a dynamic, reflective, object-oriented, general-purpose programming language.</speak>
      <zh-speak>Ruby 是一种面向对象、命令式、函数式、动态的通用编程语言。在20世纪90年代中期由日本人松本行弘（Matz）设计并开发。遵守BSD许可证和Ruby License。它的灵感与特性来自于Perl、Smalltalk、Eiffel、Ada以及Lisp语言。由Ruby语言本身还发展出了JRuby（Java平台）、IronRuby（.NET平台）等其他平台的Ruby语言替代品。</zh-speak>
    </Feature>
    <Feature data="Duck typing" zh-data="鸭子类型" id="791" uri="http://dbpedia.org/resource/Duck_typing">
      <neighbors/>
      <speak>In computer programming with object-oriented programming languages, duck typing is a style of typing in which an object's methods and properties determine the valid semantics, rather than its inheritance from a particular class or implementation of an explicit interface.</speak>
      <zh-speak>在程序设计中，鸭子类型（英语：duck typing）是动态类型的一种风格。在这种风格中，一个对象有效的语义，不是由继承自特定的类或实现特定的接口，而是由当前方法和属性的集合决定。这个概念的名字来源于由James Whitcomb Riley提出的鸭子测试（见下面的“历史”章节），“鸭子测试”可以这样表述：“当看到一只鸟走起来像鸭子、游泳起来像鸭子、叫起来也像鸭子，那么这只鸟就可以被称为鸭子。”在鸭子类型中，关注的不是对象的类型本身，而是它是如何使用的。例如，在不使用鸭子类型的语言中，我们可以编写一个函数，它接受一个类型为鸭子的对象，并调用它的走和叫方法。在使用鸭子类型的语言中，这样的一个函数可以接受一个任意类型的对象，并调用它的走和叫方法。如果这些需要被调用的方法不存在，那么将引发一个运行时错误。任何拥有这样的正确的走和叫方法的对象都可被函数接受的这种行为引出了以上表述，这种决定类型的方式因此得名。鸭子类型通常得益于不测试方法和函数中参数的类型，而是依赖文档、清晰的代码和测试来确保正确使用。</zh-speak>
    </Feature>
    <Feature data="Go (programming language)" zh-data="Go" id="792" uri="http://dbpedia.org/resource/Go_(programming_language)">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="1" relationship="developer" weight="0"/>
        <neighbor dest="44" relationship="designer" weight="0"/>
        <neighbor dest="768" relationship="operating system" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="882" relationship="influenced by" weight="0"/>
        <neighbor dest="916" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
        <neighbor dest="953" relationship="influenced by" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>Go, also commonly referred to as golang, is a programming language initially developed at Google in 2007 by Robert Griesemer, Rob Pike, and Ken Thompson.</speak>
      <zh-speak>Go是Google開發的一种編譯型，可平行化，并具有垃圾回收功能的编程语言。羅伯特·格瑞史莫（Robert Griesemer），羅勃·派克（Rob Pike）及肯·汤普逊於2007年9月开始设计Go語言，，稍後Ian Lance Taylor, Russ Cox加入專案中。Go語言是基於Inferno作業系統所開發的。Go語言於2009年11月正式宣布推出，成為開放原始碼專案，并在Linux及Mac OS X平台上进行了實現，后追加Windows系统下的实现。</zh-speak>
    </Feature>
    <Feature data="Imperative programming" zh-data="指令式編程" id="793" uri="http://dbpedia.org/resource/Imperative_programming">
      <neighbors/>
      <speak>Imperative programming  is focused on describing how a program operates.In computer science terminologies, imperative programming is a programming paradigm that describes computation in terms of statements that change a program state.</speak>
      <zh-speak>指令式編程（英语：Imperative programming），是一種描述電腦所需作出的行為的編程典範。幾乎所有電腦的硬體工作都是指令式的；幾乎所有電腦的硬體都是設計來執行機器碼，使用指令式的風格來寫的。較高階的指令式編程語言使用變數和更複雜的語句，但仍依從相同的典範。食譜和行動清單，雖非電腦程式，但與指令式編程有相似的風格：每步都是指令，有形的世界控制情況。因為指令式編程的基礎觀念，不但概念上比較熟悉，而且較容易具體表現於硬體，所以大部分的編程語言都是指令式的。大部分的高階編程語言都支援四種基本的語句： 運算語句一般來說都表現了在記憶體內的資料進行運算的行為，然後將結果存入記憶體中以便日後使用。高階指令式編程語言更能處理複雜的表達式，可能會產生四則運算和函數計算的結合。 迴圈語句容許一些語句反覆執行數次。迴圈可依據一個預設的數目來決定執行這些語句的次數；或反覆執行它們，直至某些條件改變。 條件分支語句容許僅當某些條件成立時才執行某個區塊。否則，這個區塊中的語句會略去，然後按區塊後的語句繼續執行。 無條件分支語句容許執行順序轉移到程式的其他部分之中。包括跳躍（在很多語言中稱為Goto）、副程式和Procedure等。迴圈、條件分支和無條件分支都是控制流程。早期的指令式編程語言都是電腦本身的機械語言。在這些語言中，指示非常簡單，令硬體的執行更容易，卻阻礙了複雜程式的設計。1954年開始開發的FORTRAN，是首個在複雜程式的設計中除掉機器碼的編程語言。它是編譯型的編程語言，容許命名變數、複雜的表達式、副程式和其他功能，這些功能現在在指令式語言中都非常普遍。後來的二十年中，可以看到大量的其他高階指令式編程語言出現。在1980年後，物件導向編程有迅速的發展；物件導向編程語言均有著指令式的風格，但增添了支援物件的功能。</zh-speak>
    </Feature>
    <Feature data="Julia (programming language)" zh-data="Julia (编程语言)" id="794" uri="http://dbpedia.org/resource/Julia_(programming_language)">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="768" relationship="operating system" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="829" relationship="influenced by" weight="0"/>
        <neighbor dest="869" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Julia is a high-level dynamic programming language designed to address the requirements of high-performance numerical and scientific computing while also being effective for general purpose programming.Distinctive aspects of Julia's design include having a type system with parametric types in a fully dynamic programming language, and adopting multiple dispatch as its core programming paradigm.</speak>
      <zh-speak>Julia是一个面向科学计算的高性能动态高级程序设计语言。其语法与其他科学计算语言相似。在许多情况下拥有能与编译型语言相媲美的性能。</zh-speak>
    </Feature>
    <Feature data="Programming paradigm" zh-data="编程范型" id="795" uri="http://dbpedia.org/resource/Programming_paradigm">
      <neighbors/>
      <speak>A programming paradigm is a fundamental style of computer programming, serving as a way of building the structure and elements of computer programs.</speak>
      <zh-speak>编程範型或编程範式（英语：Programming paradigm），（範即模範之意，範式即模式、方法），是一类典型的编程风格，是指从事软件工程的一类典型的风格（可以对照方法学）。如：函數式編程、程序編程、面向对象编程、指令式编程等等為不同的编程范型。编程範型提供了（同时决定了）程序员对程序执行的看法。例如，在面向对象编程中，程序员认为程序是一系列相互作用的对象，而在函数式编程中一个程序会被看作是一个无状态的函数计算的序列。正如软件工程中不同的群体会提倡不同的「方法学」一样，不同的编程语言也会提倡不同的「编程范型」。一些语言是专门为某个特定的范型设计的（如Smalltalk和Java支持面向对象编程，而Haskell和Scheme则支持函数式编程），同时还有另一些语言支持多种范型（如Ruby、Common Lisp、Python和Oz）。很多编程範型已经被熟知他们禁止使用哪些技术，同时允许使用哪些。例如，纯粹的函数式编程不允许有副作用；结构化编程不允许使用goto。可能是因为这个原因，新的范型常常被那些习惯于较早的风格的人认为是教条主义或过分严格。然而，这样避免某些技术反而更加证明了关于程序正确性——或仅仅是理解它的行为——的法则，而不用限制程序语言的一般性。编程範型和编程语言之间的关系可能十分复杂，由于一个编程语言可以支持多种范型。例如，C++设计时，支持过程化编程、面向对象编程以及泛型编程。然而，设计师和程序员们要考虑如何使用这些范型元素来构建一个程序。一个人可以用C++写出一个完全过程化的程序，另一个人也可以用C++写出一个纯粹的面向对象程序，甚至还有人可以写出杂揉了两种范型的程序。</zh-speak>
    </Feature>
    <Feature data="Reflection (computer programming)" zh-data="反射 (计算机科学)" id="796" uri="http://dbpedia.org/resource/Reflection_(computer_programming)">
      <neighbors/>
      <speak>In computer science, reflection is the ability of a computer program to examine  of the program at runtime.</speak>
      <zh-speak>在计算机科学中，反射是指计算机程序在运行时（Run time）可以访问、检测和修改它本身状态或行为的一种能力。用比喻来说，那种程序能够“观察”并且修改自己的行为。要注意反射和内省（type introspection）的区别。</zh-speak>
    </Feature>
    <Feature data="Strong and weak typing" zh-data="強型別" id="797" uri="http://dbpedia.org/resource/Strong_and_weak_typing">
      <neighbors/>
      <speak>In computer programming, programming languages are often colloquially referred to as strongly typed or weakly typed.</speak>
      <zh-speak>在電腦科學以及程式設計中，術語強型別用以描述程式語言對於混入不同資料型別的值，這方面的運算限制中所處的地位。它的反義詞是弱型別。然而，這些術語在短短的電腦歷史中，早已含括了更多的意義，而且時常很難知道寫的人究竟要表達哪個意思。</zh-speak>
    </Feature>
    <Feature data="Swift (programming language)" zh-data="Swift (程式語言)" id="798" uri="http://dbpedia.org/resource/Swift_(programming_language)">
      <neighbors>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="760" relationship="influenced by" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="813" relationship="influenced by" weight="0"/>
        <neighbor dest="832" relationship="influenced by" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
        <neighbor dest="878" relationship="influenced by" weight="0"/>
        <neighbor dest="879" relationship="influenced" weight="0"/>
        <neighbor dest="896" relationship="designer" weight="0"/>
      </neighbors>
      <speak>Swift is a multi-paradigm, compiled programming language created by Apple for iOS and OS X development.</speak>
      <zh-speak>Swift，一種支持多编程范式，編譯式編程語言，由蘋果公司在2014年推出，用來撰寫OS X和iOS應用程式。2014年，在AppleWWDC所發布，設計Swift時，蘋果公司有意讓Swift與Objective-C共存在蘋果公司的作業系統上。</zh-speak>
    </Feature>
    <Feature data="Type system" zh-data="類型系統" id="799" uri="http://dbpedia.org/resource/Type_system">
      <neighbors/>
      <speak>In programming languages, a type system is a collection of rules that assign a property called a type to the various construct—​such as variables, expressions, functions or modules—​that a computer program is composed of.</speak>
      <zh-speak>在计算机科学中，型別系統用于定義如何將程式語言中的數值和運算式归類为许多不同的型別，如何操作这些型別，这些型別如何互相作用。型別可以确认一个值或者一组值具有特定的意义和目的（雖然某些型別，如抽象型別和函式型別，在程式執行中，可能不表示為值）。型別系統在各種語言之間有非常大的不同，也許，最主要的差異存在於編譯時期的語法，以及執行時期的操作实现方式。編譯器可能使用值的靜態型別以最佳化所需的儲存區，並選取對值運算時的較佳演算法。例如，在許多C編譯器中，「浮點數」資料型別是以32 位元表示，與IEEE 754規格一致的單精度浮點數。因此，在數值運算上，C應用了浮點數規範（浮點數加法、乘法等等）。型別的約束程度以及評估方法，影響了語言的型別。更進一步，程式語言可能就型別多態性部分，對每一個型別都對應了一個極度個別的演算法的運算。型別理論研究型別系統，儘管實際的程式語言型別系統，起源於電腦架構的實際問題、編譯器實作，以及語言設計。</zh-speak>
    </Feature>
    <Feature data="Cython" zh-data="" id="800" uri="http://dbpedia.org/resource/Cython">
      <neighbors>
        <neighbor dest="783" relationship="programming language" weight="0"/>
        <neighbor dest="296" relationship="genre" weight="0"/>
        <neighbor dest="781" relationship="programming language" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>The Cython programming language is a superset of Python with a foreign function interface for invoking C/C++ routines and the ability to declare the static type of subroutine parameters and results, local variables, and class attributes.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Falcon (programming language)" zh-data="Falcon" id="801" uri="http://dbpedia.org/resource/Falcon_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="801" relationship="license" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="829" relationship="influenced by" weight="0"/>
        <neighbor dest="835" relationship="influenced by" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Falcon is an open source, multi-paradigm programming language.</speak>
      <zh-speak>Falcon编程语言（英语：The Falcon Programming Language），又稱Falcon P.L.、Falconpl或Falcon，是一个开源、多范式编程语言，其设计和推廣由Giancarlo Niccolai领导。</zh-speak>
    </Feature>
    <Feature data="Python Software Foundation" zh-data="" id="802" uri="http://dbpedia.org/resource/Python_Software_Foundation">
      <neighbors>
        <neighbor dest="79" relationship="headquarter" weight="0"/>
        <neighbor dest="816" relationship="leader name" weight="0"/>
      </neighbors>
      <speak>The Python Software Foundation , is a non-profit organization devoted to the Python programming language, launched on March 6, 2001. The mission of the foundation is to foster development of the Python community and is responsible for various processes within the Python community, including developing the core Python distribution, managing intellectual rights, developer conferences including PyCon, and raising funds.In 2005, the Python Software Foundation received the prestigious  Computerworld Horizon Award for "cutting-edge" technology.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Python Software Foundation License" zh-data="" id="803" uri="http://dbpedia.org/resource/Python_Software_Foundation_License">
      <neighbors/>
      <speak>The Python Software Foundation License . Its primary use is for distribution of the Python project software.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ABC (programming language)" zh-data="ABC (程式語言)" id="804" uri="http://dbpedia.org/resource/ABC_(programming_language)">
      <neighbors>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="812" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>ABC is an imperative general-purpose programming language and programming environment developed at CWI, Netherlands by Leo Geurts, Lambert Meertens, and Steven Pemberton.</speak>
      <zh-speak>ABC，一種程式語言與編程環境，起源於荷蘭國家數學與計算機科學研究中心，最初的設計者為Leo Geurts、Lambert Meertens與Steven Pemberton。程式風格受到ALGOL-68的影響，它最初是被用來取代BASIC、Pascal與AWK，目標是在教導非專業的程式設計師學習如何開始寫程式。程式語言Python的設計風格，有許多源自於ABC語言。</zh-speak>
    </Feature>
    <Feature data="Cross-platform" zh-data="跨平台" id="805" uri="http://dbpedia.org/resource/Cross-platform">
      <neighbors/>
      <speak>In computing, cross-platform, or multi-platform, is an attribute conferred to computer software or computing methods and concepts that are implemented and inter-operate on multiple computer platforms.</speak>
      <zh-speak>跨平臺泛指编程语言、软件或硬件设备可以在多种作業系統或不同硬體架構的電腦上運作。</zh-speak>
    </Feature>
    <Feature data="Object-oriented programming" zh-data="面向对象程序设计" id="806" uri="http://dbpedia.org/resource/Object-oriented_programming">
      <neighbors/>
      <speak>Object-oriented programming . In object-oriented programming, computer programs are designed by making them out of objects that interact with one another.</speak>
      <zh-speak>面向对象程序设计（英语：Object-oriented programming，缩写：OOP）是一种程序设计范型，同时也是一种程序开发的方法。对象指的是类的实例。它将对象作为程序的基本单元，将程序和数据封装其中，以提高软件的重用性、灵活性和扩展性。面向对象程序设计可以看作一种在程序中包含各种独立而又互相调用的对象的思想，这与传统的思想刚好相反：传统的程序设计主张将程序看作一系列函数的集合，或者直接就是一系列对电脑下达的指令。面向对象程序设计中的每一个对象都应该能够接受数据、处理数据并将数据传达给其它对象，因此它们都可以被看作一个小型的“机器”，即对象。目前已经被证实的是，面向对象程序设计推广了程序的灵活性和可维护性，并且在大型项目设计中广为应用。 此外，支持者声称面向对象程序设计要比以往的做法更加便于学习，因为它能够让人们更简单地设计并维护程序，使得程序更加便于分析、设计、理解。反对者在某些领域对此予以否认。当我们提到面向对象的时候，它不仅指一种程序设计方法。它更多意义上是一种程序开发方式。在这一方面，我们必须了解更多关于面向对象系统分析和面向对象设计（Object Oriented Design，简称OOD）方面的知识。</zh-speak>
    </Feature>
    <Feature data="Boo (programming language)" zh-data="BOO" id="807" uri="http://dbpedia.org/resource/Boo_(programming_language)">
      <neighbors>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="791" relationship="typing" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>Boo is an object-oriented, statically typed, general-purpose programming language that seeks to make use of the Common Language Infrastructure's support for Unicode, internationalization, and web applications, while using a Python-inspired syntax and a special focus on language and compiler extensibility.</speak>
      <zh-speak>Boo是個物件導向語言，語法非常接近Python，並且提供了許多可以擴充編譯器的有趣特色，並且可以運行在.NET Framework或Mono上。Boo為开放源代码，使用MIT許可證／BSD许可证授權。</zh-speak>
    </Feature>
    <Feature data="IronPython" zh-data="IronPython" id="808" uri="http://dbpedia.org/resource/IronPython">
      <neighbors>
        <neighbor dest="836" relationship="programming language" weight="0"/>
      </neighbors>
      <speak>IronPython is an implementation of the Python programming language targeting the .NET Framework and Mono.</speak>
      <zh-speak>IronPython是一种在.NET和Mono上实现的Python语言，由Jim Hugunin（同时也是Jython创造者）所创造。1.0版于2006年9月5日发布。随后，在2007年，开发者決定改写构架，使用动态类型系統以让更多脚本語言能很容易地移植到.NET Framework上。2008年，随着微软发布.NET Framework 3.0/3.5、Silverlight之后，IronPython也发布了2.0版，目前最新版本是2.7，於2011年3月发布，支持.NET Framework 4.0。</zh-speak>
    </Feature>
    <Feature data="Stackless Python" zh-data="" id="809" uri="http://dbpedia.org/resource/Stackless_Python">
      <neighbors>
        <neighbor dest="783" relationship="programming language" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="781" relationship="programming language" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="803" relationship="license" weight="0"/>
      </neighbors>
      <speak>Stackless Python, or Stackless, is a Python programming language interpreter, so named because it avoids depending on the C call stack for its own stack.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="PyPy" zh-data="PyPy" id="810" uri="http://dbpedia.org/resource/PyPy">
      <neighbors>
        <neighbor dest="781" relationship="genre" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>PyPy is a Python interpreter and just-in-time compiler.</speak>
      <zh-speak>PyPy是用Python实现的Python解释器。</zh-speak>
    </Feature>
    <Feature data="Cobra (programming language)" zh-data="" id="811" uri="http://dbpedia.org/resource/Cobra_(programming_language)">
      <neighbors>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
        <neighbor dest="878" relationship="influenced by" weight="0"/>
        <neighbor dest="914" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Cobra is a general-purpose, object-oriented programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ALGOL 68" zh-data="ALGOL 68" id="812" uri="http://dbpedia.org/resource/ALGOL_68">
      <neighbors>
        <neighbor dest="782" relationship="influenced" weight="0"/>
        <neighbor dest="783" relationship="influenced" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="830" relationship="influenced" weight="0"/>
        <neighbor dest="840" relationship="influenced" weight="0"/>
        <neighbor dest="890" relationship="influenced by" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>ALGOL 68  is an imperative computer programming language that was conceived as a successor to the ALGOL 60 programming language, designed with the goal of a much wider scope of application and more rigorously defined syntax and semantics.The contributions of ALGOL 68 to the field of computer science have been deep, wide ranging and enduring, although many of these contributions were only publicly identified when they had reappeared in subsequently developed programming languages.</speak>
      <zh-speak>ALGOL 68（源自英语：ALGOrithmic Language 1968的縮寫），一種指令式程式語言，為ALGOL家族的成員，被認為是ALGOL 60的後繼者。它設計的目標，是提供更廣泛的應用，以及更嚴格的語法定義。</zh-speak>
    </Feature>
    <Feature data="D (programming language)" zh-data="D語言" id="813" uri="http://dbpedia.org/resource/D_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
        <neighbor dest="837" relationship="paradigm" weight="0"/>
        <neighbor dest="853" relationship="designer" weight="0"/>
        <neighbor dest="914" relationship="influenced by" weight="0"/>
        <neighbor dest="926" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>The D programming language is an object-oriented, imperative, multi-paradigm system programming language created by Walter Bright of Digital Mars and  Andrei Alexandrescu.</speak>
      <zh-speak>D語言是由Digital Mars公司的Walter Bright所開發的物件導向、指令式、多範型系統程式設計語言。D語言起源自C++，並受到C++很大的影響，不過D語言並不是C++的變種。D語言對C++的部分特性重新設計，並受到其它程式語言觀念的影響，如Java、C#以及Eiffel。2007年1月2日釋出1.0穩定版本。實驗性版本2.0釋出於2007年1月17日。Walter Bright本身是Symantec C++ 編譯器的作者。另一名作者Andrei Alexandrescu是Facebook的研究科学家，他与一个团队用D语言重写一些Facebook的重要操作。</zh-speak>
    </Feature>
    <Feature data="F Sharp (programming language)" zh-data="F♯" id="814" uri="http://dbpedia.org/resource/F_Sharp_(programming_language)">
      <neighbors>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="760" relationship="influenced by" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="833" relationship="influenced by" weight="0"/>
        <neighbor dest="836" relationship="influenced" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>F#  is a strongly typed, multi-paradigm programming language that encompasses functional, imperative, and object-oriented programming techniques.</speak>
      <zh-speak>F#是由微软发展的为微软.NET语言提供运行环境的程序设计语言，是函數程式語言（FP，Functional Programming），函數程式語言最重要的基礎是Lambda Calculus。它是基于OCaml的，而OCaml是基于ML函数程式语言。有時F#和OCaml的程式是可以交互編譯的。F#已經接近成熟，支援高阶函数、柯里化、惰性求值、Continuations、模式匹配、闭包、列表处理和元编程。这是一个用于显示.NET在不同编程语言间互通的程序设计，可以被.NET中的任意其它代碼編譯和調用。2002年微软開始由Don Syme帶領研發F#，從C#，LINQ和Haskell中獲取了經驗，2005年推出第一個版本，2007年7月31日释出1.9.2.9版。2007年底，微軟宣布F#進入產品化的階段。F#已被集成在Visual Studio 2010中，版本是2.0，含有对.Net Framework的完全支持。</zh-speak>
    </Feature>
    <Feature data="Groovy (programming language)" zh-data="Groovy" id="815" uri="http://dbpedia.org/resource/Groovy_(programming_language)">
      <neighbors>
        <neighbor dest="576" relationship="translator" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="791" relationship="typing" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="878" relationship="influenced by" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
        <neighbor dest="922" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Groovy  is an object-oriented programming language for the Java platform.</speak>
      <zh-speak>Groovy是Java平台上设计的面向对象编程语言。这门动态语言拥有类似Python、Ruby和Smalltalk中的一些特性，可以作为Java平台的脚本语言使用。Groovy的语法与Java非常相似，以至于多数的Java代码也是正确的Groovy代码。Groovy代码动态的被编译器转换成Java字节码。由于其运行在JVM上的特性，Groovy可以使用其他Java语言编写的库。</zh-speak>
    </Feature>
    <Feature data="Guido van Rossum" zh-data="吉多·范罗苏姆" id="816" uri="http://dbpedia.org/resource/Guido_van_Rossum">
      <neighbors>
        <neighbor dest="781" relationship="known for" weight="0"/>
        <neighbor dest="486" relationship="nationality" weight="0"/>
      </neighbors>
      <speak>Guido van Rossum , meaning that he continues to oversee the Python development process, making decisions where necessary.</speak>
      <zh-speak>吉多·范罗苏姆（Guido van Rossum，1956年1月31日－）是一名荷兰计算机程序员，他作为Python程序设计语言的作者而为人们熟知。在Python社区，吉多·范罗苏姆被人们认为是“仁慈的独裁者（BDFL）”，意思是他仍然关注Python的开发进程，并在必要的时刻做出决定。</zh-speak>
    </Feature>
    <Feature data="Jython" zh-data="Jython" id="817" uri="http://dbpedia.org/resource/Jython">
      <neighbors>
        <neighbor dest="787" relationship="programming language" weight="0"/>
        <neighbor dest="781" relationship="programming language" weight="0"/>
        <neighbor dest="803" relationship="license" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Jython, successor of JPython, is an implementation of the Python programming language written in Java.</speak>
      <zh-speak>Jython（原JPython），是一个用Java语言写的Python解释器。</zh-speak>
    </Feature>
    <Feature data="Modula-3" zh-data="" id="818" uri="http://dbpedia.org/resource/Modula-3">
      <neighbors>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="836" relationship="influenced" weight="0"/>
        <neighbor dest="888" relationship="influenced by" weight="0"/>
        <neighbor dest="916" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="953" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>In computer science, Modula-3 is a programming language conceived as a successor to an upgraded version of Modula-2 known as Modula-2+. While it has been influential in research circles , multithreading, exception handling, garbage collection, object-oriented programming, partial revelation and explicit mark of unsafe code.The design goal of Modula-3 was a language that implements the most important features of modern imperative languages in quite basic forms.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="CPython" zh-data="CPython" id="819" uri="http://dbpedia.org/resource/CPython">
      <neighbors>
        <neighbor dest="783" relationship="programming language" weight="0"/>
        <neighbor dest="802" relationship="developer" weight="0"/>
        <neighbor dest="803" relationship="license" weight="0"/>
        <neighbor dest="805" relationship="computing platform" weight="0"/>
        <neighbor dest="816" relationship="designer" weight="0"/>
      </neighbors>
      <speak>CPython is the default, most widely used implementation of the Python programming language.</speak>
      <zh-speak>CPython是用C语言实现的Python解释器，也是官方的并且是最广泛使用的Python解释器。除了CPython以外，还有用Java实现的Jython和用.NET实现的IronPython，使Python方便地和Java程序、.NET程序集成。另外还有一些实验性的Python解释器比如PyPy。CPython是使用字节码的解释器，任何程序源代码在执行之前先要编译成字节码。它还有和几种其它语言（包括C语言）交互的外部函数接口。</zh-speak>
    </Feature>
    <Feature data="Enthought" zh-data="" id="820" uri="http://dbpedia.org/resource/Enthought">
      <neighbors>
        <neighbor dest="4" relationship="industry" weight="0"/>
        <neighbor dest="781" relationship="product" weight="0"/>
        <neighbor dest="382" relationship="location" weight="0"/>
        <neighbor dest="290" relationship="location" weight="0"/>
      </neighbors>
      <speak>Enthought, Inc. is a software company based in Austin, Texas, USA that develops scientific and analytic computing solutions using primarily the Python programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Diazo (software)" zh-data="" id="821" uri="http://dbpedia.org/resource/Diazo_(software)">
      <neighbors>
        <neighbor dest="781" relationship="computing platform" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>Diazo, previously named xdv, is a general-purpose, open source website theming tool.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Wing IDE" zh-data="" id="822" uri="http://dbpedia.org/resource/Wing_IDE">
      <neighbors>
        <neighbor dest="781" relationship="genre" weight="0"/>
      </neighbors>
      <speak>The Wing IDE is an integrated development environment , code intelligence, source browser and code navigation, refactoring, unit testing, version control, Pylint integration, project management, search capabilities, and extensive documentation.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Vitalik Buterin" zh-data="" id="823" uri="http://dbpedia.org/resource/Vitalik_Buterin">
      <neighbors>
        <neighbor dest="582" relationship="field" weight="0"/>
        <neighbor dest="464" relationship="field" weight="0"/>
        <neighbor dest="781" relationship="field" weight="0"/>
        <neighbor dest="334" relationship="residence" weight="0"/>
      </neighbors>
      <speak>Vitalik Buterin is a programmer, writer, founder of Ethereum, the decentralized web 3.0 publishing platform and co-founder of Bitcoin Magazine, a website and print magazine that covers Bitcoin-related topics.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Zinc Y!" zh-data="" id="824" uri="http://dbpedia.org/resource/Zinc_Y!">
      <neighbors>
        <neighbor dest="781" relationship="computing platform" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Zinc Y! is a Yahoo!</speak>
      <zh-speak/>
    </Feature>
    <Feature data="SageMathCloud" zh-data="" id="825" uri="http://dbpedia.org/resource/SageMathCloud">
      <neighbors>
        <neighbor dest="781" relationship="type" weight="0"/>
      </neighbors>
      <speak>SageMathCloud is a cloud computing platform designed for computational mathematics.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="BioNumerics" zh-data="" id="826" uri="http://dbpedia.org/resource/BioNumerics">
      <neighbors>
        <neighbor dest="782" relationship="platform" weight="0"/>
        <neighbor dest="390" relationship="genre" weight="0"/>
        <neighbor dest="781" relationship="platform" weight="0"/>
      </neighbors>
      <speak>BioNumerics is a suite of bioinformatics software applications developed by the company Applied Maths NV.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="PyGopherd" zh-data="" id="827" uri="http://dbpedia.org/resource/PyGopherd">
      <neighbors>
        <neighbor dest="781" relationship="platform" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
      </neighbors>
      <speak>PyGopherd is a modern Internet Gopher server written in Python and is maintained by John Goerzen.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Contrail (software)" zh-data="" id="828" uri="http://dbpedia.org/resource/Contrail_(software)">
      <neighbors>
        <neighbor dest="781" relationship="written in" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>Contrail  was a Cloud Federation computing project that ran from 1/10/2010 until 31/1/2014. Contrail produced open source Cloud stack software including Security, PaaS components, Distributed file system, Application Lifecycle management middleware, and SLA Management.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Lua (programming language)" zh-data="Lua" id="829" uri="http://dbpedia.org/resource/Lua_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="programming language" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="791" relationship="typing" weight="0"/>
        <neighbor dest="794" relationship="influenced" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="801" relationship="influenced" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="832" relationship="influenced by" weight="0"/>
        <neighbor dest="909" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Lua  is a lightweight multi-paradigm programming language designed as a scripting language with extensible semantics as a primary goal.</speak>
      <zh-speak>Lua（英语发音：/ˈluːə/）程序设计语言是一个简洁、轻量、可扩展的脚本语言，是葡萄牙语中“Lua”（月亮）的意思。</zh-speak>
    </Feature>
    <Feature data="Ada (programming language)" zh-data="Ada" id="830" uri="http://dbpedia.org/resource/Ada_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="812" relationship="influenced by" weight="0"/>
        <neighbor dest="839" relationship="typing" weight="0"/>
        <neighbor dest="840" relationship="influenced" weight="0"/>
        <neighbor dest="879" relationship="influenced" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
        <neighbor dest="914" relationship="influenced" weight="0"/>
        <neighbor dest="953" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Ada is a structured, statically typed, imperative, wide-spectrum, and object-oriented high-level computer programming language, extended from Pascal and other languages.</speak>
      <zh-speak>Ada，是一种程序设计语言。它源于美国军方的一个计划，旨在整合美军系统中运行着上百种不同的程序设计语言编写的程序。其名是為了紀念埃达·洛夫莱斯（Ada Lovelace）而使用Ada命名。</zh-speak>
    </Feature>
    <Feature data="Bjarne Stroustrup" zh-data="比雅尼·斯特劳斯特鲁普" id="831" uri="http://dbpedia.org/resource/Bjarne_Stroustrup">
      <neighbors>
        <neighbor dest="782" relationship="known for" weight="0"/>
        <neighbor dest="472" relationship="workplaces" weight="0"/>
        <neighbor dest="716" relationship="award" weight="0"/>
        <neighbor dest="293" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>Bjarne Stroustrup  is a Danish computer scientist, most notable for the creation and development of the widely used C++ programming language.</speak>
      <zh-speak>比雅尼·斯特劳斯特鲁普（丹麥語：Bjarne Stroustrup，丹麥語發音: [ˈbjɑːnə ˈsdʁʌʊ̯ˀsdʁɔb]；1950年12月30日－），生于丹麦奥胡斯郡，计算机科学家，德州農工大學工程学院的计算机科学首席教授。他以创造C++编程语言而闻名，被称为“C++之父”。用斯特劳斯特鲁普他本人的话来说，自己“发明了C++，写下了它的早期定义并做出了首个实现……选择制定了C++的设计标准，设计了C++主要的辅助支持环境，而且负责处理C++标准委员会的扩展提案。”他还写了一本《C++程序设计语言》，它被许多人认为是C++的范本经典，目前是第四版（于2013年5月19日出版），最新版中囊括了C++11所引进的一些新特性。斯特劳斯特鲁普于1975年获得丹麦奥胡斯大学的数学和计算机科学硕士学位，又于1979年获得英国剑桥大学的计算机科学博士学位。从贝尔实验室大规模编程（Large-scale Programming）研究部门设立至2002年晚些时候，他一直担任那里的负责人。现在他在德州農工大學工程学院任教授一职。</zh-speak>
    </Feature>
    <Feature data="CLU (programming language)" zh-data="" id="832" uri="http://dbpedia.org/resource/CLU_(programming_language)">
      <neighbors>
        <neighbor dest="829" relationship="influenced" weight="0"/>
        <neighbor dest="830" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="438" relationship="designer" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="834" relationship="influenced by" weight="0"/>
        <neighbor dest="888" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>CLU is a programming language created at MIT by Barbara Liskov and her students between 1974 and 1975. It was notable for its use of constructors for abstract data types that included the code that operated on them, a key step in the direction of object-oriented programming  missing, notably inheritance.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ML (programming language)" zh-data="ML语言" id="833" uri="http://dbpedia.org/resource/ML_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="760" relationship="influenced" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="709" relationship="influenced" weight="0"/>
        <neighbor dest="814" relationship="influenced" weight="0"/>
        <neighbor dest="868" relationship="influenced" weight="0"/>
        <neighbor dest="920" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>ML is a general-purpose functional programming language developed by Robin Milner and others in the early 1970s at the University of Edinburgh, whose syntax is inspired by ISWIM. Historically, ML stands for metalanguage: it was conceived to develop proof tactics in the LCF theorem prover . It is known for its use of the Hindley–Milner type inference algorithm, which can automatically infer the types of most expressions without requiring explicit type annotations.</speak>
      <zh-speak>ML 是一个通用的函數式編程语言，它是由爱丁堡大学的Robin Milner及他人在二十世纪七十年代晚期开发的。它的语法是从ISWIM得到的灵感。作为元语言的ML是为了帮助在LCF定理证明机中寻找证明策略而构想出来的。（之前的元语言是pplambda，它联合了一阶逻辑演算和有类型的多态的λ演算）。它使用了Hindley-Milner类型推论算法来推测大多数值的类型，而不需要四处使用注解。ML一般被归为非纯函数式编程语言，因为它允许副作用和指令式编程。这一点和纯函数式编程语言——例如Haskell——很不一样。ML特性包括：傳值呼叫(Call by value)的求值策略，一级函数， 带有垃圾收集的自动内存管理， 参数多态，静态数据类型，类型推论，代数数据类型，模式匹配和异常处理。不像Haskell，ML使用热情求值，也就是说所有的子表达式总是被求值。导致的一个结果是你不能使用无穷表。然而，惰性求值产生的无穷表可以通过使用匿名函数来模拟。今天在ML家族中有好几种语言：两种主要的方言是Standard ML和Caml，其他的包括F# － 针对Microsoft .NET平台的开放研究项目。 ML中的思想影响了众多的语言，例如Haskell，Cyclone和Nemerle。ML的实力大多被用于语言设计和操作（编译器、分析器、定理证明机）， 但是它作为通用语言也被用于生化，金融系统，和宗谱数据库，一个P2P的客户／服务器程序等等。</zh-speak>
    </Feature>
    <Feature data="Simula" zh-data="Simula" id="834" uri="http://dbpedia.org/resource/Simula">
      <neighbors>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="890" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Simula is a name for two simulation programming languages, Simula I and Simula 67, developed in the 1960s at the Norwegian Computing Center in Oslo, by Ole-Johan Dahl and Kristen Nygaard.</speak>
      <zh-speak>Simula，一種編譯式的程式語言，在1960年代在奧斯陸的挪威電子計算中心（Norwegian Computing Center）開始被發展出來，主要的設計者是奧利-約翰·達爾（Ole-Johan Dahl）與克利斯登·奈加特。它可以被分成Simula I與Simula 67兩種。它承繼了ALGOL 60的基礎，被認為是第一個物件導向程式設計的程式語言。Simula影響了Smalltalk以及接下來所有的物件導向程式設計程式語言，如比雅尼·斯特劳斯特鲁普在設計C++語言時，將許多Simula 67的特性引入C++之中。</zh-speak>
    </Feature>
    <Feature data="PHP" zh-data="PHP" id="835" uri="http://dbpedia.org/resource/PHP">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="835" relationship="developer" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="925" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>PHP is a server-side scripting language designed for web development but also used as a general-purpose programming language.</speak>
      <zh-speak>PHP（全称：PHP：Hypertext Preprocessor，即“PHP：超文本预处理器”）是一种开源的通用计算机脚本语言，尤其适用于网络开发并可嵌入HTML中使用。PHP的语法借鉴吸收C语言、Java和Perl等流行计算机语言的特点，易于一般程序员学习。PHP的主要目标是允许网络开发人员快速编写动态页面，但PHP也被用于其他很多领域。PHP最初是由勒多夫在1995年开始开发的。而現在PHP的標準由PHP Group和開放原始碼社群維護。PHP以PHP License作為許可協議，不過因為這個協議限制了PHP名稱的使用，所以和開放原始碼許可協議GPL不相容。PHP的應用範圍相當廣泛，尤其是在網頁程式的開發上。一般來說PHP大多執行在網頁伺服器上，透過執行PHP程式碼來產生使用者瀏覽的網頁。PHP可以在多數的伺服器和作業系統上執行，而且使用PHP完全是免費的。根據2007年4月的統計資料，PHP已經被安裝在超過2000萬個網站和100萬台伺服器上。PHP on Microsoft WindowsPHP 5.5.8 是由 Microsoft VC11 所編譯；其將不支持舊有的 Windows XP 系統。</zh-speak>
    </Feature>
    <Feature data="C Sharp (programming language)" zh-data="C♯" id="836" uri="http://dbpedia.org/resource/C_Sharp_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="786" relationship="influenced by" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="833" relationship="influenced by" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="813" relationship="influenced" weight="0"/>
        <neighbor dest="814" relationship="influenced" weight="0"/>
        <neighbor dest="818" relationship="influenced by" weight="0"/>
        <neighbor dest="837" relationship="paradigm" weight="0"/>
        <neighbor dest="839" relationship="typing" weight="0"/>
        <neighbor dest="914" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
        <neighbor dest="922" relationship="influenced" weight="0"/>
        <neighbor dest="926" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>C# . C# is one of the programming languages designed for the Common Language Infrastructure.C# is intended to be a simple, modern, general-purpose, object-oriented programming language.</speak>
      <zh-speak>C#是微软推出的一种基于.NET框架的、面向对象的高级编程语言。C#的发音为“see sharp”，模仿音樂上的音名“C♯”（C调升），是C语言的升级的意思。其正确写法应和音名一样为“C♯”，但大多数情况下“♯”符号被井号“#”所混用；两者差别是：“♯”的笔画是上下偏斜的，而“#”的笔画是左右偏斜。C#由C语言和C++派生而来，继承了其强大的性能，同时又以.NET框架类库作为基础，拥有类似Visual Basic的快速开发能力。C#由安德斯·海尔斯伯格主持开发，微软在2000年发布了这种语言。</zh-speak>
    </Feature>
    <Feature data="Generic programming" zh-data="泛型" id="837" uri="http://dbpedia.org/resource/Generic_programming">
      <neighbors/>
      <speak>In the simplest definition, generic programming is a style of computer programming in which algorithms are written in terms of types to-be-specified-later that are then instantiated when needed for specific types provided as parameters.</speak>
      <zh-speak>泛型程序设计是程序设计语言的一种风格或范式。允许程序员在强类型程序设计语言中编写代码时使用一些以后才指定的类型，在实例化时（instantiate）作为参数指明这些类型。各种程序设计语言和其编译器、运行环境对泛型的支持均不一样。Ada, Delphi, Eiffel, Java, C#, F#, Swift, and Visual Basic .NET称之为泛型（generics）；ML, Scala and Haskell称之为参数多态（parametric polymorphism）；C++与D称之为模板。具有广泛影响的1994年版的《Design Patterns》一书称之为参数化类型（parameterized type）。</zh-speak>
    </Feature>
    <Feature data="LPC (programming language)" zh-data="LPC (程式語言)" id="838" uri="http://dbpedia.org/resource/LPC_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="842" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>LPC  is an object-oriented programming language derived from C and developed originally by Lars Pensjö to facilitate MUD building on LPMuds.</speak>
      <zh-speak>LPC 全名Lars Pensjö C，是一種程式語言，由Lars Pensjö所發展出來的。LPC類似C語言，語法大致相同，但是LPC 是一物件導向語言，由物件（Object）組成，但LPC又沒有class的概念, LPC 物件是一種 blueprint 物件, 及其clones。物件具有變數 (attributes) 和函式 (methods). 變數可存物件的狀態。LPC 多用於開發MUD。</zh-speak>
    </Feature>
    <Feature data="Nominal type system" zh-data="" id="839" uri="http://dbpedia.org/resource/Nominal_type_system">
      <neighbors/>
      <speak>In computer science, a nominal or nominative type system  is a major class of type system, in which compatibility and equivalence of data types is determined by explicit declarations and/or the name of the types.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Seed7" zh-data="" id="840" uri="http://dbpedia.org/resource/Seed7">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="830" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="837" relationship="paradigm" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="839" relationship="typing" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="812" relationship="influenced by" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="953" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Seed7 is an extensible general-purpose programming language designedby Thomas Mertes.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="C99" zh-data="" id="841" uri="http://dbpedia.org/resource/C99">
      <neighbors/>
      <speak>C99  with new features for the language and the standard library, and helps implementations make better use of available computer hardware, such as the IEEE 754-1985 arithmetic, and compiler technology.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Pike (programming language)" zh-data="Pike" id="842" uri="http://dbpedia.org/resource/Pike_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="838" relationship="influenced by" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
      </neighbors>
      <speak>Pike is an interpreted, general-purpose, high-level, cross-platform, dynamic programming language, with a syntax similar to that of C.  Unlike many other dynamic languages, Pike is both statically and dynamically typed, and requires explicit type definitions.</speak>
      <zh-speak>Pike是一種高階，跨平台的電腦程式語言，其語法與C語言相近。Pike是屬於自由軟體，它在GPL、LGPL以及MPL之下發表。</zh-speak>
    </Feature>
    <Feature data="Andrew Koenig (programmer)" zh-data="" id="843" uri="http://dbpedia.org/resource/Andrew_Koenig_(programmer)">
      <neighbors>
        <neighbor dest="782" relationship="known for" weight="0"/>
        <neighbor dest="79" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Andrew R. Koenig  of Accelerated C++ and Ruminations on C++, and his name is associated with argument-dependent name lookup, also known as "Koenig lookup". He served as the Project Editor of the ISO/ANSI standards committee for C++, has authored over 150 papers on C++, and is listed as inventor on four patents.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ikachan" zh-data="" id="844" uri="http://dbpedia.org/resource/Ikachan">
      <neighbors>
        <neighbor dest="782" relationship="Game Engine" weight="0"/>
        <neighbor dest="778" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>Ikachan . In the game, the player plays a squid named Ikachan, who swims through an underground cave, meeting and helping other creatures.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="T-80 Darts" zh-data="" id="845" uri="http://dbpedia.org/resource/T-80_Darts">
      <neighbors>
        <neighbor dest="782" relationship="Game Engine" weight="0"/>
        <neighbor dest="829" relationship="Game Engine" weight="0"/>
      </neighbors>
      <speak>T-80 Darts is an easy-to-pick-up iOS game developed by French game development studio MKO Games, released on 6 December 2011. It runs on iPhone 3GS and later and iPad 1st generation and later.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Modern C++ Design" zh-data="" id="846" uri="http://dbpedia.org/resource/Modern_C++_Design">
      <neighbors>
        <neighbor dest="782" relationship="non-fiction subject" weight="0"/>
        <neighbor dest="853" relationship="author" weight="0"/>
      </neighbors>
      <speak>Modern C++ Design: Generic Programming and Design Patterns Applied is a book written by Andrei Alexandrescu, published in 2001 by Addison-Wesley.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="The C++ Programming Language" zh-data="C++程式語言 (書)" id="847" uri="http://dbpedia.org/resource/The_C++_Programming_Language">
      <neighbors>
        <neighbor dest="782" relationship="non-fiction subject" weight="0"/>
        <neighbor dest="831" relationship="author" weight="0"/>
      </neighbors>
      <speak>The C++ Programming Language was the first book to describe the C++ programming language, written by the language’s creator, Bjarne Stroustrup, and first published in October 1985. In the absence of an official standard, the book served for several years as the de facto documentation for the evolving C++ language until the release of the ISO/IEC 14882:1998: Programming Language C++ standard on 1 September 1998. As the standard further evolved with the standardization of language and library extensions and with the publication of technical corrigenda, later editions of the book were updated to incorporate the new changes.</speak>
      <zh-speak>《C++程式語言》（The C++ Programming Language）是第一本介紹C++的書籍，作者是「C++之父」比雅尼·斯特劳斯特鲁普（Bjarne Stroustrup），他是此程式語言的設計者。第一版《C++程式語言》於1985年推出。由於沒有官方標準，這本書成為了實質標準，引領C++不斷發展。1998年，C++才有第一個國際標準 ISO/IEC 14882:1998: Programming Language C++ 。隨着C++標準化和新函式庫（Library）的出現，本書亦推出了新版本，介紹C++的改變和新功能，以及更正一些誤排。</zh-speak>
    </Feature>
    <Feature data="Skyland SSR" zh-data="" id="848" uri="http://dbpedia.org/resource/Skyland_SSR">
      <neighbors>
        <neighbor dest="782" relationship="Game Engine" weight="0"/>
        <neighbor dest="829" relationship="Game Engine" weight="0"/>
      </neighbors>
      <speak>Skyland SSR is an iOS game developed by French game development studio MKO Games, released on 11 March 2011. It is based on the CGI animated television series Skyland.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="SplitApple" zh-data="" id="849" uri="http://dbpedia.org/resource/SplitApple">
      <neighbors>
        <neighbor dest="782" relationship="Game Engine" weight="0"/>
        <neighbor dest="829" relationship="Game Engine" weight="0"/>
      </neighbors>
      <speak>SplitApple is an iOS archery game developed by French game development studio MKO Games, released on 15 April 2011. It runs on iPhone 3GS and later and iPad 1st generation and later.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Visual Intercept" zh-data="" id="850" uri="http://dbpedia.org/resource/Visual_Intercept">
      <neighbors>
        <neighbor dest="782" relationship="computing platform" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Visual Intercept is a Microsoft Windows based software defect tracking system produced by Elsinore Technologies Inc..  Visual Intercept was actively sold from 1995 until early 2006 when it was integrated as a single solution in the broader IssueNet issue management system, also produced by Elsinore Technologies Inc..</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Barbara E. Moo" zh-data="" id="851" uri="http://dbpedia.org/resource/Barbara_E._Moo">
      <neighbors>
        <neighbor dest="782" relationship="known for" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
      </neighbors>
      <speak>Barbara E. Moo is an American Computer Scientist known for co-authoring several books on C++, working on an early product written in C++, and directing AT&amp;T's WorldNet AT&amp;T's Internet services business.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="OpenClonk" zh-data="" id="852" uri="http://dbpedia.org/resource/OpenClonk">
      <neighbors>
        <neighbor dest="782" relationship="Game Engine" weight="0"/>
        <neighbor dest="778" relationship="computing platform" weight="0"/>
        <neighbor dest="779" relationship="computing platform" weight="0"/>
        <neighbor dest="458" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>OpenClonk is a free and open-source 2D action game in which you control clonks, small but witty and nimble humanoid beings.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Andrei Alexandrescu" zh-data="" id="853" uri="http://dbpedia.org/resource/Andrei_Alexandrescu">
      <neighbors>
        <neighbor dest="782" relationship="known for" weight="0"/>
        <neighbor dest="79" relationship="nationality" weight="0"/>
        <neighbor dest="813" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Andrei Alexandrescu is a Romanian-American C++ and D language programmer and author.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="JXTA" zh-data="" id="854" uri="http://dbpedia.org/resource/JXTA">
      <neighbors>
        <neighbor dest="782" relationship="computing platform" weight="0"/>
        <neighbor dest="783" relationship="computing platform" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>JXTA  is an open source peer-to-peer protocol specification begun by Sun Microsystems in 2001. The JXTA protocols are defined as a set of XML messages which allow any device connected to a network to exchange messages and collaborate independently of the underlying network topology.As JXTA is based upon a set of open XML protocols, it can be implemented in any modern computer language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="OpenMP" zh-data="OpenMP" id="855" uri="http://dbpedia.org/resource/OpenMP">
      <neighbors>
        <neighbor dest="782" relationship="genre" weight="0"/>
        <neighbor dest="783" relationship="genre" weight="0"/>
        <neighbor dest="565" relationship="genre" weight="0"/>
        <neighbor dest="805" relationship="computing platform" weight="0"/>
        <neighbor dest="869" relationship="genre" weight="0"/>
      </neighbors>
      <speak>OpenMP , or more transparently through the use of OpenMP extensions for non-shared memory systems.</speak>
      <zh-speak>OpenMP（Open Multi-Processing）是一套支持跨平台共享内存方式的多线程并发的编程API，使用C,C++和Fortran语言，可以在大多数的处理器体系和操作系统中运行，包括Solaris, AIX, HP-UX, GNU/Linux, Mac OS X, 和Microsoft Windows。包括一套编译器指令、库和一些能够影响运行行为的环境变量。OpenMP采用可移植的、可扩展的模型，为程序员提供了一个简单而灵活的开发平台，从标准桌面电脑到超级计算机的并行应用程序接口。混合并行编程模型构建的应用程序可以同时使用OpenMP和MPI，或更透明地通过使用OpenMP扩展的非共享内存系统上运行的计算机集群。OpenMP是由OpenMP Architecture Review Board牵头提出的，并已被广泛接受的，用于共享内存并行系统的多线程程序设计的一套指导性注释（Compiler Directive）。OpenMP支持的程式語言包括C语言、C++和Fortran；而支持OpenMP的编译器包括Sun Studio和Intel Compiler，以及開放源碼的GCC和Open64編譯器。OpenMP提供了对并行算法的高层的抽象描述，程序员通过在原始碼中加入专用的pragma来指明自己的意图，由此编译器可以自动将程序进行并行化，并在必要之处加入同步互斥以及通信。当选择忽略这些pragma，或者编译器不支持OpenMP时，程序又可退化为通常的程序（一般为串行），代码仍然可以正常运作，只是不能利用多线程来加速程序执行。</zh-speak>
    </Feature>
    <Feature data="Stick Soldiers" zh-data="" id="856" uri="http://dbpedia.org/resource/Stick_Soldiers">
      <neighbors>
        <neighbor dest="782" relationship="Game Engine" weight="0"/>
        <neighbor dest="778" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>The Stick Soldiers series consists of a pair of keyboard-based, side-scrolling deathmatch shooters for the PC in which players control a pencil-drawn stick soldier with various weapons-ranging from the Uzi to the Grenade Launcher, Sniper Rifle, and Flamethrower—to destroy other stick soldiers in their attempt to reach the specified frag limit.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Cryostasis: Sleep of Reason" zh-data="" id="857" uri="http://dbpedia.org/resource/Cryostasis:_Sleep_of_Reason">
      <neighbors>
        <neighbor dest="782" relationship="code" weight="0"/>
        <neighbor dest="778" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>Cryostasis: Sleep of Reason  is a psychological horror video game developed by Action Forms for Microsoft Windows.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ADMB" zh-data="" id="858" uri="http://dbpedia.org/resource/ADMB">
      <neighbors>
        <neighbor dest="782" relationship="dialects" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>ADMB or AD Model Builder is a free and open source software suite for non-linear statistical modeling.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Rxvt-unicode" zh-data="" id="859" uri="http://dbpedia.org/resource/Rxvt-unicode">
      <neighbors>
        <neighbor dest="782" relationship="written in" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="393" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>rxvt-unicode, commonly known as urxvt, is a color VT102 terminal emulator for the X Window System.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Hedgewars" zh-data="刺猬大作战" id="860" uri="http://dbpedia.org/resource/Hedgewars">
      <neighbors>
        <neighbor dest="782" relationship="written in" weight="0"/>
        <neighbor dest="778" relationship="computing platform" weight="0"/>
        <neighbor dest="779" relationship="computing platform" weight="0"/>
        <neighbor dest="768" relationship="computing platform" weight="0"/>
        <neighbor dest="458" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>Hedgewars is an open source turn-based strategy artillery game.</speak>
      <zh-speak>刺猬大作战（Hedgewars）是一個2D版本百战天虫模式的回合制策略游戏。Hedgewars被苹果电脑官方网站收录。这个游戏是使用GPL协议的自由软件。</zh-speak>
    </Feature>
    <Feature data="Vortex (software)" zh-data="" id="861" uri="http://dbpedia.org/resource/Vortex_(software)">
      <neighbors>
        <neighbor dest="782" relationship="written in" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Vortex is a high-fidelity, realtime physics engine developed by CM Labs Simulations that simulates rigid body dynamics, collision detection, contact determination, and dynamic reactions.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Warmux" zh-data="Wormux" id="862" uri="http://dbpedia.org/resource/Warmux">
      <neighbors>
        <neighbor dest="782" relationship="written in" weight="0"/>
        <neighbor dest="778" relationship="computing platform" weight="0"/>
        <neighbor dest="779" relationship="computing platform" weight="0"/>
        <neighbor dest="393" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>WarMUX is a free and open-source game in the genre of "turn-based artillery games" like Scorched Earth or Worms.</speak>
      <zh-speak>Wormux是一个仿照百战天虫设计的炮术游戏，授权协议是自由软件。 Lawrence Azzoug Moy（全名）在2002年12月创立这个项目，当时使用ClanLib，现在是SDL；这个跨平台游戏可在 Windows 和 Unix-like（包括Linux，FreeBSD 和 Mac OS X）系统上运行 ，而且还提供基于GNU/Linux的Live CD镜像下载。</zh-speak>
    </Feature>
    <Feature data="Id Tech 6" zh-data="" id="863" uri="http://dbpedia.org/resource/Id_Tech_6">
      <neighbors>
        <neighbor dest="782" relationship="written in" weight="0"/>
      </neighbors>
      <speak>id Tech 6 is an upcoming OpenGL based game engine under preliminary development by id Software, which will tentatively follow id Tech 5.Preliminary information given by John Carmack about this engine, which is still in early phases of development, tend to show that id Software is looking toward a direction where ray tracing and classic raster graphics would be mixed.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ANSI C" zh-data="ANSI C" id="864" uri="http://dbpedia.org/resource/ANSI_C">
      <neighbors/>
      <speak>ANSI C, also known as C89 and C90 depending on the year of ratification, refers to the family of successive standards published by the American National Standards Institute  for the C programming language.</speak>
      <zh-speak>ANSI C是美国国家标准协会（ANSI）对C语言发布的标准。使用C的软件开发者被鼓励遵循ANSI C文档的要求，因为它鼓励使用跨平台的代码。</zh-speak>
    </Feature>
    <Feature data="AWK" zh-data="" id="865" uri="http://dbpedia.org/resource/AWK">
      <neighbors>
        <neighbor dest="829" relationship="influenced" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="788" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="883" relationship="influenced" weight="0"/>
        <neighbor dest="909" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>AWK is an interpreted programming language designed for text processing and typically used as a data extraction and reporting tool.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Assembly language" zh-data="汇编语言" id="866" uri="http://dbpedia.org/resource/Assembly_language">
      <neighbors/>
      <speak>See the terminology section below for information regarding inconsistent use of the terms assembly and assembler.An assembly language is a low-level programming language for a computer, or other programmable device, in which there is a very strong  assembly language text can be represented by a name, and that name can be used to insert the expanded text into other code.</speak>
      <zh-speak>汇编语言（英语：assembly language）是一种用于电子计算机、微处理器、微控制器或其他可编程器件的低级语言，在不同的设备中，汇编语言对应着不同的机器语言指令集。一种汇编语言专用于某种计算机系统结构，而不像许多高级语言，可以在不同系统平台之间移植。使用汇编语言编写的源代码，需要通过使用相应的汇编程序将它们转换成可执行的机器代码。这一过程被称为汇编过程。汇编语言采用了助记符（mnemonics）来代表特定低级机器语言的操作。特定的汇编目标指令集可能会包括特定的操作数。许多汇编程序可以识别代表地址和常量的标签（label）和符号（symbols），这样就可以用字符来代表操作数而无需采取写死的方式。普遍地说，特定的汇编语言和特定的机器语言指令集是一一对应的。许多汇编程序为程序开发、汇编控制、辅助调试提供了额外的支持机制。有的汇编语言编程工具经常会提供巨集，它们也被称为宏汇编器。汇编语言不像其他大多數的程序設計語言一樣被廣泛用于程序設計；在今天的實際應用中，它通常被應用在底層硬件操作和高要求的程序優化的场合。驅動程序、嵌入式操作系統和實時運行程序都需要組合語言。</zh-speak>
    </Feature>
    <Feature data="B (programming language)" zh-data="B語言" id="867" uri="http://dbpedia.org/resource/B_(programming_language)">
      <neighbors>
        <neighbor dest="735" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced" weight="0"/>
        <neighbor dest="44" relationship="developer" weight="0"/>
        <neighbor dest="871" relationship="influenced by" weight="0"/>
        <neighbor dest="872" relationship="developer" weight="0"/>
      </neighbors>
      <speak>B is a programming language developed at Bell Labs circa 1969.  It is the work of Ken Thompson with Dennis Ritchie.</speak>
      <zh-speak>B語言是一种通用的程序设计语言。自從被C語言取代之後，它幾乎已遭棄置。B語言大約是於1969年時由美國貝爾實驗室的電腦科學家──肯·湯普森在丹尼斯·利奇的支持下設計出來的。肯·湯普森最初想在UNIX上開發一個Fortran編譯器，但後來引進了BCPL的風格，形成一個新的語言。後來，丹尼斯·利奇以B語言為基礎開發出C語言，至此C語言漸漸發展成為目前世界上最常用的程式語言之一。</zh-speak>
    </Feature>
    <Feature data="Cyclone (programming language)" zh-data="" id="868" uri="http://dbpedia.org/resource/Cyclone_(programming_language)">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>The Cyclone programming language is intended to be a safe dialect of the C language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Fortran" zh-data="Fortran" id="869" uri="http://dbpedia.org/resource/Fortran">
      <neighbors>
        <neighbor dest="783" relationship="influenced" weight="0"/>
        <neighbor dest="728" relationship="developer" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="871" relationship="influenced" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="891" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Fortran .</speak>
      <zh-speak>Fortran，亦譯為福傳，源自於「公式翻译」（英语：Formula Translation）的縮寫，是一種程式語言。1957年由IBM開發出，是世界上第一个被正式采用並流传至今的高级编程語言。</zh-speak>
    </Feature>
    <Feature data="International Organization for Standardization" zh-data="國際標準化組織" id="870" uri="http://dbpedia.org/resource/International_Organization_for_Standardization">
      <neighbors>
        <neighbor dest="759" relationship="headquarter" weight="0"/>
      </neighbors>
      <speak>The International Organization for Standardization  is an international standard-setting body composed of representatives from various national standards organizations.Founded on 23 February 1947, the organization promotes worldwide proprietary, industrial and commercial standards.</speak>
      <zh-speak>國際標準化組織（英语：International Organization for Standardization；縮寫：ISO）成立於1947年2月23日，製作全世界工商業國際標準的各國國家標準機構代表的國際標準建立機構，總部設於瑞士日內瓦，成員包括162個會員國。該組織自我定義為非政府組織，官方語言是英語、法語和俄語。參加者包括各會員國的國家標準機構和主要公司。中華人民共和國在1978年9月1日以中國標準化協會的名義參加ISO，並在1982年9月當選並連任理事國（1983年～1994年）。1985年和1989年，分別改由國家標準局和國家技術監督局參加。2001年起，在ISO代表中華人民共和國會籍的會員機構是國家標準化管理委員會。香港和澳門均是ISO通訊成員（correspondent members）。中華民國原是ISO創始國之一，雖然目前中華民國已不是ISO成員，但《中華民國國家標準》通常仍參考ISO標準。ISO與負責電子設備標準的國際電工委員會密切合作。ISO的國際標準以數字表示。例如，「ISO 11180:1993」的「11180」是標準號碼，而「1993」是出版年份。2013年09月21日，中國標準化專家委員會委員、國際鋼鐵協會副主席張曉剛，當選國際標準化組織主席，是ISO自1947年成立以來首次由中國人任主席。ISO是國際經貿活動的重要規則。</zh-speak>
    </Feature>
    <Feature data="PL/I" zh-data="PL/I" id="871" uri="http://dbpedia.org/resource/PL/I">
      <neighbors>
        <neighbor dest="867" relationship="influenced" weight="0"/>
        <neighbor dest="869" relationship="influenced by" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="728" relationship="designer" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="888" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>PL/I  is a procedural, imperative computer programming language designed for scientific, engineering, business and systems programming applications.</speak>
      <zh-speak>PL/I，是Programming Language One的简写。当中的“I”其实是罗马数字的“一”。它是一种IBM公司在1950年代发明的第三代高级编程语言，用于IBM的MVS、或迪吉多的VAX/VMS等操作系统中。在系统软件，图像，仿真，文字处理，网络，商业软件等领域均可应用。有些类似PASCAL语言。</zh-speak>
    </Feature>
    <Feature data="Dennis Ritchie" zh-data="丹尼斯·里奇" id="872" uri="http://dbpedia.org/resource/Dennis_Ritchie">
      <neighbors>
        <neighbor dest="735" relationship="known for" weight="0"/>
        <neighbor dest="867" relationship="known for" weight="0"/>
        <neighbor dest="472" relationship="work institutions" weight="0"/>
        <neighbor dest="783" relationship="known for" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="522" relationship="alma mater" weight="0"/>
        <neighbor dest="731" relationship="award" weight="0"/>
        <neighbor dest="596" relationship="award" weight="0"/>
      </neighbors>
      <speak>Dennis MacAlistair Ritchie  was an American computer scientist.</speak>
      <zh-speak>丹尼斯·麦卡利斯泰尔·里奇（英语：Dennis MacAlistair Ritchie，1941年9月9日－2011年10月12日），生於美國紐約州布朗克斯維爾（Bronxville），著名的美国计算机科学家，对C语言和其他编程语言、Multics和Unix等操作系统的发展做出了巨大贡献。在技术讨论中，他常被称为dmr，这是他在贝尔实验室的用戶名稱（username）。</zh-speak>
    </Feature>
    <Feature data="C*" zh-data="" id="873" uri="http://dbpedia.org/resource/C*">
      <neighbors>
        <neighbor dest="712" relationship="developer" weight="0"/>
        <neighbor dest="864" relationship="influenced by" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="885" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>C* is an object-oriented, data-parallel superset of ANSI C with synchronous semantics.It was developed in 1987 as an alternative language to *Lisp and CM-Fortran for the Connection Machine CM-2 and above.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="C--" zh-data="" id="874" uri="http://dbpedia.org/resource/C--">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="906" relationship="designer" weight="0"/>
      </neighbors>
      <speak>C--  is a C-like programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="CPL (programming language)" zh-data="CPL (程式語言)" id="875" uri="http://dbpedia.org/resource/CPL_(programming_language)">
      <neighbors>
        <neighbor dest="735" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="890" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>CPL  is a multi-paradigm programming language, that was developed in the early 1960s.</speak>
      <zh-speak>CPL（英语：Combined Programming Language，原名Cambridge Programming Language），一種計算機程式語言。源自於ALGOL 60，在1963年，由英国的剑桥大学和伦敦大学首先開發出來。CPL语言在ALGOL 60的基础上更接近硬件一些，但规模比较大，难以实现。BCPL是它的後繼語言。</zh-speak>
    </Feature>
    <Feature data="C shell" zh-data="C Shell" id="876" uri="http://dbpedia.org/resource/C_shell">
      <neighbors>
        <neighbor dest="783" relationship="programming language" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="956" relationship="genre" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>The C shell , there are two different packages: csh and tcsh.</speak>
      <zh-speak>C shell（csh）是Unix shell的一种，由比尔·乔伊在BSD系统上开发。C shell脱胎于Unix第六版的/bin/sh，也是Bourne shell的前身。这种shell的语法类似于C语言，与Bourne shell相比，C shell有不少特别的功能，比如aliases（别名）、command history（命令的历史）。目前C shell已不再被广泛使用，后继者包括Tenex C shell（tcsh）、Korn shell（ksh）、GNU Bourne-Again shell（bash）。C shell在交互模式中引入许多开创性功能的同时，C shell的脚本执行能力受到了不少批评。无论如何，由于在所有的单一UNIX规范相容系统中都放了标准的Bourne shell，所以大部分人都建议使用sh来进行脚本编写。</zh-speak>
    </Feature>
    <Feature data="Manifest typing" zh-data="" id="877" uri="http://dbpedia.org/resource/Manifest_typing">
      <neighbors/>
      <speak>In computer science, manifest typing is explicit identification by the software programmer of the type of each variable being declared.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Objective-C" zh-data="Objective-C" id="878" uri="http://dbpedia.org/resource/Objective-C">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="796" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="896" relationship="developer" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Objective-C is a general-purpose, object-oriented programming language that adds Smalltalk-style messaging to the C programming language.</speak>
      <zh-speak>Objective-C是一种通用、高级、面向对象的编程语言。它扩展了标准的ANSI C编程语言，将Smalltalk式的消息传递机制加入到ANSI C中。目前主要支持的编译器有GCC和LLVM（採用 Clang作為前端）。Objective-C的商標權屬於蘋果公司，蘋果公司也是這個程式語言的主要開發者。苹果在開發NeXTSTEP操作系統時使用了Objective-C，之后被OS X和iOS继承下來。現在Objective-C是OS X和iOS操作系统、及与其相关的API、Cocoa和Cocoa Touch的主要编程语言。</zh-speak>
    </Feature>
    <Feature data="Rust (programming language)" zh-data="Rust" id="879" uri="http://dbpedia.org/resource/Rust_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="719" relationship="influenced by" weight="0"/>
        <neighbor dest="868" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
        <neighbor dest="768" relationship="operating system" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="798" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="882" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Rust is a general purpose, multi-paradigm, compiled programming language developed by Mozilla Research.</speak>
      <zh-speak>Rust是一个由Mozilla主导开发的实验性跨平台编译型编程语言。它的设计准则为“安全，并发，实用”，支持函数式，并发式，程序式以及面向对象的编程风格。</zh-speak>
    </Feature>
    <Feature data="Split-C" zh-data="" id="880" uri="http://dbpedia.org/resource/Split-C">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
      </neighbors>
      <speak>Split-C is a parallel extension of the C programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="BitC" zh-data="" id="881" uri="http://dbpedia.org/resource/BitC">
      <neighbors>
        <neighbor dest="833" relationship="influenced by" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>BitC is a systems programming language developed by researchers at the Johns Hopkins University and The EROS Group, LLC as part of the Coyotos project.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Limbo (programming language)" zh-data="Limbo" id="882" uri="http://dbpedia.org/resource/Limbo_(programming_language)">
      <neighbors>
        <neighbor dest="472" relationship="developer" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="792" relationship="influenced" weight="0"/>
        <neighbor dest="879" relationship="influenced" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="882" relationship="implementations" weight="0"/>
        <neighbor dest="809" relationship="influenced" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
        <neighbor dest="953" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Limbo is a programming language for writing distributed systems and is the language used to write applications for the Inferno operating system.</speak>
      <zh-speak>Limbo，一種用於分散式系統的程式語言，在Inferno作業系統中，用它來寫作應用程式。它起源於貝爾實驗室，由西恩·都華（Sean Dorward），菲爾·溫特伯（Phil Winterbottom）與羅勃·派克（Rob Pike）設計研發。它的平行運算模式，受到東尼·霍爾的交談循序程式所啟發。</zh-speak>
    </Feature>
    <Feature data="AMPL" zh-data="AMPL" id="883" uri="http://dbpedia.org/resource/AMPL">
      <neighbors>
        <neighbor dest="865" relationship="influenced by" weight="0"/>
        <neighbor dest="472" relationship="designer" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>AMPL, an acronym for "A Mathematical Programming Language", is an algebraic modeling language for describing and solving high-complexity problems for large-scale mathematical computation  accept AMPL input.</speak>
      <zh-speak>AMPL，源自於一種數學程式語言（英语：A Mathematical Programming Language）的縮寫，一種代数建模语言，用以解決與描述大規模數學運算中的高度複雜問題。它最早於1985年由貝爾實驗室的羅伯特·傅里葉（Robert Fourer）、大衛·蓋伊（David Gay）、布萊恩·柯林漢所共同創造。</zh-speak>
    </Feature>
    <Feature data="Cilk" zh-data="Cilk" id="884" uri="http://dbpedia.org/resource/Cilk">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="438" relationship="designer" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
      </neighbors>
      <speak>Cilk, Cilk++ and Cilk Plus are general-purpose programming language designed for multithreaded parallel computing.</speak>
      <zh-speak>Cilk是一種建基於C編程語言、為平行運算而設計的泛用式程式語言。</zh-speak>
    </Feature>
    <Feature data="Unified Parallel C" zh-data="Unified Parallel C" id="885" uri="http://dbpedia.org/resource/Unified_Parallel_C">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="880" relationship="influenced by" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Unified Parallel C . UPC is not a superset of these three languages, but rather an attempt to distill the best characteristics of each.</speak>
      <zh-speak>Unified Parallel C（縮寫為 UPC），C語言的擴展，其設計目的支持大規模的平行計算。由ISO C99標準，進行擴展，增加了許多特色，包括支援平行運算模型，共享位址空間，同步及記憶體一致模型，行程間通訊與記憶體管理功能等。</zh-speak>
    </Feature>
    <Feature data="Processing (programming language)" zh-data="Processing" id="886" uri="http://dbpedia.org/resource/Processing_(programming_language)">
      <neighbors>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Processing is an open source programming language and integrated development environment  built for the electronic arts, new media art, and visual design communities with the purpose of teaching the fundamentals of computer programming in a visual context, and to serve as the foundation for electronic sketchbooks.</speak>
      <zh-speak>Processing是一种开源编程语言，专门为电子艺术和视觉交互设计而创建，其目的是通过可视化的方式辅助编程教学，并在此基础之上表达数字创意。Processing也指Processing语言的集成开发环境(IDE)。2001年，MIT媒体实验室的 Casey Reas 和 Benjamin Fry 发起了此计划。其固定目标之一便是作为一个有效的工具，通过激励性的可视化反馈帮助非程序员进行编程的入门学习。Processing语言建立在Java语言的基础之上，但使用简化的语法和图形编程模型。</zh-speak>
    </Feature>
    <Feature data="Verilog" zh-data="Verilog" id="887" uri="http://dbpedia.org/resource/Verilog">
      <neighbors>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Verilog, standardized as IEEE 1364, is a hardware description language  used to model electronic systems.</speak>
      <zh-speak>在集成电路设计（特别是超大规模集成电路的计算机辅助设计）的电子设计自动化领域中，Verilog是一种用于描述、设计电子系统（特别是数字电路）的硬件描述语言。Verilog是电气电子工程师学会（IEEE）的1364号标准。Verilog能够在多种抽象级别對数字逻辑系统进行描述：既可以在晶体管级、逻辑门级进行描述，也可以在寄存器传输级对电路信号在寄存器之间的传输情况进行描述。除了对电路的逻辑功能进行描述，Verilog代码还能够被用于逻辑仿真、逻辑综合，其中后者可以把寄存器传输级的Verilog代码转换为逻辑门级的网表，从而方便在现场可编程逻辑门阵列上实现硬件电路，或者让硬件厂商制造具体的专用集成电路。设计人员还可以利用Verilog的扩展部分Verilog-AMS进行模拟电路和混合信号集成电路的设计。</zh-speak>
    </Feature>
    <Feature data="ALGOL" zh-data="ALGOL" id="888" uri="http://dbpedia.org/resource/ALGOL">
      <neighbors>
        <neighbor dest="830" relationship="influenced" weight="0"/>
        <neighbor dest="783" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="834" relationship="influenced" weight="0"/>
        <neighbor dest="592" relationship="designer" weight="0"/>
        <neighbor dest="875" relationship="influenced" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="953" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>ALGOL . ALGOL 60 – first implemented as X1 ALGOL 60 in mid-1960 – revised 1963 ALGOL 68 – revised 1973 – introduced new elements including flexible arrays, slices, parallelism, operator identification, and various extensibility features.Niklaus Wirth based his own ALGOL W on ALGOL 60 before developing Pascal.</speak>
      <zh-speak>ALGOL，為“演算法語言”（ALGOrithmic Language）的縮寫，是计算机发展史上首批产生的高级程式语言家族。当时还是晶体管计算机流行的时代，由于ALGOL语句和普通语言表达式接近，更适于数值计算，所以ALGOL多用于科学计算机。ALGOL这个名称是算法语言的简称，这种语言不是计算机制造公司为某种特定机器设计的，而是纯粹面向描述计算过程的，也就是所谓面向算法描述的。ALGOL是第一个清晰定义的语言，其语法是用严格公式化的方法说明的。ALGOL语言并没有被广泛的使用，但它是许多现代程序语言的概念基础。</zh-speak>
    </Feature>
    <Feature data="Bubble Ghost" zh-data="" id="889" uri="http://dbpedia.org/resource/Bubble_Ghost">
      <neighbors>
        <neighbor dest="738" relationship="computing platform" weight="0"/>
        <neighbor dest="866" relationship="Game Engine" weight="0"/>
        <neighbor dest="783" relationship="Game Engine" weight="0"/>
      </neighbors>
      <speak>Bubble Ghost is a French 1987 video game created by Christophe Andreani and published by ERE Informatique.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ALGOL 60" zh-data="ALGOL 60" id="890" uri="http://dbpedia.org/resource/ALGOL_60">
      <neighbors>
        <neighbor dest="830" relationship="influenced" weight="0"/>
        <neighbor dest="783" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="834" relationship="influenced" weight="0"/>
        <neighbor dest="592" relationship="designer" weight="0"/>
        <neighbor dest="875" relationship="influenced" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="953" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>ALGOL 60  is a member of the ALGOL family of computer programming languages.</speak>
      <zh-speak>ALGOL 60（源自ALGOrithmic Language 1960的縮寫），一種程式語言，是ALGOL語言家族中的成員之一。根據ALGOL 58的基礎，它在1960年被創造，並影響到其後的CPL、BCPL、B語言、Pascal、Simula、C語言，在程式語言中有著很大的影響力。它的後繼者是ALGOL 68與ALGOL W。</zh-speak>
    </Feature>
    <Feature data="Speedcoding" zh-data="" id="891" uri="http://dbpedia.org/resource/Speedcoding">
      <neighbors>
        <neighbor dest="866" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced" weight="0"/>
        <neighbor dest="869" relationship="influenced" weight="0"/>
        <neighbor dest="871" relationship="influenced" weight="0"/>
        <neighbor dest="837" relationship="paradigm" weight="0"/>
        <neighbor dest="728" relationship="developer" weight="0"/>
        <neighbor dest="877" relationship="typing" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Speedcoding or Speedcode was the first higher-level language created for an IBM computer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ScrumbleShip" zh-data="" id="892" uri="http://dbpedia.org/resource/ScrumbleShip">
      <neighbors>
        <neighbor dest="783" relationship="Game Engine" weight="0"/>
        <neighbor dest="779" relationship="computing platform" weight="0"/>
        <neighbor dest="458" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>Scrumbleship is an open-world MMOG block-building space flight simulator game in the alpha stage of development by Dirkson of OrangeHat Tech, LLC.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="GNOME Mines" zh-data="" id="893" uri="http://dbpedia.org/resource/GNOME_Mines">
      <neighbors>
        <neighbor dest="783" relationship="operating system" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
      </neighbors>
      <speak>GNOME Mines  is minesweeper clone for GNOME is licensed under the GPL as part of GNOME Games.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Small Device C Compiler" zh-data="" id="894" uri="http://dbpedia.org/resource/Small_Device_C_Compiler">
      <neighbors>
        <neighbor dest="783" relationship="genre" weight="0"/>
        <neighbor dest="576" relationship="genre" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>The Small Device C Compiler  series of microcontrollers.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Pelles C" zh-data="" id="895" uri="http://dbpedia.org/resource/Pelles_C">
      <neighbors>
        <neighbor dest="783" relationship="genre" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Pelles C is a lightweight freeware integrated development environment for Microsoft Windows and Pocket PC programming in the C language built and maintained by Pelle Orinius, featuring: Support for 32-bit Windows  Pelles C supports the C11 standard.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Apple Inc." zh-data="蘋果公司" id="896" uri="http://dbpedia.org/resource/Apple_Inc.">
      <neighbors>
        <neighbor dest="779" relationship="product" weight="0"/>
        <neighbor dest="6" relationship="foundation place" weight="0"/>
        <neighbor dest="8" relationship="type" weight="0"/>
      </neighbors>
      <speak>Apple Inc. is an American multinational corporation headquartered in Cupertino, California, that designs, develops, and sells consumer electronics, computer software, online services, and personal computers.</speak>
      <zh-speak>苹果公司（Apple Inc.，NASDAQ：AAPL，LSE：ACP，原稱苹果电脑公司（Apple Computer, Inc.），於2007年1月9日在舊金山Macworld Expo上宣佈改为现名。）苹果公司是一家美国跨国公司，总部位于美国加利福尼亚庫比蒂諾，致力于设计、开发和销售消费电子、计算机软件、在线服务和个人计算机。苹果的Apple II於1970年代助长了个人电脑革命，其後的Macintosh接力於1980年代持续发展。该公司最著名的硬件产品是Mac电脑系列、iPod媒体播放器、iPhone智慧型手机和iPad平板电脑；在线服务包括iCloud、iTunes Store和App Store；消费软件包括OS X和iOS操作系统、iTunes多媒体浏览器、Safari网络浏览器，还有iLife和iWork创意和生产力套件。蘋果公司在高科技企业中以创新而闻名世界。苹果公司由史蒂夫·賈伯斯、史蒂夫·沃茲尼克、罗纳德·韦恩创立于1976年4月1日，开发和销售个人计算机。该公司于1977年1月3日正式称为苹果电脑公司，并于2007年1月9日改名为苹果公司，以反应该公司将业务重点转向消费电子领域。苹果公司按收入计算為仅在三星电子之后世界第二大信息技术公司，是三星电子之后世界第二大移动电话制造商。《财富杂志》提名苹果公司为美国2008年最受尊敬的公司、从2008年到2012年世界最受尊敬公司。2013年9月30日，在宏盟集团的“全球最佳品牌”报告中，苹果公司超过可口可乐成为世界最有价值品牌。然而，苹果公司曾在其产业链中的劳工制度、环境和商业实践中受到批评。到2014年6月，苹果公司拥有14个国家的425间零售商店，还有线上苹果商店、iTunes商店。iTunes商店是世界最大音乐零售商。苹果公司是市值最高的公共交易公司，到2014年6月大约拥有市值6000亿美元，到同年11月更是歷史上首家突破7000億美元的公司。截至2012年9月29日，苹果公司全球拥有永久全职员工72800名，临时全职员工3300名。2013年全球总收入1709亿美元。截至2014年1季度，苹果公司五年平均增长率销售额39%，利润率45%。2013年5月苹果公司首次进入财富500强公司名单前10名，比2012年上升11位，位列第6名。</zh-speak>
    </Feature>
    <Feature data="Common Lisp Object System" zh-data="" id="897" uri="http://dbpedia.org/resource/Common_Lisp_Object_System">
      <neighbors/>
      <speak>The Common Lisp Object System  is the facility for object-oriented programming which is part of ANSI Common Lisp.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="EuLisp" zh-data="" id="898" uri="http://dbpedia.org/resource/EuLisp">
      <neighbors>
        <neighbor dest="719" relationship="influenced by" weight="0"/>
        <neighbor dest="784" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="391" relationship="family" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="904" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>EuLisp is a statically and dynamically scoped Lisp dialect developed by a loose formation of industrial and academic Lisp users and developers from around Europe.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Lasso (programming language)" zh-data="" id="899" uri="http://dbpedia.org/resource/Lasso_(programming_language)">
      <neighbors>
        <neighbor dest="784" relationship="influenced by" weight="0"/>
        <neighbor dest="760" relationship="influenced by" weight="0"/>
        <neighbor dest="805" relationship="platform" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Lasso is an application server and server management interface used for developing internet applications as well as a general-purpose, high-level programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Goo (programming language)" zh-data="" id="900" uri="http://dbpedia.org/resource/Goo_(programming_language)">
      <neighbors>
        <neighbor dest="784" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>GOO is a lexically scoped, dynamic, type-based, object-oriented programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Harlequin (software company)" zh-data="" id="901" uri="http://dbpedia.org/resource/Harlequin_(software_company)">
      <neighbors/>
      <speak>Harlequin was formerly a technology company based in Cambridge, UK and Cambridge, Massachusetts.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Smalltalk" zh-data="Smalltalk" id="902" uri="http://dbpedia.org/resource/Smalltalk">
      <neighbors>
        <neighbor dest="784" relationship="influenced" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="834" relationship="influenced by" weight="0"/>
        <neighbor dest="391" relationship="influenced by" weight="0"/>
        <neighbor dest="835" relationship="influenced" weight="0"/>
        <neighbor dest="781" relationship="influenced" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="897" relationship="influenced" weight="0"/>
        <neighbor dest="899" relationship="influenced" weight="0"/>
        <neighbor dest="878" relationship="influenced" weight="0"/>
        <neighbor dest="760" relationship="influenced" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="801" relationship="influenced" weight="0"/>
        <neighbor dest="594" relationship="designer" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="815" relationship="influenced" weight="0"/>
        <neighbor dest="903" relationship="influenced" weight="0"/>
        <neighbor dest="958" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Smalltalk is an object-oriented, dynamically typed, reflective programming language.</speak>
      <zh-speak>Smalltalk，被公认为历史上第二个面向对象的程序设计语言，和第一个真正的集成开发环境（IDE）。Smalltalk由艾伦·凯，Dan Ingalls，Ted Kaehler，Adele Goldberg等于70年代初在Xerox PARC开发。Smalltalk对其它众多的程序设计语言的产生起到了极大的推动作用，主要有：C++，C#，Objective-C，Actor，Java和Ruby等。90年代的许多软件开发思想得利于Smalltalk，例如设计模式、敏捷编程和代码重构等。</zh-speak>
    </Feature>
    <Feature data="NewtonScript" zh-data="NewtonScript" id="903" uri="http://dbpedia.org/resource/NewtonScript">
      <neighbors>
        <neighbor dest="896" relationship="developer" weight="0"/>
        <neighbor dest="784" relationship="influenced by" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>NewtonScript is a prototype-based programming language created to write programs for the Newton platform.</speak>
      <zh-speak>NewtonScript是为了在牛顿平台上写程序而创建的一种原型程式设计语言。它受到Self程序设计语言的强烈影响，并修改为更满足移动和嵌入式设备的需要。</zh-speak>
    </Feature>
    <Feature data="Oaklisp" zh-data="" id="904" uri="http://dbpedia.org/resource/Oaklisp">
      <neighbors>
        <neighbor dest="784" relationship="influenced" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="898" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Oaklisp is a portable object-oriented Scheme by Kevin J. Lang and Barak A. Pearlmutter while Computer Science PhD students at Carnegie Mellon University.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ur (programming language)" zh-data="" id="905" uri="http://dbpedia.org/resource/Ur_(programming_language)">
      <neighbors>
        <neighbor dest="785" relationship="paradigms" weight="0"/>
        <neighbor dest="833" relationship="influenced by" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Ur also called Ur/Web is an open source functional programming language specific for web development, created by Adam Chlipala at the Massachusetts Institute of Technology that from a single program produces server code, browser client code and SQL code specific for the chosen database backend.Ur supports a powerful kind of metaprogramming based on row types.Ur/Web is Ur plus a special standard library and associated rules for parsing and optimization.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Simon Peyton Jones" zh-data="西蒙·佩頓·瓊斯" id="906" uri="http://dbpedia.org/resource/Simon_Peyton_Jones">
      <neighbors>
        <neighbor dest="519" relationship="award" weight="0"/>
        <neighbor dest="352" relationship="field" weight="0"/>
        <neighbor dest="785" relationship="field" weight="0"/>
        <neighbor dest="552" relationship="award" weight="0"/>
      </neighbors>
      <speak>Simon Peyton Jones  is a British computer scientist who researches the implementation and applications of functional programming languages, particularly lazy functional programming.</speak>
      <zh-speak>西蒙·佩頓·瓊斯（英语：Simon Peyton Jones，1958年1月18日－），生於南非，英國計算機科學家，以研究函數程式語言的實作與應用為主，特別是針對惰性函數程式語言（lazy functional languages）。他對Haskell程式語言的發展有很大貢獻，為格拉斯哥大學的榮譽教授，也在劍橋大學指導博士生。</zh-speak>
    </Feature>
    <Feature data="Prograph" zh-data="" id="907" uri="http://dbpedia.org/resource/Prograph">
      <neighbors>
        <neighbor dest="785" relationship="influenced by" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Prograph is a visual, object-oriented, dataflow, multiparadigm programming language that uses iconic symbols to represent actions to be taken on data.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Swift (parallel scripting language)" zh-data="" id="908" uri="http://dbpedia.org/resource/Swift_(parallel_scripting_language)">
      <neighbors>
        <neighbor dest="785" relationship="influenced by" weight="0"/>
        <neighbor dest="392" relationship="influenced by" weight="0"/>
        <neighbor dest="921" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Swift is an implicitly parallel programming language that allows the writing of scripts that distribute program execution across distributed computing resources, including clusters, clouds, grids, and supercomputers.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="SNOBOL" zh-data="" id="909" uri="http://dbpedia.org/resource/SNOBOL">
      <neighbors>
        <neighbor dest="829" relationship="influenced" weight="0"/>
        <neighbor dest="472" relationship="developer" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="786" relationship="influenced" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="910" relationship="developer" weight="0"/>
      </neighbors>
      <speak>SNOBOL , Perl regular expressions can be recursive.One of the designers of SNOBOL, Ralph Griswold, designed successors to SNOBOL4 called SL5 and Icon, which combined the backtracking of SNOBOL4 pattern matching with more standard ALGOL-like structuring, as well as adding some features of their own.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ralph Griswold" zh-data="" id="910" uri="http://dbpedia.org/resource/Ralph_Griswold">
      <neighbors/>
      <speak>Ralph E. Griswold  was a computer scientist known for his research into high-level programming languages and symbolic computation.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Unicon (programming language)" zh-data="" id="911" uri="http://dbpedia.org/resource/Unicon_(programming_language)">
      <neighbors>
        <neighbor dest="786" relationship="influenced by" weight="0"/>
        <neighbor dest="789" relationship="paradigm" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Unicon is a programming language designed by American computer scientist Clint Jeffery with collaborators including Shamim Mohamed, Jafar Al Gharaibeh, Robert Parlett and others.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Converge (programming language)" zh-data="" id="912" uri="http://dbpedia.org/resource/Converge_(programming_language)">
      <neighbors>
        <neighbor dest="786" relationship="influenced by" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Converge is a dynamic object-oriented programming language with compile-time meta-programming facilities.Developed by the British computer scientist Laurence Tratt, Converge was originally intended for implementing model transformations in the context of Model-Driven Software Development approaches such as OMG's Model Driven Architecture  with the release of ObjectIcon and ICON version 9.5.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Noweb" zh-data="" id="913" uri="http://dbpedia.org/resource/Noweb">
      <neighbors>
        <neighbor dest="865" relationship="programming language" weight="0"/>
        <neighbor dest="783" relationship="programming language" weight="0"/>
        <neighbor dest="786" relationship="programming language" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>noweb is a literate programming tool, created in 1989–1999 by Norman Ramsey, and designed to be simple, easily extensible and language independent.As in WEB and CWEB, the main components of noweb are two programs: "notangle", which extracts 'machine' source code from the source texts, and "noweave", which produces nicely-formatted printable documentation.noweb supports TeX, LaTeX, HTML, and troff back ends and works with any programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Eiffel (programming language)" zh-data="Eiffel" id="914" uri="http://dbpedia.org/resource/Eiffel_(programming_language)">
      <neighbors>
        <neighbor dest="830" relationship="influenced" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="834" relationship="influenced by" weight="0"/>
        <neighbor dest="790" relationship="influenced" weight="0"/>
        <neighbor dest="836" relationship="influenced" weight="0"/>
        <neighbor dest="760" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="813" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Eiffel is an ISO-standardized, object-oriented programming language designed by Bertrand Meyer  and Eiffel Software.</speak>
      <zh-speak>Eiffel是一套物件導向程式語言，1985年由伯特蘭·邁耶所發明。文法類似Pascal，並且將語言本身與軟體工程、和工具結合為一。Eiffel实现契约式设计（Design by Contract）的風格。</zh-speak>
    </Feature>
    <Feature data="Mesa (programming language)" zh-data="Mesa语言" id="915" uri="http://dbpedia.org/resource/Mesa_(programming_language)">
      <neighbors>
        <neighbor dest="888" relationship="influenced by" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Mesa was an innovative programming language developed in the late 1970s at the Xerox Palo Alto Research Center in Palo Alto, California, United States.</speak>
      <zh-speak>Mesa语言是施乐旗下的帕羅奧多研究中心在1970年代为Xerox Alto个人计算机开发操作系统时设计的程序设计语言。这种语言是在多进程环境下进行程序设计的一次尝试，对后来业界的发展影响很大。</zh-speak>
    </Feature>
    <Feature data="Oberon (programming language)" zh-data="Oberon" id="916" uri="http://dbpedia.org/resource/Oberon_(programming_language)">
      <neighbors>
        <neighbor dest="792" relationship="influenced" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
      </neighbors>
      <speak>Oberon is a general-purpose programming language created in 1986 by Professor Niklaus Wirth and the latest member of the Wirthian family of ALGOL-like languages . Oberon was the result of a concentrated effort to increase the power of Modula-2, the direct successor of Pascal, and simultaneously to reduce its complexity.</speak>
      <zh-speak>Oberon，一種程式語言，由是Pascal之父尼克勞斯·維爾特设计。最初是作为Oberon项目的一部分出现的。在设计了Pascal，Modula，Modula-2之后，Wirth发现程序语言过分复杂精微了，提供了很多很少用或者基本不用的抽象机制，而Oberon是最简化的一次尝试。它设计的非常小，一页纸就能用EBNF写下它的文法。最早的Oberon全编译器才4000多行代码。现在Oberon已经发展到Oberon-2，Oberon-07。Oberon是一个以安全为目标的语言，它包括数组边界检查，垃圾回收以及型別安全检查。</zh-speak>
    </Feature>
    <Feature data="Structured programming" zh-data="结构化编程" id="917" uri="http://dbpedia.org/resource/Structured_programming">
      <neighbors/>
      <speak>Structured programming is a programming paradigm aimed at improving the clarity, quality, and development time of a computer program by making extensive use of subroutines, block structures and for and while loops—in contrast to using simple tests and jumps such as the goto statement which could lead to "spaghetti code" which is difficult both to follow and to maintain.It emerged in the 1960s—particularly from a famous letter, Go To Statement Considered Harmful.—and was bolstered theoretically by the structured program theorem, and practically by the emergence of languages such as ALGOL with suitably rich control structures.</speak>
      <zh-speak>結構化程式設計（英语：Structured programming），一種編程典範。它採用子程序、程式碼區塊、for迴圈以及while迴圈等結構，來取代傳統的 goto。希望藉此來改善计算机程序的明晰性、品質以及開發時間，並且避免寫出麵條式代碼。結構化程式設計在1960年代開始發展，科拉多·伯姆及朱塞佩·賈可皮尼伯姆於1966年5月在《Communications of the ACM》期刊發表論文，說明任何一個有goto指令的程式，可以改為完全不使用goto指令的程式，後來艾兹赫尔·戴克斯特拉在1968年也提出著名的論文《GOTO陳述有害論》（Go To Statement Considered Harmful），，因此結構化程式設計開始盛行，此概念理論上可以由結構化程式理論所證明，而在實務上，當時也有像ALGOL一樣，有豐富控制結構的程式語言來實現結構化程式設計。</zh-speak>
    </Feature>
    <Feature data="UCSD Pascal" zh-data="" id="918" uri="http://dbpedia.org/resource/UCSD_Pascal">
      <neighbors>
        <neighbor dest="953" relationship="programming language" weight="0"/>
      </neighbors>
      <speak>UCSD Pascal was a Pascal programming language system that ran on the UCSD p-System, a portable, highly machine-independent operating system.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="James Gosling" zh-data="詹姆斯·高斯林" id="919" uri="http://dbpedia.org/resource/James_Gosling">
      <neighbors>
        <neighbor dest="568" relationship="alma mater" weight="0"/>
        <neighbor dest="787" relationship="known for" weight="0"/>
        <neighbor dest="713" relationship="workplaces" weight="0"/>
        <neighbor dest="714" relationship="workplaces" weight="0"/>
        <neighbor dest="722" relationship="birth place" weight="0"/>
        <neighbor dest="6" relationship="residence" weight="0"/>
        <neighbor dest="1" relationship="workplaces" weight="0"/>
        <neighbor dest="334" relationship="birth place" weight="0"/>
        <neighbor dest="79" relationship="residence" weight="0"/>
        <neighbor dest="726" relationship="nationality" weight="0"/>
        <neighbor dest="763" relationship="workplaces" weight="0"/>
      </neighbors>
      <speak>James Arthur Gosling, OC  is a Canadian computer scientist, best known as the father of the Java programming language.</speak>
      <zh-speak>詹姆斯·高斯林（英语：James Gosling，1955年5月19日－），出生於加拿大，软件专家，Java编程语言的共同创始人之一，一般公認他為「Java之父」。</zh-speak>
    </Feature>
    <Feature data="Clojure" zh-data="Clojure" id="920" uri="http://dbpedia.org/resource/Clojure">
      <neighbors>
        <neighbor dest="719" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="833" relationship="influenced by" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="977" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Clojure  is a dialect of the Lisp programming language created by Rich Hickey.</speak>
      <zh-speak>Clojure（發音類似"closure"）是一套現代的Lisp語言的動態語言版。它是一个函数式多用途的语言。Clojure可以執行於Java虛擬機，通用語言運行時以及JavaScript引擎之上。與其他Lisp一樣，Clojure認為同像性，同時擁有複雜的巨集。</zh-speak>
    </Feature>
    <Feature data="Concurrent computing" zh-data="并发计算" id="921" uri="http://dbpedia.org/resource/Concurrent_computing">
      <neighbors/>
      <speak>Concurrent computing is a form of computing in which several computations are executing during overlapping time periods – concurrently – instead of sequentially . A concurrent system is one where a computation can make progress without waiting for all other computations to complete – where more than one computation can make progress at "the same time".As a programming paradigm, concurrent computing is a form of modular programming, namely factoring an overall computation into subcomputations that may be executed concurrently.</speak>
      <zh-speak>并发计算（英语：Concurrent computing，或譯為並行處理、共時計算），是一種程式計算的形式，在系統中，至少有兩個以上的計算在同時運作，計算結果可能同時發生。用來實作並行系統（Concurrent system）的程式語言與各種演算法，統稱為並行計算。並行程式通常被設計為互動式的運算過程，因為它的運算過程是不確定的，在設計上的難度較高。設計並行程式最大的挑戰，在於確保不同運算執行步驟間的互動或是通訊，能以正確的順序進行，同時，也要確保在不同執行步驟間共享的資源，能夠正確被存取。在這個領域的先驅人物有艾兹赫尔·戴克斯特拉、東尼·霍爾與泊·派克·漢森等人。</zh-speak>
    </Feature>
    <Feature data="Kotlin (programming language)" zh-data="" id="922" uri="http://dbpedia.org/resource/Kotlin_(programming_language)">
      <neighbors>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
        <neighbor dest="760" relationship="influenced by" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="815" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Kotlin is a statically-typed programming language that runs on the Java Virtual Machine and also can be compiled to JavaScript source code.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="OpenJDK" zh-data="OpenJDK" id="923" uri="http://dbpedia.org/resource/OpenJDK">
      <neighbors>
        <neighbor dest="782" relationship="programming language" weight="0"/>
        <neighbor dest="787" relationship="programming language" weight="0"/>
        <neighbor dest="779" relationship="operating system" weight="0"/>
        <neighbor dest="714" relationship="developer" weight="0"/>
        <neighbor dest="768" relationship="operating system" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>OpenJDK  with a linking exception.</speak>
      <zh-speak>OpenJDK是甲骨文公司公司为Java平台构建的Java开发环境的开源版本，完全自由，开放源码。Sun公司在2006年的JavaOne大会上称将对Java开放源代码，于2009年4月15日正式发布OpenJDK。</zh-speak>
    </Feature>
    <Feature data="ECMAScript" zh-data="ECMAScript" id="924" uri="http://dbpedia.org/resource/ECMAScript">
      <neighbors>
        <neighbor dest="865" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="713" relationship="owner" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="720" relationship="influenced by" weight="0"/>
        <neighbor dest="791" relationship="typing" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
      </neighbors>
      <speak>ECMAScript is the scripting language standardized by Ecma International in the ECMA-262 specification and ISO/IEC 16262. The language is widely used for client-side scripting on the web, in the form of several well-known implementations such as JavaScript, JScript and ActionScript.</speak>
      <zh-speak>ECMAScript是一种由Ecma国际（前身为欧洲计算机制造商协会）通过ECMA-262标准化的脚本程序设计语言。这种语言在万维网上应用广泛，它往往被称为JavaScript或JScript，但实际上后两者是ECMA-262标准的实现和扩展。</zh-speak>
    </Feature>
    <Feature data="Hack (programming language)" zh-data="Hack (程式語言)" id="925" uri="http://dbpedia.org/resource/Hack_(programming_language)">
      <neighbors>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="835" relationship="influenced by" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>Hack is a programming language for the HipHop Virtual Machine , created by Facebook.</speak>
      <zh-speak>Hack，一種開源腳本語言，運行在HHVM虛擬機上，主要開發者為Facebook。在2014年3月20日正式發佈。在發佈前，Facebook已經在它的網站上廣泛使用及測試。</zh-speak>
    </Feature>
    <Feature data="Vala (programming language)" zh-data="Vala" id="926" uri="http://dbpedia.org/resource/Vala_(programming_language)">
      <neighbors>
        <neighbor dest="782" relationship="influenced by" weight="0"/>
        <neighbor dest="783" relationship="influenced by" weight="0"/>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="781" relationship="influenced by" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="813" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Vala is an object-oriented programming language with a self-hosting compiler that generates C code and uses the GObject system.</speak>
      <zh-speak>Vala是一种新的语言，它允许在Gnome运行时库的基础上使用一些现代的编程技巧。通过使用GLib和GObject，Vala提供了动态类型系统和补助内存管理的功能。Vala将被先编译为C语言文件，然后再编译成机器代码，因此，Vala程序拥有很高的执行效率。Vala借鉴了大量的C#语法，因此看起来非常相似。</zh-speak>
    </Feature>
    <Feature data="BeanShell" zh-data="" id="927" uri="http://dbpedia.org/resource/BeanShell">
      <neighbors>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="806" relationship="paradigm" weight="0"/>
        <neighbor dest="931" relationship="designer" weight="0"/>
      </neighbors>
      <speak>BeanShell is a Java-like scripting language, invented by Patrick Niemeyer.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="GNU Compiler for Java" zh-data="GCJ" id="928" uri="http://dbpedia.org/resource/GNU_Compiler_for_Java">
      <neighbors>
        <neighbor dest="576" relationship="genre" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="393" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>The GNU Compiler for Java  is a free compiler for the Java programming language and a part of the GNU Compiler Collection.GCJ can compile Java source code to Java Virtual Machine bytecode or to machine code for a number of CPU architectures.</speak>
      <zh-speak>GCJ是一款Java编程语言的自由软件编译器，它也是GNU编译器套件的一部分。GCJ可以将Java源代码编译成Java虚拟机字节码或直接编译成多种CPU体系结构上的机器码。它还能将包含字节码的Java class文件或包含多个Java class文件的JAR归档文件编译成机器码。</zh-speak>
    </Feature>
    <Feature data="J Sharp" zh-data="J♯" id="929" uri="http://dbpedia.org/resource/J_Sharp">
      <neighbors>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Visual J#  programming language was a transitional language for programmers of Java and Visual J++ languages, so they could use their existing knowledge and applications on .NET Framework.</speak>
      <zh-speak>J#（读音：J Sharp）是微软的.NET框架下的一门语言，语法与Java相似。J#包含在Visual Studio 2005中，以后的Visual Studio版本中不再支持。</zh-speak>
    </Feature>
    <Feature data="Pizza (programming language)" zh-data="" id="930" uri="http://dbpedia.org/resource/Pizza_(programming_language)">
      <neighbors>
        <neighbor dest="787" relationship="influenced by" weight="0"/>
        <neighbor dest="837" relationship="paradigm" weight="0"/>
        <neighbor dest="760" relationship="influenced" weight="0"/>
        <neighbor dest="711" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>Pizza is an open-source superset of the Java programming language with the following new features:GenericsFunction pointersCase classes and pattern matching In August 2001, the developers made a compiler capable of working with Java.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Java Community Process" zh-data="JCP" id="931" uri="http://dbpedia.org/resource/Java_Community_Process">
      <neighbors/>
      <speak>The Java Community Process  of the JCP.</speak>
      <zh-speak>JCP（Java Community Process）成立于1998年，是使有兴趣的各方参与定义Java的特征和未来版本的正式过程。JCP使用JSR（Java规范请求，Java Specification Requests）作为正式规范文档，描述被提议加入到Java体系中的的规范和技术。JSR变为final状态前需要正式的公开审查，并由JCP Executive Committee投票决定。最终的JSR会提供一个参考实现，它是免费而且公开源代码的；还有一个验证是否符合API规范的Technology Compatibility Kit。</zh-speak>
    </Feature>
    <Feature data="Ajax4jsf" zh-data="" id="932" uri="http://dbpedia.org/resource/Ajax4jsf">
      <neighbors>
        <neighbor dest="787" relationship="genre" weight="0"/>
      </neighbors>
      <speak>Ajax4jsf was a project for an open source framework that added Ajax capabilities to the JavaServer Faces web application framework.It was an early entrant to the JSF space, but did implement a still-rare feature, that of skinning.Ajax4jsf is now contained entirely within the RichFaces project.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Altitude (video game)" zh-data="" id="933" uri="http://dbpedia.org/resource/Altitude_(video_game)">
      <neighbors>
        <neighbor dest="787" relationship="Game Engine" weight="0"/>
        <neighbor dest="778" relationship="computing platform" weight="0"/>
        <neighbor dest="779" relationship="computing platform" weight="0"/>
        <neighbor dest="458" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>Altitude is a multiplayer 2-D aerial combat game developed by independent software developers Erik Measure and Karl Sabo.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Patrick Naughton" zh-data="" id="934" uri="http://dbpedia.org/resource/Patrick_Naughton">
      <neighbors>
        <neighbor dest="787" relationship="known for" weight="0"/>
        <neighbor dest="79" relationship="SHORT DESCRIPTION" weight="0"/>
      </neighbors>
      <speak>Patrick Naughton  is an American  software developer,  known as one of the creators of  the Java programming language and later a high-profile sex offender.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="PDF Studio" zh-data="" id="935" uri="http://dbpedia.org/resource/PDF_Studio">
      <neighbors>
        <neighbor dest="787" relationship="genre" weight="0"/>
      </neighbors>
      <speak>PDF Studio is a commercial software program for end-users to create, review, annotate, and edit PDF  OCR to add searchable text Redaction to remove sensitive content Edit PDF content Digitally sign Secure documents with passwords and permissions Merge, split and assemble documents Add bookmarks, watermarks, headers and footers Batch document handling Measuring tools Conversion to PDF/AThe software is available in Standard and Pro editions, and also as a free trial download.PDF Studio supports the current ISO open PDF specification.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Race War Kingdoms" zh-data="" id="936" uri="http://dbpedia.org/resource/Race_War_Kingdoms">
      <neighbors>
        <neighbor dest="787" relationship="Computing Media" weight="0"/>
      </neighbors>
      <speak>Race War Kingdoms, also called RWK, is a fantasy massively multiplayer online role-playing game  released in 2001, developed and published by Glitchless LLC. Race War Kingdoms is mostly text-based with some graphical implementations and does not have high system requirements.Race War Kingdoms is a Java-based browser game that requires an internet connection to play.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="ICEfaces" zh-data="" id="937" uri="http://dbpedia.org/resource/ICEfaces">
      <neighbors>
        <neighbor dest="787" relationship="genre" weight="0"/>
      </neighbors>
      <speak>ICEfaces is an open source Software development kit that extends JavaServer Faces  using the Java programming language.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Arthur van Hoff" zh-data="" id="938" uri="http://dbpedia.org/resource/Arthur_van_Hoff">
      <neighbors>
        <neighbor dest="787" relationship="known for" weight="0"/>
        <neighbor dest="486" relationship="nationality" weight="0"/>
      </neighbors>
      <speak>Arthur van Hoff is a Dutch computer scientist and businessman.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Jeti" zh-data="" id="939" uri="http://dbpedia.org/resource/Jeti">
      <neighbors>
        <neighbor dest="787" relationship="prog language" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Jeti is a cross-platform IM client that can be run in a web browser without installation.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="RichFaces" zh-data="RichFaces" id="940" uri="http://dbpedia.org/resource/RichFaces">
      <neighbors>
        <neighbor dest="787" relationship="genre" weight="0"/>
      </neighbors>
      <speak>RichFaces is an open source Ajax-enabled component library for JavaServer Faces, hosted by JBoss.</speak>
      <zh-speak>RichFaces是一个基于LGPL协议开放源代码的JSF（JavaServer Faces）组件库，它能够使应用开发方便地集成AJAX。现在的RichFaces库是由Ajax4jsf和RichFaces两部分组成。</zh-speak>
    </Feature>
    <Feature data="OSGi" zh-data="OSGi" id="941" uri="http://dbpedia.org/resource/OSGi">
      <neighbors>
        <neighbor dest="787" relationship="domain" weight="0"/>
      </neighbors>
      <speak>The OSGi  specification describes a modular system and a service platform for the Java programming language that implements a complete and dynamic component model, something that does not exist in standalone Java/VM environments.</speak>
      <zh-speak>OSGi（Open Service Gateway Initiative）有双重含义。一方面它指OSGi Alliance组织；另一方面指该组织制定的一个基于Java语言的服务（业务）规范——OSGi服务平台（Service Platform）。OSGi Alliance是一个由Sun Microsystems、IBM、爱立信等于1999年3月成立的开放的标准化组织，最初名为Connected Alliance。该组织及其标准原本主要目的在于使服务提供商通过住宅网关，为各种家庭智能设备提供各种服务。目前该平台逐渐成为一个为室内、交通工具、移动电话和其他环境下的所有类型的网络设备的应用程序和服务进行传递和远程管理的开放式服务平台。该规范和核心部分是一个框架，其中定义了应用程序的生命周期模式和服务注册。基于这个框架定义了大量的OSGi服务：日志、配置管理、偏好，HTTP（运行servlet）、XML分析、设备访问、软件包管理、许可管理、星级、用户管理、IO连接、连线管理、Jini和UPnP。这个框架实现了一个优雅、完整和动态的组件模型。应用程序（称为bundle）无需重新引导可以被远程安装、启动、升级和卸载（其中Java包／类的管理被详细定义）。API中还定义了运行远程下载管理政策的生命周期管理。服务注册允许bundles去检测新服务和取消的服务，然后相应配合。OSGi原先关注于服务网关，其实可用于多个方面。现在OSGi规范已经用于从移动电话到开源的Eclipse（其中包括了与IBM的OSGi框架SMF兼容的开源版本）。OSGi服务平台的应用包括：服务网关、汽车、移动电话、工业自动化、建筑物自动化、PDA 网格计算、娱乐（如iPronto）、和IDE。OSGi规范是由成员通过公开的程序开发，对公众免费而且没有许可证限制。但是OSGi Alliance的兼容性程序只对成员开放，目前有12个兼容的实现。2003年Eclipse选择OSGi作为其插件的底层运行时架构。Equinox project对该理念进行了实验，2004年6月在Eclipse3 R3中发布。ProSyst是面向OSGi开发者的Eclipse插件。2003年10月，诺基亚、摩托罗拉，ProSyst和其他OSGi成员组建了Mobile Expert Group（MEG）为下一代智能手机规范业务平台，做为对MIDP和CDC的补充。</zh-speak>
    </Feature>
    <Feature data="JavaOS" zh-data="JavaOS" id="942" uri="http://dbpedia.org/resource/JavaOS">
      <neighbors>
        <neighbor dest="787" relationship="programmed in" weight="0"/>
        <neighbor dest="713" relationship="developer" weight="0"/>
      </neighbors>
      <speak>JavaOS is an operating system with a Java virtual machine as a fundamental component, originally developed by Sun Microsystems.</speak>
      <zh-speak>JavaOS（也稱：Java作業系統、爪哇作業系統）是一套作業系統，是以Java Virtual Machine（簡稱：JVM，也稱：爪哇虛擬機器）與一些基礎軟體組件所構成，由昇陽電腦所開發。Java作業系統如同UNIX作業系統或類UNIX作業系統一樣，UNIX作業系統、類UNIX作業系統的主要本體皆是用C語言所開發撰寫成，而Java作業系統的主要本體則是用Java程式語言所撰寫成。</zh-speak>
    </Feature>
    <Feature data="OmniROM" zh-data="OmniROM" id="943" uri="http://dbpedia.org/resource/OmniROM">
      <neighbors>
        <neighbor dest="782" relationship="programmed in" weight="0"/>
        <neighbor dest="783" relationship="programmed in" weight="0"/>
        <neighbor dest="787" relationship="programmed in" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
      </neighbors>
      <speak>OmniROM is a  free software operating system for smartphones and tablet computers, based on the Android mobile platform.</speak>
      <zh-speak>OmniROM是一款较新的、为Android设备打造的开放源代码定制固件。其开发团队中有着数名来自其它项目的杰出开发者。</zh-speak>
    </Feature>
    <Feature data="Aptoide" zh-data="" id="944" uri="http://dbpedia.org/resource/Aptoide">
      <neighbors>
        <neighbor dest="787" relationship="programmed in" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
      </neighbors>
      <speak>Aptoide is a distributed marketplace for mobile applications which runs on the Android operating system.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="XPath" zh-data="XPath" id="945" uri="http://dbpedia.org/resource/XPath">
      <neighbors>
        <neighbor dest="787" relationship="implementations" weight="0"/>
        <neighbor dest="836" relationship="implementations" weight="0"/>
      </neighbors>
      <speak>XPath, the XML Path Language, is a query language for selecting nodes from an XML document.</speak>
      <zh-speak>XPath即为XML路径语言（XML Path Language），它是一种用来确定XML文档中某部分位置的语言。XPath基于XML的树状结构，提供在数据结构树中找寻节点的能力。起初XPath的提出的初衷是将其作为一个通用的、介于XPointer与XSL间的语法模型。但是XPath很快的被开发者采用来当作小型查询语言。</zh-speak>
    </Feature>
    <Feature data="CyanogenMod" zh-data="CyanogenMod" id="946" uri="http://dbpedia.org/resource/CyanogenMod">
      <neighbors>
        <neighbor dest="782" relationship="programmed in" weight="0"/>
        <neighbor dest="783" relationship="programmed in" weight="0"/>
        <neighbor dest="787" relationship="programmed in" weight="0"/>
        <neighbor dest="123" relationship="language" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="393" relationship="family" weight="0"/>
      </neighbors>
      <speak>CyanogenMod , and other interface enhancements.</speak>
      <zh-speak>CyanogenMod（發音：英语发音：/saɪ.ˈæn.oʊ.ˌdʒɛn.mɒd/）是一個開放原始碼的作業系統套件，基於Android行動平台而開發，主要使用於智慧型手機與平板電腦裝置上。它提供一些在官方Android系統或手機廠商沒有提供的功能，比如：支援FLAC音訊格式、快取壓縮（Compcache）、大量的APN名單、重新啟動功能等。CyanogenMod 也是第一個使用腦殘排程器（BFS, Brain Fuck Scheduler）作工作管理的作業系統。</zh-speak>
    </Feature>
    <Feature data="MIUI" zh-data="米柚" id="947" uri="http://dbpedia.org/resource/MIUI">
      <neighbors>
        <neighbor dest="782" relationship="programmed in" weight="0"/>
        <neighbor dest="783" relationship="programmed in" weight="0"/>
        <neighbor dest="787" relationship="programmed in" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
      </neighbors>
      <speak>MIUI , developed by Xiaomi Tech, is a stock and aftermarket firmware for smartphones and tablet computers based on the free software Android operating system.</speak>
      <zh-speak>MIUI（中文名稱為“米柚”）是小米科技開發的一款基於CyanogenMod及AOSP、為大中華地區使用者設計的Android行動作業系統 。 MIUI大幅修改了Android原生的用戶介面，並移除了其應用程式列表（Application drawer），对Android做出了较大的修改，一部分人认为更加人性化，也有一部分认为使操作极其不便。</zh-speak>
    </Feature>
    <Feature data="AOKP" zh-data="" id="948" uri="http://dbpedia.org/resource/AOKP">
      <neighbors>
        <neighbor dest="782" relationship="programmed in" weight="0"/>
        <neighbor dest="783" relationship="programmed in" weight="0"/>
        <neighbor dest="787" relationship="programmed in" weight="0"/>
        <neighbor dest="123" relationship="language" weight="0"/>
      </neighbors>
      <speak>AOKP, short for Android Open Kang Project, is an open source replacement distribution for smartphones and tablet computers based on the Android mobile operating system.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Intrexx" zh-data="" id="949" uri="http://dbpedia.org/resource/Intrexx">
      <neighbors>
        <neighbor dest="787" relationship="written in" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Intrexx is an integrated cross-platform development environment for the creation and operation of web-based applications, enterprise portals and intranet portals.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mama (software)" zh-data="Mama (软件)" id="950" uri="http://dbpedia.org/resource/Mama_(software)">
      <neighbors>
        <neighbor dest="787" relationship="written in" weight="0"/>
      </neighbors>
      <speak>Mama is an educational object-oriented programming language designed to help young students start programming by providing all language elements in the student mother tongue.</speak>
      <zh-speak>Mama是一种面向对象的编程语言，是为了帮助年轻学生通过使用自己母语的语言元素接触编程而设计的。Mama编程语言适用于几种语言，并带有LTR和RTL语言指导支持。 新的Mama变种构建在美國卡耐基梅隆大学的Alice开发环境上，支持3D舞台对象的脚本编程。这个新的Mama变种是为帮助年轻学生通过构建3D动画和游戏接触编程而设计的。</zh-speak>
    </Feature>
    <Feature data="Censhare" zh-data="" id="951" uri="http://dbpedia.org/resource/Censhare">
      <neighbors>
        <neighbor dest="787" relationship="Programmiersprache" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>censhare is a commercial Information and Publishing System in the form of an Enterprise Content Management System  by the German software manufacturer censhare AG. It integrates all of the entered media information in a single system, organizes content and automates the respective processes.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Matrix Toolkit Java" zh-data="" id="952" uri="http://dbpedia.org/resource/Matrix_Toolkit_Java">
      <neighbors>
        <neighbor dest="787" relationship="Infobox software" weight="0"/>
      </neighbors>
      <speak>Matrix Toolkit Java  primarily concerned with keeping the library maintained, and fixing bugs as they are discovered.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Pascal (programming language)" zh-data="Pascal (程式語言)" id="953" uri="http://dbpedia.org/resource/Pascal_(programming_language)">
      <neighbors>
        <neighbor dest="830" relationship="influenced" weight="0"/>
        <neighbor dest="787" relationship="influenced" weight="0"/>
        <neighbor dest="916" relationship="influenced" weight="0"/>
        <neighbor dest="917" relationship="paradigm" weight="0"/>
        <neighbor dest="918" relationship="dialects" weight="0"/>
        <neighbor dest="793" relationship="paradigm" weight="0"/>
        <neighbor dest="840" relationship="influenced" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
      </neighbors>
      <speak>Pascal is a historically influential imperative and procedural programming language, designed in 1968–1969 and published in 1970 by Niklaus Wirth as a small and efficient language intended to encourage good programming practices using structured programming and data structuring.A derivative known as Object Pascal designed for object-oriented programming was developed in 1985.</speak>
      <zh-speak>Pascal是一个有影响的面向对象和面向过程编程语言，由尼克劳斯·维尔特在1968年9月设计，在1970年发行，作为一个小型的和高效的语言，意图鼓励使用结构化编程和数据结构进行良好的编程实践。称作Object Pascal的一个衍生是为面向对象编程设计的。</zh-speak>
    </Feature>
    <Feature data="Sed" zh-data="Sed" id="954" uri="http://dbpedia.org/resource/Sed">
      <neighbors>
        <neighbor dest="865" relationship="influenced" weight="0"/>
        <neighbor dest="783" relationship="programming language" weight="0"/>
        <neighbor dest="788" relationship="influenced" weight="0"/>
      </neighbors>
      <speak>sed . sed was one of the earliest tools to support regular expressions, and remains in use for text processing, most notably with the substitution command.</speak>
      <zh-speak>sed（意为流编辑器，源自英语“stream editor”的缩写）是Unix常见的命令行程序。sed用来把文档或字符串里面的文字经过一系列编辑命令转换为另一种格式输出。sed通常用来匹配一个或多个正则表达式的文本进行处理。分号（;）可以用作分隔命令的指示符。尽管sed脚本固有的很多限制，一连串的sed指令加起来可以编程像仓库番、快打砖块、甚至俄罗斯方块等电脑游戏的复杂程序。</zh-speak>
    </Feature>
    <Feature data="Larry Wall" zh-data="拉里·沃尔" id="955" uri="http://dbpedia.org/resource/Larry_Wall">
      <neighbors>
        <neighbor dest="788" relationship="known for" weight="0"/>
        <neighbor dest="520" relationship="alma mater" weight="0"/>
        <neighbor dest="126" relationship="birth place" weight="0"/>
      </neighbors>
      <speak>Larry Wall  is a computer programmer and author, most widely known as the creator of the Perl programming language.</speak>
      <zh-speak>拉里·沃尔（英语：Larry Wall，1954年9月27日－），生於美國加州洛杉磯，是程序员、系統管理员、語言學家和作家，生於美國洛杉磯。他最為人知的地方，是他設計的程式語言，Perl。</zh-speak>
    </Feature>
    <Feature data="Unix shell" zh-data="Unix shell" id="956" uri="http://dbpedia.org/resource/Unix_shell">
      <neighbors/>
      <speak>A Unix shell is a command-line interpreter or shell that provides a traditional user interface for the Unix operating system and for Unix-like systems.</speak>
      <zh-speak>Unix shell，一種殼層與命令行界面，是Unix操作系统下传统的用户和计算机的交互界面。第一個用户直接输入命令来执行各种各样的任务。普通意义上的shell就是可以接受用户输入命令的程序。它之所以被称作shell是因为它隐藏了操作系统低层的细节。同样的Unix下的图形用户界面GNOME和KDE，有时也被叫做「虚拟shell」或「图形shell」。Unix操作系统下的shell既是用户交互的界面，也是控制系统的脚本语言。当然在这点也有别于Windows下的命令行，虽然也提供了很简单的控制语句。在Windows操作系统下，可能有些用户从来都不会直接的使用shell，然而在Unix系列操作系统下，shell仍然是控制系统启动、X Window启动和很多其他实用工具的脚本解释程序。</zh-speak>
    </Feature>
    <Feature data="Windows PowerShell" zh-data="Windows PowerShell" id="957" uri="http://dbpedia.org/resource/Windows_PowerShell">
      <neighbors>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="778" relationship="operating system" weight="0"/>
        <neighbor dest="836" relationship="influenced by" weight="0"/>
      </neighbors>
      <speak>Windows PowerShell is a task automation and configuration management framework from Microsoft, consisting of a command-line shell and associated scripting language built on the .NET Framework.</speak>
      <zh-speak>Windows PowerShell是微軟公司為Windows環境所開發的殼程式（shell）及腳本語言技術，採用的是命令行界面。這項全新的技術提供了豐富的控制與自動化的系統管理能力。之前的專案代號是Monad，程式另一個名稱叫Microsoft Shell（MSH）。</zh-speak>
    </Feature>
    <Feature data="Perl 6" zh-data="Perl 6" id="958" uri="http://dbpedia.org/resource/Perl_6">
      <neighbors>
        <neighbor dest="777" relationship="license" weight="0"/>
        <neighbor dest="788" relationship="influenced by" weight="0"/>
        <neighbor dest="902" relationship="influenced by" weight="0"/>
        <neighbor dest="955" relationship="designer" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="709" relationship="influenced by" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Perl 6 is a member of the Perl family of programming languages.</speak>
      <zh-speak>Perl 6是程式語言Perl语言的后续。由于Perl 6语言语法與Perl 5不同，因此，可以把它看作一种新的程式語言，尽管其计划提供Perl 5的兼容模式。Perl 6拥有丰富的现代语言特征，作者计划用重新定义正規表達式和增加函數式程式語言的特征，使之成为可演化的语言。为保证Perl 6和Perl社区的持续稳定发展，Perl 6编译器需要使用Perl 6来重写。为保证Perl语言原有函式庫的重用，编译器还计划提供同Perl 5语言的兼容模式。由于Perl 6语言的语法特征和要求，Perl 6编译器实现非常复杂，同时，开源社区的资源相对贫乏。因此，Perl 6编译器的开发显得相当缓慢。2010年7月，Rakudo的Rakudo Star，作为主要版本的试验品发布。这一发布的目的是为了让人们有一个可基本用于实际的编译器，以方便编写程序，以及反映需求（Perl6的规范尚未冻结，以期根据人们的使用体验以及编译器的实现等来增补某些特性）。</zh-speak>
    </Feature>
    <Feature data="Big Medium" zh-data="" id="959" uri="http://dbpedia.org/resource/Big_Medium">
      <neighbors>
        <neighbor dest="788" relationship="platform" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Big Medium was a browser-based web content management system  written in the Perl programming language and developed by Global Moxie, the Paris-based company of independent developer Josh Clark.Big Medium 1.0 was announced on January 13, 2003. The last release of Big Medium was version 2.0, released on December 17, 2007 after more than a year of public beta-testing.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="CGIProxy" zh-data="CGIProxy" id="960" uri="http://dbpedia.org/resource/CGIProxy">
      <neighbors>
        <neighbor dest="788" relationship="language" weight="0"/>
      </neighbors>
      <speak>CGIProxy is, as its name suggests, a CGI proxy software package.</speak>
      <zh-speak>CGIProxy顾名思义，是一套基于通用网关接口的代理软件包裹。CGI（通用网关接口）代理让用户通过一个看似网页的页面去访问其他的网站。多数情况下这种访问是匿名的。匿名CGI代理通过一份安全的嵌在别的网页里，使用SSL技术加密的网络表格来提供代理服务。由于这种服务形式，这一类代理服务器通常也被称为“网页代理器”。CGIProxy用Perl语言写成。它能够安装在任何允许使用CGI执行Perl程序以及支持非语言分析CGI脚本报头的網頁伺服器上。所支持的协议包括HTTP，FTP，安全套接层以及相关的技术比如Javascript，Shockwave Flash等。CGIProxy的开发在2008年12月24日暂停，现在又重新开始了开发，2013年度更新了三次。更改日志非常多，包括视窗支持。</zh-speak>
    </Feature>
    <Feature data="PTK Forensics" zh-data="" id="961" uri="http://dbpedia.org/resource/PTK_Forensics">
      <neighbors>
        <neighbor dest="788" relationship="language" weight="0"/>
        <neighbor dest="835" relationship="language" weight="0"/>
      </neighbors>
      <speak>PTK Forensics  for acquired media for verification and consistency purposes.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Allison Randal" zh-data="" id="962" uri="http://dbpedia.org/resource/Allison_Randal">
      <neighbors>
        <neighbor dest="788" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Allison Randal is a software developer and author.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Mod perl" zh-data="" id="963" uri="http://dbpedia.org/resource/Mod_perl">
      <neighbors>
        <neighbor dest="788" relationship="computing platform" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Mod perl mod_perl is an optional module for the Apache HTTP server.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="CGI.pm" zh-data="" id="964" uri="http://dbpedia.org/resource/CGI.pm">
      <neighbors>
        <neighbor dest="788" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>CGI.pm is a large and widely used Perl module for programming Common Gateway Interface  web applications, providing a consistent API for receiving user input and producing HTML or XHTML output.The module was written by Lincoln Stein and is now maintained by Lee Johnson.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="NMIS" zh-data="" id="965" uri="http://dbpedia.org/resource/NMIS">
      <neighbors>
        <neighbor dest="788" relationship="development" weight="0"/>
        <neighbor dest="458" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>NMIS  and with later substantial input from Eric Greenwood, the intellectual property for NMIS was purchased  by commercial open source software company Opmantek in early 2011 under a stated commitment to keep “NMIS free and lead the community to rapidly advance the product”. NMISv8 was released by Opmantek shortly after and remains free and open source.Additional modules and support provided by Opmantek are available to extend the capabilities of NMIS.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Blosxom" zh-data="Blosxom" id="966" uri="http://dbpedia.org/resource/Blosxom">
      <neighbors>
        <neighbor dest="788" relationship="computing platform" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>Blosxom is a free-software weblog program .</speak>
      <zh-speak>Blosxom是一套用Perl写的网志程序（它同时也是一个简单的内容管理系统），开发者为Rael Dornfest。不同于多数网志程序，它使用文件系统而不是数据库管理系统来保存数据。Blosxom采取了最小化的设计。它本身是一个Perl脚本，所有的设定都是在这个脚本里完成的。所有网志文章的数据用纯文本文件来保存。这个文件里描述了标题、可选的摘要、相关插件的信息，以及文章的征文。显示风格可以通过创建末班文件来添加，这在Blosxom中称为flavour。Blosxom 可以像一个CGI脚本来运行，也可以生成静态的HTML文件。在默认情况下，Blosxom可以显示最近的文章、内容分类，并且按照发表时间排序（并以此生成PermaLink），同时可以输出RSS。它可以通过很多插件[1]来扩产功能。Blosxom被用各种程序设计语言重写过。比如用Python写的PyBlosxom、用Java写的Blojsom、用Clojure写的Clojsom、用Ruby写的Blosxonomy和Hobix、以及用PHP写的Blosxom.PHP。</zh-speak>
    </Feature>
    <Feature data="WebGUI" zh-data="WebGUI" id="967" uri="http://dbpedia.org/resource/WebGUI">
      <neighbors>
        <neighbor dest="788" relationship="computing platform" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
      </neighbors>
      <speak>WebGUI is an open source content management system written in Perl and released under the GNU General Public License.The system permits non-technically minded users to arrange content in pages and layouts, containing 'Assets'  which permit website visitors to view and interact with various types of data from basic Articles to full-blown Content management system and custom applications.In July 2014, Scott Walters proposed a project on Kickstarter to bring the nascent Version 8 rewrite to a formal release with a supporting free software community.</speak>
      <zh-speak>WebGUI是网站公开源码的管理系统之一。WebGUI具有标准组件，独立平台，能在线地使用，管理等。能让用户建立和维护比较复杂的网站。</zh-speak>
    </Feature>
    <Feature data="Higher-Order Perl" zh-data="" id="968" uri="http://dbpedia.org/resource/Higher-Order_Perl">
      <neighbors>
        <neighbor dest="788" relationship="non-fiction subject" weight="0"/>
      </neighbors>
      <speak>Higher-Order Perl: Transforming Programs with Programs  named MOD, and in PDF.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Dave Cross" zh-data="" id="969" uri="http://dbpedia.org/resource/Dave_Cross">
      <neighbors>
        <neighbor dest="788" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Dave Cross is a British technical author, known in the Perl community for his work with Perl Mongers.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Bucktooth" zh-data="" id="970" uri="http://dbpedia.org/resource/Bucktooth">
      <neighbors>
        <neighbor dest="788" relationship="platform" weight="0"/>
      </neighbors>
      <speak>Bucktooth is one of the modern servers for Internet Gopher written by Cameron Kaiser.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="VTK" zh-data="VTK" id="971" uri="http://dbpedia.org/resource/VTK">
      <neighbors>
        <neighbor dest="782" relationship="language" weight="0"/>
        <neighbor dest="787" relationship="language" weight="0"/>
        <neighbor dest="788" relationship="language" weight="0"/>
        <neighbor dest="781" relationship="language" weight="0"/>
        <neighbor dest="805" relationship="operating system" weight="0"/>
        <neighbor dest="976" relationship="license" weight="0"/>
      </neighbors>
      <speak>The Visualization Toolkit  is an open-source, freely available software system for 3D computer graphics, image processing and visualization.</speak>
      <zh-speak>視覺化工具函式庫（VTK， Visualization Toolkit）是一個開放源碼，跨平台、支援平行處理（VTK曾用於處理大小近乎1個Petabyte的資料，其平台為美國Los Alamos國家實驗室所有的具1024個處理器之大型系統）的圖形應用函式庫。2005年實曾被美國陸軍研究實驗室用於即時模擬俄羅斯製反飛彈戰車ZSU23-4受到平面波攻擊的情形，其計算節點高達2.5兆個之多。該函式庫以開放源碼的BSD授權釋出。</zh-speak>
    </Feature>
    <Feature data="Movable Type" zh-data="Movable Type" id="972" uri="http://dbpedia.org/resource/Movable_Type">
      <neighbors>
        <neighbor dest="788" relationship="computing platform" weight="0"/>
        <neighbor dest="835" relationship="computing platform" weight="0"/>
        <neighbor dest="123" relationship="language" weight="0"/>
      </neighbors>
      <speak>Movable Type is a weblog publishing system developed by the company Six Apart.</speak>
      <zh-speak>Movable Type，简称MT，是由位于美国加州的Six Apart公司推出的網誌（blog）发布系统。它是全球最受欢迎的网誌系统之一，包含多用户，评论，引用（TrackBack），主题等功能，并广泛的支持各种第三方插件。Movable Type不仅可以应用于个人的網誌系统，而且可以应用于商业、教育等领域。Movable Type于2007年12月12日正式宣布以GPLv2的协议开源。</zh-speak>
    </Feature>
    <Feature data="Tech Talk PSE" zh-data="" id="973" uri="http://dbpedia.org/resource/Tech_Talk_PSE">
      <neighbors>
        <neighbor dest="788" relationship="programmin language" weight="0"/>
        <neighbor dest="457" relationship="license" weight="0"/>
        <neighbor dest="458" relationship="computing platform" weight="0"/>
      </neighbors>
      <speak>Tech Talk PSE is a Linux presentation software written by Richard Jones intended mostly for technical software demonstrations.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Ironside (1967 TV series)" zh-data="" id="974" uri="http://dbpedia.org/resource/Ironside_(1967_TV_series)">
      <neighbors>
        <neighbor dest="789" relationship="format" weight="0"/>
      </neighbors>
      <speak>Ironside is a Universal television series that ran on NBC from September 14, 1967, to January 16, 1975. The show starred Raymond Burr as a paraplegic Chief of Detectives, Robert T. Ironside.</speak>
      <zh-speak/>
    </Feature>
    <Feature data="Yukihiro Matsumoto" zh-data="松本行弘" id="975" uri="http://dbpedia.org/resource/Yukihiro_Matsumoto">
      <neighbors>
        <neighbor dest="790" relationship="known for" weight="0"/>
      </neighbors>
      <speak>Yukihiro Matsumoto . His demeanor has brought about a motto in the Ruby community "Matz is nice and so we are nice," commonly abbreviated as MINASWAN.As of 2011, Matsumoto is the Chief Architect of Ruby at Heroku, an online cloud platform-as-a-service in San Francisco.</speak>
      <zh-speak>松本行弘（日语：まつもとゆきひろ，别名Matz，1965年4月14日－）是一位日本计算机科学家和程序员。他是Ruby程序设计语言的主要设计者和实现者。株式会社VASILY的技术顾问。他的姓名的日文汉字写法为「松本行弘」，但通常被写成平假名的形式：まつもとゆきひろ。</zh-speak>
    </Feature>
    <Feature data="BSD licenses" zh-data="BSD许可证" id="976" uri="http://dbpedia.org/resource/BSD_licenses">
      <neighbors/>
      <speak>BSD licenses are a family of permissive free software licenses, imposing minimal restrictions on the redistribution of covered software.</speak>
      <zh-speak>BSD许可证（英语：Berkeley Software Distribution license），是自由软件中使用最广泛的许可证之一。BSD软件就是遵照这个许可证来发布，该许可证也因此而得名。BSD套件最初所有者是加州大學的董事会，这是由于BSD源自加州大学伯克利分校。BSD开始后，BSD许可证得以修正，使得以后许多BSD变种，都采用类似风格的许可证。跟其他许可证相比，从GNU通用公共许可证（GPL）到限制重重的著作权（Copyright），BSD许可证比较宽松，甚至跟公有领域更为接近。事实上，BSD许可证被认为是copycenter（中间版权），介乎标准的copyright与GPL的copyleft之间。"Take it down to the copy center and make as many copies as you want"。可以說，GPL強迫後續版本必須一樣是自由軟體，BSD的後續版本可以選擇要繼續是BSD或其他自由軟體條款或封閉軟體等等。</zh-speak>
    </Feature>
    <Feature data="Elixir (programming language)" zh-data="Elixir" id="977" uri="http://dbpedia.org/resource/Elixir_(programming_language)">
      <neighbors>
        <neighbor dest="785" relationship="paradigm" weight="0"/>
        <neighbor dest="790" relationship="influenced by" weight="0"/>
        <neighbor dest="920" relationship="influenced by" weight="0"/>
        <neighbor dest="795" relationship="paradigm" weight="0"/>
        <neighbor dest="797" relationship="typing" weight="0"/>
        <neighbor dest="799" relationship="typing" weight="0"/>
        <neighbor dest="921" relationship="paradigm" weight="0"/>
        <neighbor dest="977" relationship="creator" weight="0"/>
      </neighbors>
      <speak>Elixir is a functional, concurrent, general-purpose programming language built atop the Erlang Virtual Machine . Elixir builds on top of Erlang to provide distributed, fault-tolerant, soft real-time, non-stop applications but also extends it to support metaprogramming with macros and polymorphism via protocols.</speak>
      <zh-speak>Elixir 是一个基于 Erlang 虚拟机的函数式、面向并行的通用编程语言。Elixir 以 Erlang 为基础，支持分布式、高容错、实时应用程序的开发，同时亦对其进行扩展使之借助宏实现元编程，并通过协议支持多态。</zh-speak>
    </Feature>
  </Features>
</AIMind>